(module
 (type $0 (func (param i32) (result i32)))
 (type $1 (func (param i32 i32) (result i32)))
 (type $2 (func))
 (type $3 (func (result i32)))
 (type $4 (func (param i32 i32 i32) (result i32)))
 (type $5 (func (param i32)))
 (type $6 (func (param i32 i32)))
 (type $7 (func (param i32 i32 i32)))
 (type $8 (func (param f64 f64) (result f64)))
 (type $9 (func (param i32 i32) (result f64)))
 (type $10 (func (param i32) (result f64)))
 (type $11 (func (param i32 i32 f64)))
 (type $12 (func (param i32 i32 i32 i32) (result i32)))
 (type $13 (func (param f64) (result i32)))
 (type $14 (func (param f64) (result f64)))
 (type $15 (func (param f64 f64 i32 i32) (result f64)))
 (type $16 (func (param i32 f64) (result i32)))
 (type $17 (func (param i32 i32 i32 i32)))
 (type $18 (func (result f64)))
 (type $19 (func (param i64) (result i32)))
 (type $20 (func (param f64 i32) (result f64)))
 (type $21 (func (param i64 i64) (result i32)))
 (type $22 (func (param i32 f64)))
 (type $23 (func (param i32 f64 f64 f64) (result i32)))
 (type $24 (func (param i32 i32 f64) (result i32)))
 (type $25 (func (param i32 i32 i64)))
 (type $26 (func (param i64 i64 i64) (result i64)))
 (type $27 (func (param i32) (result i64)))
 (type $28 (func (param i64) (result i64)))
 (type $29 (func (param i32 i64 i32 i32)))
 (type $30 (func (param i64 i64 i32 i64 i32) (result i32)))
 (type $31 (func (param i64 i64 i64) (result i32)))
 (type $32 (func (param i64 i64) (result i64)))
 (type $33 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $34 (func (param i32 i32 f64) (result f64)))
 (type $35 (func (param f64 f64 f64 f64 i32 f64) (result i32)))
 (type $36 (func (param f64 i32) (result i32)))
 (type $37 (func (param f64 f64) (result i32)))
 (type $38 (func (param i32 i32 i32 i32 f64 i32) (result i32)))
 (type $39 (func (param i32 i32 i32 f64) (result i32)))
 (type $40 (func (param i32 i32 f64 i32)))
 (type $41 (func (param f64 f64 f64 f64) (result i32)))
 (type $42 (func (param i32 f64 f64) (result i32)))
 (type $43 (func (param i32 i32 i32 i32 i32)))
 (type $44 (func (param f64 f64 i32) (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "console.log" (func $~lib/bindings/dom/console.log (param i32)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (import "env" "Date.now" (func $~lib/bindings/dom/Date.now (result f64)))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 152408))
 (global $assembly/runtime/instructions/instructionHandlers (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $assembly/resolang/currentNode (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/math/rempio2_y1 (mut f64) (f64.const 0))
 (global $~lib/math/rempio2_y0 (mut f64) (f64.const 0))
 (global $assembly/tests/runtime.test/mockInstructionHandlers (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/util/string/__fixmulShift (mut i64) (i64.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $assembly/entropy-viz/globalTracker (mut i32) (i32.const 0))
 (global $assembly/entropy-viz/globalSampler (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/math/res128_hi (mut i64) (i64.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $assembly/runtime/instructions/system/tick/tick (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/system/random/random (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/system/output/output (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/system/halt/halt (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/symbolic/scale/scale (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/symbolic/mix/mix (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/symbolic/load/load (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/symbolic/add/add (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/resonance/resonance/resonance (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/resonance/factorize/factorize (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/resonance/evolve/evolve (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/resonance/entropy/entropy (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/quantum/reconstruct/reconstruct (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/quantum/observe/observe (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/quantum/measure/measure (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/quantum/collapse/collapse (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/phase/entangle/entangle (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/phase/decohere/decohere (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/phase/advphase/advphase (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/phase/setphase/setphase (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/ifcoh/ifcoh (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/if/ifInstruction (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/goto/gotoInstruction (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/endwhile/endwhile (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/endloop/endloop (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/endif/endif (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/else/elseInstruction (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/continue/continueInstruction (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/call/call (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/break/breakInstruction (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/coherence/waitcoh/waitcoh (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/coherence/threshold/threshold (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/coherence/coherenceall/coherenceall (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/coherence/coherence/coherence (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/resonance/Factorize (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/resonance/Resonance (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLock (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/quaternionic/QuatReceive (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/quaternionic/QuatSend (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/quaternionic/QuatCreate (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherence (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAll (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/multiBasis/BasisTransform (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/multiBasis/BasisCreate (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/holographic/HoloReconstruct (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/holographic/HoloFragment (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/holographic/HoloRetrieve (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/holographic/HoloStore (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/util/math/log_tail (mut f64) (f64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $assembly/core/plugin-system/serviceLocator (mut i32) (i32.const 0))
 (global $assembly/core/plugin-system/pluginManager (mut i32) (i32.const 0))
 (global $assembly/core/module-interfaces/moduleRegistry (mut i32) (i32.const 0))
 (global $assembly/core/event-system/globalEventBus (mut i32) (i32.const 0))
 (global $assembly/core/validation/ValidationMetadata.metadata (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 118688))
 (memory $0 3 16)
 (data $0 (i32.const 1036) "\1c\01")
 (data $0.1 (i32.const 1048) "\01\00\00\00\00\01\00\00\98/\8aB\91D7q\cf\fb\c0\b5\a5\db\b5\e9[\c2V9\f1\11\f1Y\a4\82?\92\d5^\1c\ab\98\aa\07\d8\01[\83\12\be\851$\c3}\0cUt]\ber\fe\b1\de\80\a7\06\dc\9bt\f1\9b\c1\c1i\9b\e4\86G\be\ef\c6\9d\c1\0f\cc\a1\0c$o,\e9-\aa\84tJ\dc\a9\b0\\\da\88\f9vRQ>\98m\c61\a8\c8\'\03\b0\c7\7fY\bf\f3\0b\e0\c6G\91\a7\d5Qc\ca\06g))\14\85\n\b7\'8!\1b.\fcm,M\13\r8STs\ne\bb\njv.\c9\c2\81\85,r\92\a1\e8\bf\a2Kf\1a\a8p\8bK\c2\a3Ql\c7\19\e8\92\d1$\06\99\d6\855\0e\f4p\a0j\10\16\c1\a4\19\08l7\1eLwH\'\b5\bc\b04\b3\0c\1c9J\aa\d8NO\ca\9c[\f3o.h\ee\82\8ftoc\a5x\14x\c8\84\08\02\c7\8c\fa\ff\be\90\eblP\a4\f7\a3\f9\be\f2xq\c6")
 (data $1 (i32.const 1324) ",")
 (data $1.1 (i32.const 1336) "\08\00\00\00\10\00\00\00 \04\00\00 \04\00\00\00\01\00\00@")
 (data $2 (i32.const 1372) "<")
 (data $2.1 (i32.const 1384) "\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data $3 (i32.const 1436) "<")
 (data $3.1 (i32.const 1448) "\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s")
 (data $6 (i32.const 1564) "<")
 (data $6.1 (i32.const 1576) "\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data $7 (i32.const 1628) ",")
 (data $7.1 (i32.const 1640) "\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s")
 (data $9 (i32.const 1708) "<")
 (data $9.1 (i32.const 1720) "\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data $10 (i32.const 1772) ",")
 (data $10.1 (i32.const 1784) "\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h")
 (data $11 (i32.const 1820) "<")
 (data $11.1 (i32.const 1832) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s")
 (data $12 (i32.const 1884) ",")
 (data $12.1 (i32.const 1896) "\02\00\00\00\14\00\00\00H\00O\00L\00O\00_\00S\00T\00O\00R\00E")
 (data $13 (i32.const 1932) ",")
 (data $13.1 (i32.const 1944) "\02\00\00\00\1a\00\00\00H\00O\00L\00O\00_\00R\00E\00T\00R\00I\00E\00V\00E")
 (data $14 (i32.const 1980) ",")
 (data $14.1 (i32.const 1992) "\02\00\00\00\1a\00\00\00H\00O\00L\00O\00_\00F\00R\00A\00G\00M\00E\00N\00T")
 (data $15 (i32.const 2028) "<")
 (data $15.1 (i32.const 2040) "\02\00\00\00 \00\00\00H\00O\00L\00O\00_\00R\00E\00C\00O\00N\00S\00T\00R\00U\00C\00T")
 (data $16 (i32.const 2092) ",")
 (data $16.1 (i32.const 2104) "\02\00\00\00\18\00\00\00B\00A\00S\00I\00S\00_\00C\00R\00E\00A\00T\00E")
 (data $17 (i32.const 2140) "<")
 (data $17.1 (i32.const 2152) "\02\00\00\00\1e\00\00\00B\00A\00S\00I\00S\00_\00T\00R\00A\00N\00S\00F\00O\00R\00M")
 (data $18 (i32.const 2204) ",")
 (data $18.1 (i32.const 2216) "\02\00\00\00\1c\00\00\00B\00A\00S\00I\00S\00_\00S\00Y\00N\00C\00_\00A\00L\00L")
 (data $19 (i32.const 2252) "<")
 (data $19.1 (i32.const 2264) "\02\00\00\00*\00\00\00C\00R\00O\00S\00S\00_\00B\00A\00S\00I\00S\00_\00C\00O\00H\00E\00R\00E\00N\00C\00E")
 (data $20 (i32.const 2316) ",")
 (data $20.1 (i32.const 2328) "\02\00\00\00\16\00\00\00Q\00U\00A\00T\00_\00C\00R\00E\00A\00T\00E")
 (data $21 (i32.const 2364) ",")
 (data $21.1 (i32.const 2376) "\02\00\00\00\12\00\00\00Q\00U\00A\00T\00_\00S\00E\00N\00D")
 (data $22 (i32.const 2412) ",")
 (data $22.1 (i32.const 2424) "\02\00\00\00\18\00\00\00Q\00U\00A\00T\00_\00R\00E\00C\00E\00I\00V\00E")
 (data $23 (i32.const 2460) "<")
 (data $23.1 (i32.const 2472) "\02\00\00\00\1e\00\00\00Q\00U\00A\00T\00_\00P\00H\00A\00S\00E\00_\00L\00O\00C\00K")
 (data $24 (i32.const 2524) ",")
 (data $24.1 (i32.const 2536) "\02\00\00\00\1a\00\00\00A\00D\00V\00_\00R\00E\00S\00O\00N\00A\00N\00C\00E")
 (data $25 (i32.const 2572) ",")
 (data $25.1 (i32.const 2584) "\02\00\00\00\1a\00\00\00A\00D\00V\00_\00F\00A\00C\00T\00O\00R\00I\00Z\00E")
 (data $26 (i32.const 2620) ",")
 (data $26.1 (i32.const 2632) "\02\00\00\00\12\00\00\00C\00O\00H\00E\00R\00E\00N\00C\00E")
 (data $27 (i32.const 2668) ",")
 (data $27.1 (i32.const 2680) "\02\00\00\00\18\00\00\00C\00O\00H\00E\00R\00E\00N\00C\00E\00A\00L\00L")
 (data $28 (i32.const 2716) ",")
 (data $28.1 (i32.const 2728) "\02\00\00\00\12\00\00\00T\00H\00R\00E\00S\00H\00O\00L\00D")
 (data $29 (i32.const 2764) ",")
 (data $29.1 (i32.const 2776) "\02\00\00\00\0e\00\00\00W\00A\00I\00T\00C\00O\00H")
 (data $30 (i32.const 2812) "\1c")
 (data $30.1 (i32.const 2824) "\02\00\00\00\n\00\00\00B\00R\00E\00A\00K")
 (data $31 (i32.const 2844) "\1c")
 (data $31.1 (i32.const 2856) "\02\00\00\00\08\00\00\00C\00A\00L\00L")
 (data $32 (i32.const 2876) ",")
 (data $32.1 (i32.const 2888) "\02\00\00\00\10\00\00\00C\00O\00N\00T\00I\00N\00U\00E")
 (data $33 (i32.const 2924) "\1c")
 (data $33.1 (i32.const 2936) "\02\00\00\00\08\00\00\00E\00L\00S\00E")
 (data $34 (i32.const 2956) "\1c")
 (data $34.1 (i32.const 2968) "\02\00\00\00\n\00\00\00E\00N\00D\00I\00F")
 (data $35 (i32.const 2988) ",")
 (data $35.1 (i32.const 3000) "\02\00\00\00\0e\00\00\00E\00N\00D\00L\00O\00O\00P")
 (data $36 (i32.const 3036) ",")
 (data $36.1 (i32.const 3048) "\02\00\00\00\10\00\00\00E\00N\00D\00W\00H\00I\00L\00E")
 (data $37 (i32.const 3084) "\1c")
 (data $37.1 (i32.const 3096) "\02\00\00\00\08\00\00\00G\00O\00T\00O")
 (data $38 (i32.const 3116) "\1c")
 (data $38.1 (i32.const 3128) "\02\00\00\00\04\00\00\00I\00F")
 (data $39 (i32.const 3148) "\1c")
 (data $39.1 (i32.const 3160) "\02\00\00\00\n\00\00\00I\00F\00C\00O\00H")
 (data $40 (i32.const 3180) ",")
 (data $40.1 (i32.const 3192) "\02\00\00\00\10\00\00\00S\00E\00T\00P\00H\00A\00S\00E")
 (data $41 (i32.const 3228) ",")
 (data $41.1 (i32.const 3240) "\02\00\00\00\10\00\00\00A\00D\00V\00P\00H\00A\00S\00E")
 (data $42 (i32.const 3276) ",")
 (data $42.1 (i32.const 3288) "\02\00\00\00\10\00\00\00D\00E\00C\00O\00H\00E\00R\00E")
 (data $43 (i32.const 3324) ",")
 (data $43.1 (i32.const 3336) "\02\00\00\00\10\00\00\00E\00N\00T\00A\00N\00G\00L\00E")
 (data $44 (i32.const 3372) ",")
 (data $44.1 (i32.const 3384) "\02\00\00\00\10\00\00\00C\00O\00L\00L\00A\00P\00S\00E")
 (data $45 (i32.const 3420) ",")
 (data $45.1 (i32.const 3432) "\02\00\00\00\0e\00\00\00M\00E\00A\00S\00U\00R\00E")
 (data $46 (i32.const 3468) ",")
 (data $46.1 (i32.const 3480) "\02\00\00\00\0e\00\00\00O\00B\00S\00E\00R\00V\00E")
 (data $47 (i32.const 3516) ",")
 (data $47.1 (i32.const 3528) "\02\00\00\00\16\00\00\00R\00E\00C\00O\00N\00S\00T\00R\00U\00C\00T")
 (data $48 (i32.const 3564) ",")
 (data $48.1 (i32.const 3576) "\02\00\00\00\0e\00\00\00E\00N\00T\00R\00O\00P\00Y")
 (data $49 (i32.const 3612) "\1c")
 (data $49.1 (i32.const 3624) "\02\00\00\00\0c\00\00\00E\00V\00O\00L\00V\00E")
 (data $50 (i32.const 3644) ",")
 (data $50.1 (i32.const 3656) "\02\00\00\00\12\00\00\00F\00A\00C\00T\00O\00R\00I\00Z\00E")
 (data $51 (i32.const 3692) ",")
 (data $51.1 (i32.const 3704) "\02\00\00\00\12\00\00\00R\00E\00S\00O\00N\00A\00N\00C\00E")
 (data $52 (i32.const 3740) "\1c")
 (data $52.1 (i32.const 3752) "\02\00\00\00\06\00\00\00A\00D\00D")
 (data $53 (i32.const 3772) "\1c")
 (data $53.1 (i32.const 3784) "\02\00\00\00\08\00\00\00L\00O\00A\00D")
 (data $54 (i32.const 3804) "\1c")
 (data $54.1 (i32.const 3816) "\02\00\00\00\06\00\00\00M\00I\00X")
 (data $55 (i32.const 3836) "\1c")
 (data $55.1 (i32.const 3848) "\02\00\00\00\n\00\00\00S\00C\00A\00L\00E")
 (data $56 (i32.const 3868) "\1c")
 (data $56.1 (i32.const 3880) "\02\00\00\00\08\00\00\00H\00A\00L\00T")
 (data $57 (i32.const 3900) "\1c")
 (data $57.1 (i32.const 3912) "\02\00\00\00\0c\00\00\00O\00U\00T\00P\00U\00T")
 (data $58 (i32.const 3932) "\1c")
 (data $58.1 (i32.const 3944) "\02\00\00\00\0c\00\00\00R\00A\00N\00D\00O\00M")
 (data $59 (i32.const 3964) "\1c")
 (data $59.1 (i32.const 3976) "\02\00\00\00\08\00\00\00T\00I\00C\00K")
 (data $60 (i32.const 3996) "<")
 (data $60.1 (i32.const 4008) "\01\00\00\00 \00\00\00g\e6\tj\85\aeg\bbr\f3n<:\f5O\a5\7fR\0eQ\8ch\05\9b\ab\d9\83\1f\19\cd\e0[")
 (data $61 (i32.const 4060) ",")
 (data $61.1 (i32.const 4072) "\08\00\00\00\10\00\00\00\b0\0f\00\00\b0\0f\00\00 \00\00\00\08")
 (data $62 (i32.const 4108) "\1c\01")
 (data $62.1 (i32.const 4120) "\01\00\00\00\00\01\00\00\98/\8aB\91D7q\cf\fb\c0\b5\a5\db\b5\e9[\c2V9\f1\11\f1Y\a4\82?\92\d5^\1c\ab\98\aa\07\d8\01[\83\12\be\851$\c3}\0cUt]\ber\fe\b1\de\80\a7\06\dc\9bt\f1\9b\c1\c1i\9b\e4\86G\be\ef\c6\9d\c1\0f\cc\a1\0c$o,\e9-\aa\84tJ\dc\a9\b0\\\da\88\f9vRQ>\98m\c61\a8\c8\'\03\b0\c7\7fY\bf\f3\0b\e0\c6G\91\a7\d5Qc\ca\06g))\14\85\n\b7\'8!\1b.\fcm,M\13\r8STs\ne\bb\njv.\c9\c2\81\85,r\92\a1\e8\bf\a2Kf\1a\a8p\8bK\c2\a3Ql\c7\19\e8\92\d1$\06\99\d6\855\0e\f4p\a0j\10\16\c1\a4\19\08l7\1eLwH\'\b5\bc\b04\b3\0c\1c9J\aa\d8NO\ca\9c[\f3o.h\ee\82\8ftoc\a5x\14x\c8\84\08\02\c7\8c\fa\ff\be\90\eblP\a4\f7\a3\f9\be\f2xq\c6")
 (data $63 (i32.const 4396) ",")
 (data $63.1 (i32.const 4408) "\08\00\00\00\10\00\00\00 \10\00\00 \10\00\00\00\01\00\00@")
 (data $64 (i32.const 4444) "\1c")
 (data $64.1 (i32.const 4456) "\01")
 (data $65 (i32.const 4476) ",")
 (data $65.1 (i32.const 4488) ">\00\00\00\10\00\00\00p\11\00\00p\11")
 (data $66 (i32.const 4524) "<")
 (data $66.1 (i32.const 4536) "\02\00\00\00,\00\00\00S\00y\00s\00t\00e\00m\00 \00n\00o\00t\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d")
 (data $67 (i32.const 4588) "L")
 (data $67.1 (i32.const 4600) "\02\00\00\004\00\00\00S\00y\00s\00t\00e\00m\00 \00a\00l\00r\00e\00a\00d\00y\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d")
 (data $68 (i32.const 4668) ",")
 (data $68.1 (i32.const 4680) "\02\00\00\00\1a\00\00\00O\00u\00t\00 \00o\00f\00 \00m\00e\00m\00o\00r\00y")
 (data $69 (i32.const 4716) "<")
 (data $69.1 (i32.const 4728) "\02\00\00\00&\00\00\00O\00p\00e\00r\00a\00t\00i\00o\00n\00 \00t\00i\00m\00e\00d\00 \00o\00u\00t")
 (data $70 (i32.const 4780) "l")
 (data $70.1 (i32.const 4792) "\02\00\00\00P\00\00\00F\00a\00i\00l\00e\00d\00 \00t\00o\00 \00e\00s\00t\00a\00b\00l\00i\00s\00h\00 \00c\00o\00n\00n\00e\00c\00t\00i\00o\00n\00 \00t\00o\00 \00{\00h\00o\00s\00t\00}")
 (data $71 (i32.const 4892) "L")
 (data $71.1 (i32.const 4904) "\02\00\00\008\00\00\00P\00e\00e\00r\00 \00{\00p\00e\00e\00r\00I\00d\00}\00 \00i\00s\00 \00u\00n\00r\00e\00a\00c\00h\00a\00b\00l\00e")
 (data $72 (i32.const 4972) "\8c")
 (data $72.1 (i32.const 4984) "\02\00\00\00x\00\00\00P\00r\00o\00t\00o\00c\00o\00l\00 \00v\00e\00r\00s\00i\00o\00n\00 \00m\00i\00s\00m\00a\00t\00c\00h\00:\00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00{\00e\00x\00p\00e\00c\00t\00e\00d\00}\00,\00 \00g\00o\00t\00 \00{\00a\00c\00t\00u\00a\00l\00}")
 (data $73 (i32.const 5116) "L")
 (data $73.1 (i32.const 5128) "\02\00\00\006\00\00\00F\00i\00e\00l\00d\00 \00\'\00{\00f\00i\00e\00l\00d\00}\00\'\00 \00i\00s\00 \00r\00e\00q\00u\00i\00r\00e\00d")
 (data $74 (i32.const 5196) "l")
 (data $74.1 (i32.const 5208) "\02\00\00\00X\00\00\00F\00i\00e\00l\00d\00 \00\'\00{\00f\00i\00e\00l\00d\00}\00\'\00 \00h\00a\00s\00 \00i\00n\00v\00a\00l\00i\00d\00 \00f\00o\00r\00m\00a\00t\00:\00 \00{\00f\00o\00r\00m\00a\00t\00}")
 (data $75 (i32.const 5308) "l")
 (data $75.1 (i32.const 5320) "\02\00\00\00X\00\00\00V\00a\00l\00u\00e\00 \00{\00v\00a\00l\00u\00e\00}\00 \00i\00s\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00 \00[\00{\00m\00i\00n\00}\00,\00 \00{\00m\00a\00x\00}\00]")
 (data $76 (i32.const 5420) "l")
 (data $76.1 (i32.const 5432) "\02\00\00\00R\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00s\00i\00g\00n\00a\00t\00u\00r\00e\00 \00f\00o\00r\00 \00m\00e\00s\00s\00a\00g\00e\00 \00{\00m\00e\00s\00s\00a\00g\00e\00I\00d\00}")
 (data $77 (i32.const 5532) "\\")
 (data $77.1 (i32.const 5544) "\02\00\00\00H\00\00\00C\00r\00y\00p\00t\00o\00g\00r\00a\00p\00h\00i\00c\00 \00k\00e\00y\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00:\00 \00{\00k\00e\00y\00I\00d\00}")
 (data $78 (i32.const 5628) "L")
 (data $78.1 (i32.const 5640) "\02\00\00\006\00\00\00E\00n\00c\00r\00y\00p\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00:\00 \00{\00r\00e\00a\00s\00o\00n\00}")
 (data $79 (i32.const 5708) "<")
 (data $79.1 (i32.const 5720) "\02\00\00\00(\00\00\00K\00e\00y\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00:\00 \00{\00k\00e\00y\00}")
 (data $80 (i32.const 5772) "L")
 (data $80.1 (i32.const 5784) "\02\00\00\004\00\00\00C\00o\00r\00r\00u\00p\00t\00 \00d\00a\00t\00a\00 \00a\00t\00 \00k\00e\00y\00:\00 \00{\00k\00e\00y\00}")
 (data $81 (i32.const 5852) "<")
 (data $81.1 (i32.const 5864) "\02\00\00\00,\00\00\00S\00t\00o\00r\00a\00g\00e\00 \00q\00u\00o\00t\00a\00 \00e\00x\00c\00e\00e\00d\00e\00d")
 (data $82 (i32.const 5916) "\1c")
 (data $82.1 (i32.const 5928) "\01")
 (data $83 (i32.const 5948) "\1c")
 (data $83.1 (i32.const 5960) "\01")
 (data $84 (i32.const 5980) "\1c")
 (data $84.1 (i32.const 5992) "\01")
 (data $85 (i32.const 6012) ",")
 (data $85.1 (i32.const 6024) "\02\00\00\00\10\00\00\00M\00O\00C\00K\00_\00A\00D\00D")
 (data $86 (i32.const 6060) "\1c")
 (data $86.1 (i32.const 6072) "\02\00\00\00\08\00\00\00J\00U\00M\00P")
 (data $87 (i32.const 6092) "\1c")
 (data $87.1 (i32.const 6104) "\02\00\00\00\n\00\00\00L\00A\00B\00E\00L")
 (data $88 (i32.const 6124) ",")
 (data $88.1 (i32.const 6136) "\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $89 (i32.const 6172) "<")
 (data $89.1 (i32.const 6184) "\02\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t")
 (data $90 (i32.const 6236) ",")
 (data $90.1 (i32.const 6248) "\02\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s")
 (data $91 (i32.const 6284) "\1c")
 (data $91.1 (i32.const 6296) "l\00\00\00\08\00\00\00\01")
 (data $92 (i32.const 6316) "\\")
 (data $92.1 (i32.const 6328) "\02\00\00\00J\00\00\00=\00=\00=\00 \00R\00u\00n\00n\00i\00n\00g\00 \00A\00s\00s\00e\00m\00b\00l\00y\00S\00c\00r\00i\00p\00t\00 \00T\00e\00s\00t\00s\00 \00=\00=\00=\00\n")
 (data $93 (i32.const 6412) "<")
 (data $93.1 (i32.const 6424) "\02\00\00\00*\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00M\00a\00t\00h\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $94 (i32.const 6476) "L")
 (data $94.1 (i32.const 6488) "\02\00\00\008\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00m\00a\00t\00h\00 \00m\00o\00d\00u\00l\00e\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $95 (i32.const 6556) "<")
 (data $95.1 (i32.const 6568) "\02\00\00\00\"\00\00\002\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $96 (i32.const 6620) "\\")
 (data $96.1 (i32.const 6632) "\02\00\00\00@\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00c\00o\00r\00e\00-\00m\00a\00t\00h\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $97 (i32.const 6716) "<")
 (data $97.1 (i32.const 6728) "\02\00\00\00\"\00\00\003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $98 (i32.const 6780) "<")
 (data $98.1 (i32.const 6792) "\02\00\00\00\"\00\00\005\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $99 (i32.const 6844) "<")
 (data $99.1 (i32.const 6856) "\02\00\00\00\"\00\00\007\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $100 (i32.const 6908) "<")
 (data $100.1 (i32.const 6920) "\02\00\00\00$\00\00\001\001\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $101 (i32.const 6972) "<")
 (data $101.1 (i32.const 6984) "\02\00\00\00$\00\00\001\003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $102 (i32.const 7036) "<")
 (data $102.1 (i32.const 7048) "\02\00\00\00*\00\00\000\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $103 (i32.const 7100) "<")
 (data $103.1 (i32.const 7112) "\02\00\00\00*\00\00\001\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $104 (i32.const 7164) "<")
 (data $104.1 (i32.const 7176) "\02\00\00\00*\00\00\004\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $105 (i32.const 7228) "<")
 (data $105.1 (i32.const 7240) "\02\00\00\00*\00\00\006\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $106 (i32.const 7292) "<")
 (data $106.1 (i32.const 7304) "\02\00\00\00*\00\00\008\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $107 (i32.const 7356) "<")
 (data $107.1 (i32.const 7368) "\02\00\00\00*\00\00\009\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $108 (i32.const 7420) "<")
 (data $108.1 (i32.const 7432) "\02\00\00\00,\00\00\001\000\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $109 (i32.const 7484) "<")
 (data $109.1 (i32.const 7496) "\02\00\00\00$\00\00\009\007\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $110 (i32.const 7548) "<")
 (data $110.1 (i32.const 7560) "\02\00\00\00&\00\00\001\000\001\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $111 (i32.const 7612) "<")
 (data $111.1 (i32.const 7624) "\02\00\00\00&\00\00\001\000\003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $112 (i32.const 7676) "L")
 (data $112.1 (i32.const 7688) "\02\00\00\00.\00\00\001\000\000\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $113 (i32.const 7756) "L")
 (data $113.1 (i32.const 7768) "\02\00\00\00.\00\00\001\000\002\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $114 (i32.const 7836) "<")
 (data $114.1 (i32.const 7848) "\02\00\00\00*\00\00\00\13\' \00i\00s\00P\00r\00i\00m\00e\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $115 (i32.const 7900) "L")
 (data $115.1 (i32.const 7912) "\02\00\00\00.\00\00\002\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e\00 \00(\00u\006\004\00)")
 (data $116 (i32.const 7980) "L")
 (data $116.1 (i32.const 7992) "\02\00\00\00.\00\00\003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e\00 \00(\00u\006\004\00)")
 (data $117 (i32.const 8060) "L")
 (data $117.1 (i32.const 8072) "\02\00\00\00.\00\00\005\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e\00 \00(\00u\006\004\00)")
 (data $118 (i32.const 8140) "<")
 (data $118.1 (i32.const 8152) "\02\00\00\00(\00\00\001\000\000\009\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $119 (i32.const 8204) "<")
 (data $119.1 (i32.const 8216) "\02\00\00\00*\00\00\001\000\000\000\007\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $120 (i32.const 8268) "L")
 (data $120.1 (i32.const 8280) "\02\00\00\000\00\00\001\000\000\000\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $121 (i32.const 8348) "L")
 (data $121.1 (i32.const 8360) "\02\00\00\002\00\00\001\000\000\000\000\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $122 (i32.const 8428) "L")
 (data $122.1 (i32.const 8440) "\02\00\00\004\00\00\00\13\' \00i\00s\00P\00r\00i\00m\00e\00L\00a\00r\00g\00e\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $123 (i32.const 8508) "L")
 (data $123.1 (i32.const 8520) "\02\00\00\00<\00\00\00N\00e\00x\00t\00 \00p\00r\00i\00m\00e\00 \00a\00f\00t\00e\00r\00 \002\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003")
 (data $124 (i32.const 8588) "L")
 (data $124.1 (i32.const 8600) "\02\00\00\00<\00\00\00N\00e\00x\00t\00 \00p\00r\00i\00m\00e\00 \00a\00f\00t\00e\00r\00 \003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $125 (i32.const 8668) "L")
 (data $125.1 (i32.const 8680) "\02\00\00\00<\00\00\00N\00e\00x\00t\00 \00p\00r\00i\00m\00e\00 \00a\00f\00t\00e\00r\00 \004\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $126 (i32.const 8748) "L")
 (data $126.1 (i32.const 8760) "\02\00\00\00<\00\00\00N\00e\00x\00t\00 \00p\00r\00i\00m\00e\00 \00a\00f\00t\00e\00r\00 \005\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \007")
 (data $127 (i32.const 8828) "\\")
 (data $127.1 (i32.const 8840) "\02\00\00\00@\00\00\00N\00e\00x\00t\00 \00p\00r\00i\00m\00e\00 \00a\00f\00t\00e\00r\00 \001\000\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\001")
 (data $128 (i32.const 8924) "\\")
 (data $128.1 (i32.const 8936) "\02\00\00\00D\00\00\00N\00e\00x\00t\00 \00p\00r\00i\00m\00e\00 \00a\00f\00t\00e\00r\00 \001\000\000\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\000\001")
 (data $129 (i32.const 9020) "L")
 (data $129.1 (i32.const 9032) "\02\00\00\00.\00\00\00\13\' \00n\00e\00x\00t\00P\00r\00i\00m\00e\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $130 (i32.const 9100) "L")
 (data $130.1 (i32.const 9112) "\02\00\00\000\00\00\00S\00h\00o\00u\00l\00d\00 \00g\00e\00n\00e\00r\00a\00t\00e\00 \005\00 \00p\00r\00i\00m\00e\00s")
 (data $131 (i32.const 9180) "L")
 (data $131.1 (i32.const 9192) "\02\00\00\00.\00\00\00F\00i\00r\00s\00t\00 \00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002")
 (data $132 (i32.const 9260) "L")
 (data $132.1 (i32.const 9272) "\02\00\00\000\00\00\00S\00e\00c\00o\00n\00d\00 \00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003")
 (data $133 (i32.const 9340) "L")
 (data $133.1 (i32.const 9352) "\02\00\00\00.\00\00\00T\00h\00i\00r\00d\00 \00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $134 (i32.const 9420) "L")
 (data $134.1 (i32.const 9432) "\02\00\00\000\00\00\00F\00o\00u\00r\00t\00h\00 \00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \007")
 (data $135 (i32.const 9500) "L")
 (data $135.1 (i32.const 9512) "\02\00\00\000\00\00\00F\00i\00f\00t\00h\00 \00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\001")
 (data $136 (i32.const 9580) "L")
 (data $136.1 (i32.const 9592) "\02\00\00\002\00\00\00S\00h\00o\00u\00l\00d\00 \00g\00e\00n\00e\00r\00a\00t\00e\00 \001\000\00 \00p\00r\00i\00m\00e\00s")
 (data $137 (i32.const 9660) "L")
 (data $137.1 (i32.const 9672) "\02\00\00\000\00\00\00T\00e\00n\00t\00h\00 \00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002\009")
 (data $138 (i32.const 9740) "L")
 (data $138.1 (i32.const 9752) "\02\00\00\008\00\00\00\13\' \00g\00e\00n\00e\00r\00a\00t\00e\00P\00r\00i\00m\00e\00s\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $139 (i32.const 9820) "L")
 (data $139.1 (i32.const 9832) "\02\00\00\006\00\00\00G\00C\00D\00 \00o\00f\00 \001\002\00 \00a\00n\00d\00 \008\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \004")
 (data $140 (i32.const 9900) "L")
 (data $140.1 (i32.const 9912) "\02\00\00\008\00\00\00G\00C\00D\00 \00o\00f\00 \005\004\00 \00a\00n\00d\00 \002\004\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \006")
 (data $141 (i32.const 9980) "L")
 (data $141.1 (i32.const 9992) "\02\00\00\008\00\00\00G\00C\00D\00 \00o\00f\00 \001\007\00 \00a\00n\00d\00 \001\003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $142 (i32.const 10060) "L")
 (data $142.1 (i32.const 10072) "\02\00\00\00<\00\00\00G\00C\00D\00 \00o\00f\00 \001\000\000\00 \00a\00n\00d\00 \005\000\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005\000")
 (data $143 (i32.const 10140) "L")
 (data $143.1 (i32.const 10152) "\02\00\00\004\00\00\00G\00C\00D\00 \00o\00f\00 \000\00 \00a\00n\00d\00 \005\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $144 (i32.const 10220) "L")
 (data $144.1 (i32.const 10232) "\02\00\00\004\00\00\00G\00C\00D\00 \00o\00f\00 \005\00 \00a\00n\00d\00 \000\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $145 (i32.const 10300) "<")
 (data $145.1 (i32.const 10312) "\02\00\00\00\"\00\00\00\13\' \00G\00C\00D\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $146 (i32.const 10364) "L")
 (data $146.1 (i32.const 10376) "\02\00\00\006\00\00\00L\00C\00M\00 \00o\00f\00 \004\00 \00a\00n\00d\00 \006\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\002")
 (data $147 (i32.const 10444) "L")
 (data $147.1 (i32.const 10456) "\02\00\00\006\00\00\00L\00C\00M\00 \00o\00f\00 \003\00 \00a\00n\00d\00 \005\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\005")
 (data $148 (i32.const 10524) "L")
 (data $148.1 (i32.const 10536) "\02\00\00\00:\00\00\00L\00C\00M\00 \00o\00f\00 \001\002\00 \00a\00n\00d\00 \001\008\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003\006")
 (data $149 (i32.const 10604) "L")
 (data $149.1 (i32.const 10616) "\02\00\00\004\00\00\00L\00C\00M\00 \00o\00f\00 \007\00 \00a\00n\00d\00 \007\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \007")
 (data $150 (i32.const 10684) "<")
 (data $150.1 (i32.const 10696) "\02\00\00\00\"\00\00\00\13\' \00L\00C\00M\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $151 (i32.const 10748) "<")
 (data $151.1 (i32.const 10760) "\02\00\00\00*\00\00\002\00^\003\00 \00m\00o\00d\00 \005\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003")
 (data $152 (i32.const 10812) "<")
 (data $152.1 (i32.const 10824) "\02\00\00\00*\00\00\003\00^\004\00 \00m\00o\00d\00 \007\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \004")
 (data $153 (i32.const 10876) "<")
 (data $153.1 (i32.const 10888) "\02\00\00\00,\00\00\005\00^\003\00 \00m\00o\00d\00 \001\003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \008")
 (data $154 (i32.const 10940) "L")
 (data $154.1 (i32.const 10952) "\02\00\00\004\00\00\002\00^\001\000\00 \00m\00o\00d\00 \001\000\000\000\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002\004")
 (data $155 (i32.const 11020) "\\")
 (data $155.1 (i32.const 11032) "\02\00\00\00H\00\00\00\13\' \00M\00o\00d\00u\00l\00a\00r\00 \00e\00x\00p\00o\00n\00e\00n\00t\00i\00a\00t\00i\00o\00n\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $156 (i32.const 11116) "L")
 (data $156.1 (i32.const 11128) "\02\00\00\00<\00\00\00I\00n\00v\00e\00r\00s\00e\00 \00o\00f\00 \003\00 \00m\00o\00d\00 \007\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $157 (i32.const 11196) "\\")
 (data $157.1 (i32.const 11208) "\02\00\00\00>\00\00\00I\00n\00v\00e\00r\00s\00e\00 \00o\00f\00 \005\00 \00m\00o\00d\00 \001\001\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \009")
 (data $158 (i32.const 11292) "\\")
 (data $158.1 (i32.const 11304) "\02\00\00\00>\00\00\00I\00n\00v\00e\00r\00s\00e\00 \00o\00f\00 \007\00 \00m\00o\00d\00 \001\003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002")
 (data $159 (i32.const 11388) "\\")
 (data $159.1 (i32.const 11400) "\02\00\00\00F\00\00\00I\00n\00v\00e\00r\00s\00e\00 \00o\00f\00 \006\00 \00m\00o\00d\00 \009\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t")
 (data $160 (i32.const 11484) "L")
 (data $160.1 (i32.const 11496) "\02\00\00\00:\00\00\00\13\' \00M\00o\00d\00u\00l\00a\00r\00 \00i\00n\00v\00e\00r\00s\00e\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $161 (i32.const 11564) "L")
 (data $161.1 (i32.const 11576) "\02\00\00\008\00\00\00G\00C\00D\00 \00o\00f\00 \003\000\00 \00a\00n\00d\00 \001\008\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \006")
 (data $162 (i32.const 11644) "l")
 (data $162.1 (i32.const 11656) "\02\00\00\00V\00\00\00B\00e\00z\00o\00u\00t\00 \00c\00o\00e\00f\00f\00i\00c\00i\00e\00n\00t\00s\00 \00s\00h\00o\00u\00l\00d\00 \00s\00a\00t\00i\00s\00f\00y\00 \00e\00q\00u\00a\00t\00i\00o\00n")
 (data $163 (i32.const 11756) "L")
 (data $163.1 (i32.const 11768) "\02\00\00\008\00\00\00G\00C\00D\00 \00o\00f\00 \003\005\00 \00a\00n\00d\00 \001\005\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $164 (i32.const 11836) "L")
 (data $164.1 (i32.const 11848) "\02\00\00\004\00\00\00\13\' \00E\00x\00t\00e\00n\00d\00e\00d\00 \00G\00C\00D\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $165 (i32.const 11916) "l")
 (data $165.1 (i32.const 11928) "\02\00\00\00R\00\00\008\00-\00b\00i\00t\00 \00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00i\00n\00 \00r\00a\00n\00g\00e\00 \00[\001\002\008\00,\00 \002\005\006\00)")
 (data $166 (i32.const 12028) "\\")
 (data $166.1 (i32.const 12040) "\02\00\00\00@\00\00\00G\00e\00n\00e\00r\00a\00t\00e\00d\00 \00n\00u\00m\00b\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00i\00m\00e")
 (data $167 (i32.const 12124) "\\")
 (data $167.1 (i32.const 12136) "\02\00\00\00F\00\00\00\13\' \00G\00e\00n\00e\00r\00a\00t\00e\00 \00s\00e\00c\00u\00r\00e\00 \00p\00r\00i\00m\00e\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $168 (i32.const 12220) "l")
 (data $168.1 (i32.const 12232) "\02\00\00\00T\00\00\00F\00a\00c\00t\00o\00r\00i\00a\00l\00 \00n\00o\00t\00 \00d\00e\00f\00i\00n\00e\00d\00 \00f\00o\00r\00 \00n\00e\00g\00a\00t\00i\00v\00e\00 \00n\00u\00m\00b\00e\00r\00s")
 (data $169 (i32.const 12332) "<")
 (data $169.1 (i32.const 12344) "\02\00\00\00*\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00o\00r\00e\00/\00m\00a\00t\00h\00.\00t\00s")
 (data $170 (i32.const 12396) ",")
 (data $170.1 (i32.const 12408) "\02\00\00\00\1c\00\00\000\00!\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $171 (i32.const 12444) ",")
 (data $171.1 (i32.const 12456) "\02\00\00\00\1c\00\00\001\00!\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $172 (i32.const 12492) "<")
 (data $172.1 (i32.const 12504) "\02\00\00\00 \00\00\005\00!\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\002\000")
 (data $173 (i32.const 12556) "<")
 (data $173.1 (i32.const 12568) "\02\00\00\00 \00\00\006\00!\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \007\002\000")
 (data $174 (i32.const 12620) "<")
 (data $174.1 (i32.const 12632) "\02\00\00\00*\00\00\001\000\00!\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003\006\002\008\008\000\000")
 (data $175 (i32.const 12684) "L")
 (data $175.1 (i32.const 12696) "\02\00\00\00.\00\00\00\13\' \00F\00a\00c\00t\00o\00r\00i\00a\00l\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $176 (i32.const 12764) "<")
 (data $176.1 (i32.const 12776) "\02\00\00\00 \00\00\00F\00(\000\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000")
 (data $177 (i32.const 12828) "<")
 (data $177.1 (i32.const 12840) "\02\00\00\00 \00\00\00F\00(\001\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $178 (i32.const 12892) "<")
 (data $178.1 (i32.const 12904) "\02\00\00\00 \00\00\00F\00(\002\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $179 (i32.const 12956) "<")
 (data $179.1 (i32.const 12968) "\02\00\00\00 \00\00\00F\00(\003\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002")
 (data $180 (i32.const 13020) "<")
 (data $180.1 (i32.const 13032) "\02\00\00\00 \00\00\00F\00(\004\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003")
 (data $181 (i32.const 13084) "<")
 (data $181.1 (i32.const 13096) "\02\00\00\00 \00\00\00F\00(\005\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $182 (i32.const 13148) "<")
 (data $182.1 (i32.const 13160) "\02\00\00\00$\00\00\00F\00(\001\000\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005\005")
 (data $183 (i32.const 13212) "L")
 (data $183.1 (i32.const 13224) "\02\00\00\00.\00\00\00\13\' \00F\00i\00b\00o\00n\00a\00c\00c\00i\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $184 (i32.const 13292) "l")
 (data $184.1 (i32.const 13304) "\02\00\00\00Z\00\00\00C\00a\00n\00n\00o\00t\00 \00c\00o\00m\00p\00u\00t\00e\00 \00s\00q\00u\00a\00r\00e\00 \00r\00o\00o\00t\00 \00o\00f\00 \00n\00e\00g\00a\00t\00i\00v\00e\00 \00n\00u\00m\00b\00e\00r")
 (data $185 (i32.const 13404) "<")
 (data $185.1 (i32.const 13416) "\02\00\00\00(\00\00\00i\00s\00q\00r\00t\00(\000\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000")
 (data $186 (i32.const 13468) "<")
 (data $186.1 (i32.const 13480) "\02\00\00\00(\00\00\00i\00s\00q\00r\00t\00(\001\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $187 (i32.const 13532) "<")
 (data $187.1 (i32.const 13544) "\02\00\00\00(\00\00\00i\00s\00q\00r\00t\00(\004\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002")
 (data $188 (i32.const 13596) "<")
 (data $188.1 (i32.const 13608) "\02\00\00\00(\00\00\00i\00s\00q\00r\00t\00(\009\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003")
 (data $189 (i32.const 13660) "<")
 (data $189.1 (i32.const 13672) "\02\00\00\00*\00\00\00i\00s\00q\00r\00t\00(\001\006\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \004")
 (data $190 (i32.const 13724) "<")
 (data $190.1 (i32.const 13736) "\02\00\00\00*\00\00\00i\00s\00q\00r\00t\00(\001\005\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003")
 (data $191 (i32.const 13788) "<")
 (data $191.1 (i32.const 13800) "\02\00\00\00*\00\00\00i\00s\00q\00r\00t\00(\001\007\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \004")
 (data $192 (i32.const 13852) "L")
 (data $192.1 (i32.const 13864) "\02\00\00\00.\00\00\00i\00s\00q\00r\00t\00(\001\000\000\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\000")
 (data $193 (i32.const 13932) "\\")
 (data $193.1 (i32.const 13944) "\02\00\00\00B\00\00\00\13\' \00I\00n\00t\00e\00g\00e\00r\00 \00s\00q\00u\00a\00r\00e\00 \00r\00o\00o\00t\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $194 (i32.const 14028) "<")
 (data $194.1 (i32.const 14040) "\02\00\00\00$\00\00\00C\00(\005\00,\000\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $195 (i32.const 14092) "<")
 (data $195.1 (i32.const 14104) "\02\00\00\00$\00\00\00C\00(\005\00,\001\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $196 (i32.const 14156) "<")
 (data $196.1 (i32.const 14168) "\02\00\00\00&\00\00\00C\00(\005\00,\002\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\000")
 (data $197 (i32.const 14220) "<")
 (data $197.1 (i32.const 14232) "\02\00\00\00&\00\00\00C\00(\005\00,\003\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\000")
 (data $198 (i32.const 14284) "<")
 (data $198.1 (i32.const 14296) "\02\00\00\00$\00\00\00C\00(\005\00,\004\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $199 (i32.const 14348) "<")
 (data $199.1 (i32.const 14360) "\02\00\00\00$\00\00\00C\00(\005\00,\005\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $200 (i32.const 14412) "<")
 (data $200.1 (i32.const 14424) "\02\00\00\00*\00\00\00C\00(\001\000\00,\003\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\002\000")
 (data $201 (i32.const 14476) "\\")
 (data $201.1 (i32.const 14488) "\02\00\00\00D\00\00\00\13\' \00B\00i\00n\00o\00m\00i\00a\00l\00 \00c\00o\00e\00f\00f\00i\00c\00i\00e\00n\00t\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $202 (i32.const 14572) "\\")
 (data $202.1 (i32.const 14584) "\02\00\00\00@\00\00\00\n\00A\00l\00l\00 \00m\00a\00t\00h\00 \00m\00o\00d\00u\00l\00e\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $203 (i32.const 14668) "L")
 (data $203.1 (i32.const 14680) "\02\00\00\00.\00\00\00\05\' \00M\00a\00t\00h\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $204 (i32.const 14748) "L")
 (data $204.1 (i32.const 14760) "\02\00\00\00.\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00C\00r\00y\00p\00t\00o\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $205 (i32.const 14828) "L")
 (data $205.1 (i32.const 14840) "\02\00\00\00<\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00c\00r\00y\00p\00t\00o\00 \00m\00o\00d\00u\00l\00e\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $206 (i32.const 14908) "\1c")
 (data $206.1 (i32.const 14920) "\02")
 (data $207 (i32.const 14940) "<")
 (data $207.1 (i32.const 14952) "\02\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $208 (i32.const 15004) "|")
 (data $208.1 (i32.const 15016) "\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006")
 (data $209 (i32.const 15132) "<")
 (data $209.1 (i32.const 15144) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s")
 (data $210 (i32.const 15196) "\1c")
 (data $210.1 (i32.const 15208) "\02\00\00\00\02\00\00\000")
 (data $211 (i32.const
 (data $212 (i32.const 15628) "\1c\04")
 (data $212.1 (i32.const 15640) "\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f")
 (data $213 (i32.const 16684) "\\")
 (data $213.1 (i32.const 16696) "\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data $214 (i32.const 16780) "\9c")
 (data $214.1 (i32.const 16792) "\02\00\00\00\80\00\00\00e\003\00b\000\00c\004\004\002\009\008\00f\00c\001\00c\001\004\009\00a\00f\00b\00f\004\00c\008\009\009\006\00f\00b\009\002\004\002\007\00a\00e\004\001\00e\004\006\004\009\00b\009\003\004\00c\00a\004\009\005\009\009\001\00b\007\008\005\002\00b\008\005\005")
 (data $215 (i32.const 16940) "|")
 (data $215.1 (i32.const 16952) "\02\00\00\00d\00\00\00S\00H\00A\00-\002\005\006\00 \00o\00f\00 \00e\00m\00p\00t\00y\00 \00s\00t\00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00m\00a\00t\00c\00h\00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00h\00a\00s\00h")
 (data $216 (i32.const 17068) "\\")
 (data $216.1 (i32.const 17080) "\02\00\00\00D\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00c\00o\00r\00e\00-\00c\00r\00y\00p\00t\00o\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $217 (i32.const 17164) "\\")
 (data $217.1 (i32.const 17176) "\02\00\00\00D\00\00\00\13\' \00S\00H\00A\00-\002\005\006\00 \00e\00m\00p\00t\00y\00 \00s\00t\00r\00i\00n\00g\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $218 (i32.const 17260) "\1c")
 (data $218.1 (i32.const 17272) "\02\00\00\00\06\00\00\00a\00b\00c")
 (data $219 (i32.const 17292) "\9c")
 (data $219.1 (i32.const 17304) "\02\00\00\00\80\00\00\00b\00a\007\008\001\006\00b\00f\008\00f\000\001\00c\00f\00e\00a\004\001\004\001\004\000\00d\00e\005\00d\00a\00e\002\002\002\003\00b\000\000\003\006\001\00a\003\009\006\001\007\007\00a\009\00c\00b\004\001\000\00f\00f\006\001\00f\002\000\000\001\005\00a\00d")
 (data $220 (i32.const 17452) "l")
 (data $220.1 (i32.const 17464) "\02\00\00\00V\00\00\00S\00H\00A\00-\002\005\006\00 \00o\00f\00 \00\'\00a\00b\00c\00\'\00 \00s\00h\00o\00u\00l\00d\00 \00m\00a\00t\00c\00h\00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00h\00a\00s\00h")
 (data $221 (i32.const 17564) "L")
 (data $221.1 (i32.const 17576) "\02\00\00\006\00\00\00\13\' \00S\00H\00A\00-\002\005\006\00 \00\'\00a\00b\00c\00\'\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $222 (i32.const 17644) "|")
 (data $222.1 (i32.const 17656) "\02\00\00\00`\00\00\00S\00H\00A\00-\002\005\006\00 \00o\00f\00 \00b\00y\00t\00e\00 \00a\00r\00r\00a\00y\00 \00s\00h\00o\00u\00l\00d\00 \00m\00a\00t\00c\00h\00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00h\00a\00s\00h")
 (data $223 (i32.const 17772) "\\")
 (data $223.1 (i32.const 17784) "\02\00\00\00@\00\00\00\13\' \00S\00H\00A\00-\002\005\006\00 \00b\00y\00t\00e\00 \00a\00r\00r\00a\00y\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $224 (i32.const 17868) "\\")
 (data $224.1 (i32.const 17880) "\02\00\00\00F\00\00\00H\00M\00A\00C\00-\00S\00H\00A\002\005\006\00 \00s\00h\00o\00u\00l\00d\00 \00p\00r\00o\00d\00u\00c\00e\00 \003\002\00 \00b\00y\00t\00e\00s")
 (data $225 (i32.const 17964) "L")
 (data $225.1 (i32.const 17976) "\02\00\00\002\00\00\00\13\' \00H\00M\00A\00C\00-\00S\00H\00A\002\005\006\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $226 (i32.const 18044) "l")
 (data $226.1 (i32.const 18056) "\02\00\00\00Z\00\00\00D\00i\00f\00f\00e\00r\00e\00n\00t\00 \00k\00e\00y\00s\00 \00s\00h\00o\00u\00l\00d\00 \00p\00r\00o\00d\00u\00c\00e\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00H\00M\00A\00C\00s")
 (data $227 (i32.const 18156) "l")
 (data $227.1 (i32.const 18168) "\02\00\00\00P\00\00\00\13\' \00H\00M\00A\00C\00-\00S\00H\00A\002\005\006\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00k\00e\00y\00s\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $228 (i32.const 18268) "l")
 (data $228.1 (i32.const 18280) "\02\00\00\00Z\00\00\00P\00B\00K\00D\00F\002\00 \00s\00h\00o\00u\00l\00d\00 \00p\00r\00o\00d\00u\00c\00e\00 \00k\00e\00y\00 \00o\00f\00 \00r\00e\00q\00u\00e\00s\00t\00e\00d\00 \00l\00e\00n\00g\00t\00h")
 (data $229 (i32.const 18380) "<")
 (data $229.1 (i32.const 18392) "\02\00\00\00(\00\00\00\13\' \00P\00B\00K\00D\00F\002\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $230 (i32.const 18444) "l")
 (data $230.1 (i32.const 18456) "\02\00\00\00Z\00\00\00D\00i\00f\00f\00e\00r\00e\00n\00t\00 \00s\00a\00l\00t\00s\00 \00s\00h\00o\00u\00l\00d\00 \00p\00r\00o\00d\00u\00c\00e\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00k\00e\00y\00s")
 (data $231 (i32.const 18556) "\\")
 (data $231.1 (i32.const 18568) "\02\00\00\00H\00\00\00\13\' \00P\00B\00K\00D\00F\002\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00s\00a\00l\00t\00s\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $232 (i32.const 18652) "\\")
 (data $232.1 (i32.const 18664) "\02\00\00\00H\00\00\00E\00q\00u\00a\00l\00 \00a\00r\00r\00a\00y\00s\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00m\00p\00a\00r\00e\00 \00a\00s\00 \00e\00q\00u\00a\00l")
 (data $233 (i32.const 18748) "l")
 (data $233.1 (i32.const 18760) "\02\00\00\00R\00\00\00\13\' \00C\00o\00n\00s\00t\00a\00n\00t\00 \00t\00i\00m\00e\00 \00c\00o\00m\00p\00a\00r\00e\00 \00e\00q\00u\00a\00l\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $234 (i32.const 18860) "l")
 (data $234.1 (i32.const 18872) "\02\00\00\00X\00\00\00D\00i\00f\00f\00e\00r\00e\00n\00t\00 \00a\00r\00r\00a\00y\00s\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00m\00p\00a\00r\00e\00 \00a\00s\00 \00n\00o\00t\00 \00e\00q\00u\00a\00l")
 (data $235 (i32.const 18972) "l")
 (data $235.1 (i32.const 18984) "\02\00\00\00Z\00\00\00\13\' \00C\00o\00n\00s\00t\00a\00n\00t\00 \00t\00i\00m\00e\00 \00c\00o\00m\00p\00a\00r\00e\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $236 (i32.const 19084) "\8c")
 (data $236.1 (i32.const 19096) "\02\00\00\00n\00\00\00A\00r\00r\00a\00y\00s\00 \00o\00f\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00l\00e\00n\00g\00t\00h\00s\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00m\00p\00a\00r\00e\00 \00a\00s\00 \00n\00o\00t\00 \00e\00q\00u\00a\00l")
 (data $237 (i32.const 19228) "|")
 (data $237.1 (i32.const 19240) "\02\00\00\00j\00\00\00\13\' \00C\00o\00n\00s\00t\00a\00n\00t\00 \00t\00i\00m\00e\00 \00c\00o\00m\00p\00a\00r\00e\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00l\00e\00n\00g\00t\00h\00s\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $238 (i32.const 19356) "\\")
 (data $238.1 (i32.const 19368) "\02\00\00\00H\00\00\00E\00m\00p\00t\00y\00 \00a\00r\00r\00a\00y\00s\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00m\00p\00a\00r\00e\00 \00a\00s\00 \00e\00q\00u\00a\00l")
 (data $239 (i32.const 19452) "l")
 (data $239.1 (i32.const 19464) "\02\00\00\00R\00\00\00\13\' \00C\00o\00n\00s\00t\00a\00n\00t\00 \00t\00i\00m\00e\00 \00c\00o\00m\00p\00a\00r\00e\00 \00e\00m\00p\00t\00y\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $240 (i32.const 19564) "\\")
 (data $240.1 (i32.const 19576) "\02\00\00\00D\00\00\00\n\00A\00l\00l\00 \00c\00r\00y\00p\00t\00o\00 \00m\00o\00d\00u\00l\00e\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $241 (i32.const 19660) "L")
 (data $241.1 (i32.const 19672) "\02\00\00\002\00\00\00\05\' \00C\00r\00y\00p\00t\00o\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $242 (i32.const 19740) "L")
 (data $242.1 (i32.const 19752) "\02\00\00\00.\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00E\00n\00g\00i\00n\00e\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $243 (i32.const 19820) ",")
 (data $243.1 (i32.const 19832) "\02\00\00\00\18\00\00\00g\00l\00o\00b\00a\00l\00-\00s\00c\00o\00p\00e")
 (data $244 (i32.const 19868) "\1c")
 (data $244.1 (i32.const 19880) "\02\00\00\00\0c\00\00\00g\00l\00o\00b\00a\00l")
 (data $245 (i32.const 19900) "\1c")
 (data $245.1 (i32.const 19912) "\01")
 (data $246 (i32.const 19932) "\1c")
 (data $246.1 (i32.const 19944) "\01")
 (data $247 (i32.const 19964) "\1c")
 (data $247.1 (i32.const 19976) "\01")
 (data $248 (i32.const 19996) "\1c")
 (data $248.1 (i32.const 20008) "\01")
 (data $249 (i32.const 20028) "\1c")
 (data $249.1 (i32.const 20040) "\01")
 (data $250 (i32.const 20060) "\1c")
 (data $250.1 (i32.const 20072) "\01")
 (data $251 (i32.const 20092) "\1c")
 (data $251.1 (i32.const 20104) "\01")
 (data $252 (i32.const 20124) "|")
 (data $252.1 (i32.const 20136) "\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y")
 (data $253 (i32.const 20252) "L\03")
 (data $253.1 (i32.const 20264) "\a6\00\00\000\03\00\00\df\00S\00S\00\00\00I\01\bc\02N\00\00\00\f0\01J\00\0c\03\00\00\90\03\99\03\08\03\01\03\b0\03\a5\03\08\03\01\03\87\055\05R\05\00\00\96\1eH\001\03\00\00\97\1eT\00\08\03\00\00\98\1eW\00\n\03\00\00\99\1eY\00\n\03\00\00\9a\1eA\00\be\02\00\00P\1f\a5\03\13\03\00\00R\1f\a5\03\13\03\00\03T\1f\a5\03\13\03\01\03V\1f\a5\03\13\03B\03\80\1f\08\1f\99\03\00\00\81\1f\t\1f\99\03\00\00\82\1f\n\1f\99\03\00\00\83\1f\0b\1f\99\03\00\00\84\1f\0c\1f\99\03\00\00\85\1f\r\1f\99\03\00\00\86\1f\0e\1f\99\03\00\00\87\1f\0f\1f\99\03\00\00\88\1f\08\1f\99\03\00\00\89\1f\t\1f\99\03\00\00\8a\1f\n\1f\99\03\00\00\8b\1f\0b\1f\99\03\00\00\8c\1f\0c\1f\99\03\00\00\8d\1f\r\1f\99\03\00\00\8e\1f\0e\1f\99\03\00\00\8f\1f\0f\1f\99\03\00\00\90\1f(\1f\99\03\00\00\91\1f)\1f\99\03\00\00\92\1f*\1f\99\03\00\00\93\1f+\1f\99\03\00\00\94\1f,\1f\99\03\00\00\95\1f-\1f\99\03\00\00\96\1f.\1f\99\03\00\00\97\1f/\1f\99\03\00\00\98\1f(\1f\99\03\00\00\99\1f)\1f\99\03\00\00\9a\1f*\1f\99\03\00\00\9b\1f+\1f\99\03\00\00\9c\1f,\1f\99\03\00\00\9d\1f-\1f\99\03\00\00\9e\1f.\1f\99\03\00\00\9f\1f/\1f\99\03\00\00\a0\1fh\1f\99\03\00\00\a1\1fi\1f\99\03\00\00\a2\1fj\1f\99\03\00\00\a3\1fk\1f\99\03\00\00\a4\1fl\1f\99\03\00\00\a5\1fm\1f\99\03\00\00\a6\1fn\1f\99\03\00\00\a7\1fo\1f\99\03\00\00\a8\1fh\1f\99\03\00\00\a9\1fi\1f\99\03\00\00\aa\1fj\1f\99\03\00\00\ab\1fk\1f\99\03\00\00\ac\1fl\1f\99\03\00\00\ad\1fm\1f\99\03\00\00\ae\1fn\1f\99\03\00\00\af\1fo\1f\99\03\00\00\b2\1f\ba\1f\99\03\00\00\b3\1f\91\03\99\03\00\00\b4\1f\86\03\99\03\00\00\b6\1f\91\03B\03\00\00\b7\1f\91\03B\03\99\03\bc\1f\91\03\99\03\00\00\c2\1f\ca\1f\99\03\00\00\c3\1f\97\03\99\03\00\00\c4\1f\89\03\99\03\00\00\c6\1f\97\03B\03\00\00\c7\1f\97\03B\03\99\03\cc\1f\97\03\99\03\00\00\d2\1f\99\03\08\03\00\03\d3\1f\99\03\08\03\01\03\d6\1f\99\03B\03\00\00\d7\1f\99\03\08\03B\03\e2\1f\a5\03\08\03\00\03\e3\1f\a5\03\08\03\01\03\e4\1f\a1\03\13\03\00\00\e6\1f\a5\03B\03\00\00\e7\1f\a5\03\08\03B\03\f2\1f\fa\1f\99\03\00\00\f3\1f\a9\03\99\03\00\00\f4\1f\8f\03\99\03\00\00\f6\1f\a9\03B\03\00\00\f7\1f\a9\03B\03\99\03\fc\1f\a9\03\99\03\00\00\00\fbF\00F\00\00\00\01\fbF\00I\00\00\00\02\fbF\00L\00\00\00\03\fbF\00F\00I\00\04\fbF\00F\00L\00\05\fbS\00T\00\00\00\06\fbS\00T\00\00\00\13\fbD\05F\05\00\00\14\fbD\055\05\00\00\15\fbD\05;\05\00\00\16\fbN\05F\05\00\00\17\fbD\05=\05")
 (data $254 (i32.const 21101) "\01\02\03\04\05\06\07\08\t\n\0b\0c\r\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~\7f")
 (data $255 (i32.const 21228) "\07\08\t\n\0b\0c\06\06\06\06\06\06\06\06\06\06\r\06\06\0e\06\06\06\06\06\06\06\06\0fa\06\06\06\06\06\06\06\1b\06\06\06\06\06\06\06\06\06\06\06\1c\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1d\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1e\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06")
 (data $255.1 (i32.const 21851) "$++++++++\01\00TVVVVVVVV")
 (data $255.2 (i32.const 21890) "\18\00\00\00+++++++\07++[VVVVVVVJVV\051P1P1P1P1P1P1P1P$Py1P1P18P1P1P1P1P1P1P1PN1\02N\r\rN\03N\00$n\00N1&nQN$PN9\14\81\1b\1d\1dS1P1P\r1P1P1P\1bS$P1\02\\{\\{\\{\\{\\{\14y\\{\\{\\-+I\03H\03x\\{\14\00\96\n\01+(\06\06\00*\06**+\07\bb\b5+\1e\00+\07+++\01++++++++++++++++++++++++++++++++\01+++++++++++++++++++++++*+++++++++++++\cdF\cd+\00%+\07\01\06\01UVVVVVUVV\02$\81\81\81\81\81\15\81\81\81\00\00+\00\b2\d1\b2\d1\b2\d1\b2\d1\00\00\cd\cc\01\00\d7\d7\d7\d7\d7\83\81\81\81\81\81\81\81\81\81\81\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\1c\00\00\00\00\001P1P1P1P1P1\02\00\001P1P1P1P1P1P1P1P1PN1P1PN1P1P1P1P1P1P1P1\02\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6*++++++++++++\00\00\00TVVVVVVVVVVVV")
 (data $255.3 (i32.const 22399) "TVVVVVVVVVVVV\0c\00\0c*+++++++++++++\07*\01")
 (data $255.4 (i32.const 22485) "*++++++++++++++++++++++++++VVl\81\15\00++++++++++++++++++++++++++++++++++++++++++\07l\03A++VVVVVVVVVVVVVV,V+++++++++++++++++++++\01")
 (data $255.5 (i32.const 22644) "\0cl\00\00\00\00\00\06")
 (data $255.6 (i32.const 22690) "\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%Vz\9e&\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06\01++OVV,+\7fVV9++UVV++OVV,+\7fVV\817u[{\\++OVV\02\ac\04\00\009++UVV++OVV,++VV2\13\81W\00o\81~\c9\d7~-\81\81\0e~9\7foW\00\81\81~\15\00~\03++++++++++++\07+$+\97+++++++++*+++++VVVVV\80\81\81\81\819\bb*++++++++++++++++++++++++++++++++++++++++\01\81\81\81\81\81\81\81\81\81\81\81\81\81\81\81\c9\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\d0\r\00N1\02\b4\c1\c1\d7\d7$P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P\d7\d7S\c1G\d4\d7\d7\d7\05++++++++++++\07\01\00\01")
 (data $255.7 (i32.const 23141) "N1P1P1P1P1P1P1P\r\00\00\00\00\00$P1P1P1P1P")
 (data $255.8 (i32.const 23206) "+++++++++++y\\{\\{O{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\-++y\14\\{\\-y*\\\'\\{\\{\\{\a4\00\n\b4\\{\\{O\03x8+++++++++++++O-++\01")
 (data $255.9 (i32.const 23319) "H")
 (data $255.10 (i32.const 23329) "*++++++++++++++++++++++++++")
 (data $255.11 (i32.const 23389) "++++++++\07\00HVVVVVVVV\02")
 (data $255.12 (i32.const 23464) "+++++++++++++UVVVVVVVVVVVV\0e")
 (data $255.13 (i32.const 23522) "$+++++++++++\07\00VVVVVVVVVVVV")
 (data $255.14 (i32.const 23592) "$++++++++++++++++\07\00\00\00\00VVVVVVVVVVVVVVVVV")
 (data $255.15 (i32.const 23689) "*++++++++++VVVVVVVVVV\0e")
 (data $255.16 (i32.const 23743) "*++++++++++VVVVVVVVVV\0e")
 (data $255.17 (i32.const 23808) "+++++++++++UVVVVVVVVVV\0e")
 (data $256 (i32.const 23897) "\08\00\00V\01\00\009")
 (data $257 (i32.const 23912) "\01 \00\00\00\e0\ff\ff\00\bf\1d\00\00\e7\02\00\00y\00\00\02$\00\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\01\02\00\00\00\fe\ff\ff\019\ff\ff\00\18\ff\ff\01\87\ff\ff\00\d4\fe\ff\00\c3\00\00\01\d2\00\00\01\ce\00\00\01\cd\00\00\01O\00\00\01\ca\00\00\01\cb\00\00\01\cf\00\00\00a\00\00\01\d3\00\00\01\d1\00\00\00\a3\00\00\01\d5\00\00\00\82\00\00\01\d6\00\00\01\da\00\00\01\d9\00\00\01\db\00\00\008\00\00\03\00\00\00\00\b1\ff\ff\01\9f\ff\ff\01\c8\ff\ff\02($\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\003\ff\ff\00&\ff\ff\01~\ff\ff\01+*\00\01]\ff\ff\01(*\00\00?*\00\01=\ff\ff\01E\00\00\01G\00\00\00\1f*\00\00\1c*\00\00\1e*\00\00.\ff\ff\002\ff\ff\006\ff\ff\005\ff\ff\00O\a5\00\00K\a5\00\001\ff\ff\00(\a5\00\00D\a5\00\00/\ff\ff\00-\ff\ff\00\f7)\00\00A\a5\00\00\fd)\00\00+\ff\ff\00*\ff\ff\00\e7)\00\00C\a5\00\00*\a5\00\00\bb\ff\ff\00\'\ff\ff\00\b9\ff\ff\00%\ff\ff\00\15\a5\00\00\12\a5\00\02$L\00\00\00\00\00\01 \00\00\00\e0\ff\ff\01\01\00\00\00\ff\ff\ff\00T\00\00\01t\00\00\01&\00\00\01%\00\00\01@\00\00\01?\00\00\00\da\ff\ff\00\db\ff\ff\00\e1\ff\ff\00\c0\ff\ff\00\c1\ff\ff\01\08\00\00\00\c2\ff\ff\00\c7\ff\ff\00\d1\ff\ff\00\ca\ff\ff\00\f8\ff\ff\00\aa\ff\ff\00\b0\ff\ff\00\07\00\00\00\8c\ff\ff\01\c4\ff\ff\00\a0\ff\ff\01\f9\ff\ff\02\1ap\00\01\01\00\00\00\ff\ff\ff\01 \00\00\00\e0\ff\ff\01P\00\00\01\0f\00\00\00\f1\ff\ff\00\00\00\00\010\00\00\00\d0\ff\ff\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c0\0b\00\01`\1c\00\00\00\00\00\01\d0\97\00\01\08\00\00\00\f8\ff\ff\02\05\8a\00\00\00\00\00\01@\f4\ff\00\9e\e7\ff\00\c2\89\00\00\db\e7\ff\00\92\e7\ff\00\93\e7\ff\00\9c\e7\ff\00\9d\e7\ff\00\a4\e7\ff\00\00\00\00\008\8a\00\00\04\8a\00\00\e6\0e\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c5\ff\ff\01A\e2\ff\02\1d\8f\00\00\08\00\00\01\f8\ff\ff\00\00\00\00\00V\00\00\01\aa\ff\ff\00J\00\00\00d\00\00\00\80\00\00\00p\00\00\00~\00\00\00\t\00\00\01\b6\ff\ff\01\f7\ff\ff\00\db\e3\ff\01\9c\ff\ff\01\90\ff\ff\01\80\ff\ff\01\82\ff\ff\02\05\ac\00\00\00\00\00\01\10\00\00\00\f0\ff\ff\01\1c\00\00\01\01\00\00\01\a3\e2\ff\01A\df\ff\01\ba\df\ff\00\e4\ff\ff\02\0b\b1\00\01\01\00\00\00\ff\ff\ff\010\00\00\00\d0\ff\ff\00\00\00\00\01\t\d6\ff\01\1a\f1\ff\01\19\d6\ff\00\d5\d5\ff\00\d8\d5\ff\01\e4\d5\ff\01\03\d6\ff\01\e1\d5\ff\01\e2\d5\ff\01\c1\d5\ff\00\00\00\00\00\a0\e3\ff\00\00\00\00\01\01\00\00\00\ff\ff\ff\02\0c\bc\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\01\bcZ\ff\01\a0\03\00\01\fcu\ff\01\d8Z\ff\000\00\00\01\b1Z\ff\01\b5Z\ff\01\bfZ\ff\01\eeZ\ff\01\d6Z\ff\01\ebZ\ff\01\d0\ff\ff\01\bdZ\ff\01\c8u\ff\00\00\00\00\000h\ff\00`\fc\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01(\00\00\00\d8\ff\ff\00\00\00\00\01@\00\00\00\c0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01\"\00\00\00\de\ff\ff")
 (data $258 (i32.const 24869) "\06\'Qow")
 (data $258.1 (i32.const 24884) "|\00\00\7f\00\00\00\00\00\00\00\00\83\8e\92\97\00\aa")
 (data $258.2 (i32.const 24912) "\b4\c4")
 (data $258.3 (i32.const 25034) "\c6\c9\00\00\00\db")
 (data $258.4 (i32.const 25123) "\de\00\00\00\00\e1\00\00\00\00\00\00\00\e4")
 (data $258.5 (i32.const 25148) "\e7")
 (data $258.6 (i32.const 25234) "\ea")
 (data $258.7 (i32.const 25357) "\ed")
 (data $259 (i32.const 25380) "0\0c1\rx\0e\7f\0f\80\10\81\11\86\12\89\13\8a\13\8e\14\8f\15\90\16\93\13\94\17\95\18\96\19\97\1a\9a\1b\9c\19\9d\1c\9e\1d\9f\1e\a6\1f\a9\1f\ae\1f\b1 \b2 \b7!\bf\"\c5#\c8#\cb#\dd$\f2#\f6%\f7& -:.=/>0?1@1C2D3E4P5Q6R7S8T9Y:[;\\<a=c>e?f@hAiBj@kClDoBqErFuG}H\82I\87J\89K\8aL\8bL\8cM\92N\9dO\9ePEW{\1d|\1d}\1d\7fX\86Y\88Z\89Z\8aZ\8c[\8e\\\8f\\\ac]\ad^\ae^\af^\c2_\cc`\cda\cea\cfb\d0c\d1d\d5e\d6f\d7g\f0h\f1i\f2j\f3k\f4l\f5m\f9n\fd-\fe-\ff-PiQiRiSiTiUiViWiXiYiZi[i\\i]i^i_i\82\00\83\00\84\00\85\00\86\00\87\00\88\00\89\00\c0u\cfv\80\89\81\8a\82\8b\85\8c\86\8dp\9dq\9dv\9ew\9ex\9fy\9fz\a0{\a0|\a1}\a1\b3\a2\ba\a3\bb\a3\bc\a4\be\a5\c3\a2\cc\a4\da\a6\db\a6\e5j\ea\a7\eb\a7\ecn\f3\a2\f8\a8\f9\a8\fa\a9\fb\a9\fc\a4&\b0*\b1+\b2N\b3\84\08b\bac\bbd\bce\bdf\bem\bfn\c0o\c1p\c2~\c3\7f\c3}\cf\8d\d0\94\d1\ab\d2\ac\d3\ad\d4\b0\d5\b1\d6\b2\d7\c4\d8\c5\d9\c6\da")
 (data $260 (i32.const 25788) "|")
 (data $260.1 (i32.const 25800) "\02\00\00\00^\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00n\00u\00l\00l\00\'\00 \00(\00n\00o\00t\00 \00a\00s\00s\00i\00g\00n\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00a\00s\00t\00)")
 (data $261 (i32.const 25916) "L")
 (data $261.1 (i32.const 25928) "\02\00\00\008\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00r\00u\00n\00t\00i\00m\00e\00/\00a\00r\00g\00u\00m\00e\00n\00t\00.\00t\00s")
 (data $262 (i32.const 25996) "\1c")
 (data $262.1 (i32.const 26008) "\02\00\00\00\06\00\00\000\00.\000")
 (data $263 (i32.const 26028) "\1c")
 (data $263.1 (i32.const 26040) "\02\00\00\00\06\00\00\00N\00a\00N")
 (data $264 (i32.const 26060) ",")
 (data $264.1 (i32.const 26072) "\02\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y")
 (data $265 (i32.const 26108) ",")
 (data $265.1 (i32.const 26120) "\02\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y")
 (data $267 (i32.const 26216) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\rXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data $268 (i32.const 26912) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\r\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data $269 (i32.const 27088) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data $270 (i32.const 27132) ",")
 (data $270.1 (i32.const 27144) "\02\00\00\00\0e\00\00\00I\00F\00P\00R\00I\00M\00E")
 (data $271 (i32.const 27180) "\1c")
 (data $271.1 (i32.const 27192) "\02\00\00\00\08\00\00\00L\00O\00O\00P")
 (data $272 (i32.const 27212) "\1c")
 (data $272.1 (i32.const 27224) "\02\00\00\00\n\00\00\00W\00H\00I\00L\00E")
 (data $273 (i32.const 27244) ",")
 (data $273.1 (i32.const 27256) "\02\00\00\00\10\00\00\00W\00H\00I\00L\00E\00C\00O\00H")
 (data $274 (i32.const 27292) ",")
 (data $274.1 (i32.const 27304) "\02\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y")
 (data $275 (i32.const 27340) "<")
 (data $275.1 (i32.const 27352) "\02\00\00\00(\00\00\00{\00 \00\"\00c\00o\00n\00d\00i\00t\00i\00o\00n\00T\00y\00p\00e\00\"\00:\00 \00\"")
 (data $276 (i32.const 27404) "\1c")
 (data $276.1 (i32.const 27416) "\02\00\00\00\06\00\00\00\"\00 \00}")
 (data $277 (i32.const 27436) "\1c\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\0c\00\00\00\e0j\00\00\00\00\00\00 k")
 (data $278 (i32.const 27468) "<")
 (data $278.1 (i32.const 27480) "\02\00\00\00$\00\00\00{\00 \00\"\00i\00s\00E\00l\00s\00e\00\"\00:\00 \00t\00r\00u\00e\00 \00}")
 (data $279 (i32.const 27532) "<")
 (data $279.1 (i32.const 27544) "\02\00\00\00\"\00\00\00{\00 \00\"\00i\00s\00E\00n\00d\00\"\00:\00 \00t\00r\00u\00e\00 \00}")
 (data $280 (i32.const 27596) "L")
 (data $280.1 (i32.const 27608) "\02\00\00\002\00\00\00{\00 \00\"\00l\00o\00o\00p\00T\00y\00p\00e\00\"\00:\00 \00\"\00c\00o\00u\00n\00t\00e\00d\00\"\00 \00}")
 (data $281 (i32.const 27676) "|")
 (data $281.1 (i32.const 27688) "\02\00\00\00^\00\00\00{\00 \00\"\00l\00o\00o\00p\00T\00y\00p\00e\00\"\00:\00 \00\"\00c\00o\00n\00d\00i\00t\00i\00o\00n\00a\00l\00\"\00,\00 \00\"\00c\00o\00n\00d\00i\00t\00i\00o\00n\00T\00y\00p\00e\00\"\00:\00 \00\"")
 (data $282 (i32.const 27804) "\1c\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\0c\00\00\000l\00\00\00\00\00\00 k")
 (data $283 (i32.const 27836) "L")
 (data $283.1 (i32.const 27848) "\02\00\00\00.\00\00\00{\00 \00\"\00b\00r\00e\00a\00k\00T\00y\00p\00e\00\"\00:\00 \00\"\00l\00o\00o\00p\00\"\00 \00}")
 (data $284 (i32.const 27916) "L")
 (data $284.1 (i32.const 27928) "\02\00\00\004\00\00\00{\00 \00\"\00c\00o\00n\00t\00i\00n\00u\00e\00T\00y\00p\00e\00\"\00:\00 \00\"\00l\00o\00o\00p\00\"\00 \00}")
 (data $285 (i32.const 27996) ",")
 (data $285.1 (i32.const 28008) "\02\00\00\00\18\00\00\00{\00 \00\"\00l\00a\00b\00e\00l\00\"\00:\00 \00\"")
 (data $286 (i32.const 28044) ",")
 (data $286.1 (i32.const 28056) "\02\00\00\00\18\00\00\00\"\00,\00 \00\"\00f\00o\00u\00n\00d\00\"\00:\00 ")
 (data $287 (i32.const 28092) "\1c")
 (data $287.1 (i32.const 28104) "\02\00\00\00\04\00\00\00 \00}")
 (data $288 (i32.const 28124) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\14\00\00\00pm\00\00\00\00\00\00\a0m\00\00\00\00\00\00\d0m")
 (data $289 (i32.const 28172) "\1c")
 (data $289.1 (i32.const 28184) "\02\00\00\00\08\00\00\00t\00r\00u\00e")
 (data $290 (i32.const 28204) "\1c")
 (data $290.1 (i32.const 28216) "\02\00\00\00\n\00\00\00f\00a\00l\00s\00e")
 (data $291 (i32.const 28236) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\14\00\00\00pm\00\00\00\00\00\00\a0m\00\00\00\00\00\00\d0m")
 (data $292 (i32.const 28284) "\1c")
 (data $292.1 (i32.const 28296) "\02\00\00\00\0c\00\00\00R\00E\00T\00U\00R\00N")
 (data $293 (i32.const 28326) "\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA\00\00\00 _\a0\02B\00\00\00\e8vH7B\00\00\00\a2\94\1amB\00\00@\e5\9c0\a2B\00\00\90\1e\c4\bc\d6B\00\004&\f5k\0cC\00\80\e07y\c3AC\00\a0\d8\85W4vC\00\c8Ngm\c1\abC\00=\91`\e4X\e1C@\8c\b5x\1d\af\15DP\ef\e2\d6\e4\1aKD\92\d5M\06\cf\f0\80D")
 (data $294 (i32.const 28508) "\1c")
 (data $294.1 (i32.const 28520) "\01")
 (data $295 (i32.const 28540) "\1c")
 (data $295.1 (i32.const 28552) "\02\00\00\00\02\00\00\00-")
 (data $296 (i32.const 28572) "\1c\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\0c\00\00\00\00\00\00\00\90o")
 (data $297 (i32.const 28608) "n\83\f9\a2\00\00\00\00\d1W\'\fc)\15DN\99\95b\db\c0\dd4\f5\abcQ\feA\90C<:n$\b7a\c5\bb\de\ea.I\06\e0\d2MB\1c\eb\1d\fe\1c\92\d1\t\f55\82\e8>\a7)\b1&p\9c\e9\84D\bb.9\d6\919A~_\b4\8b_\84\9c\f49S\83\ff\97\f8\1f;(\f9\bd\8b\11/\ef\0f\98\05\de\cf~6m\1fm\nZf?FO\b7\t\cb\'\c7\ba\'u-\ea_\9e\f79\07={\f1\e5\eb\b1_\fbk\ea\92R\8aF0\03V\08]\8d\1f \bc\cf\f0\abk{\fca\91\e3\a9\1d6\f4\9a_\85\99e\08\1b\e6^\80\d8\ff\8d@h\a0\14W\15\06\061\'sM")
 (data $298 (i32.const 28812) "\1c")
 (data $298.1 (i32.const 28824) "\ab\00\00\00\08\00\00\00\02")
 (data $299 (i32.const 28844) "\1c")
 (data $299.1 (i32.const 28856) "\ab\00\00\00\08\00\00\00\03")
 (data $300 (i32.const 28876) "\1c")
 (data $300.1 (i32.const 28888) "\ab\00\00\00\08\00\00\00\04")
 (data $301 (i32.const 28908) "<")
 (data $301.1 (i32.const 28920) "\02\00\00\00\1e\00\00\00{\00 \00\"\00c\00o\00h\00e\00r\00e\00n\00c\00e\00\"\00:\00 ")
 (data $302 (i32.const 28972) "<")
 (data $302.1 (i32.const 28984) "\02\00\00\00\1e\00\00\00,\00 \00\"\00t\00h\00r\00e\00s\00h\00o\00l\00d\00\"\00:\00 ")
 (data $303 (i32.const 29036) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\14\00\00\00\00q\00\00\00\00\00\00@q\00\00\00\00\00\00\d0m")
 (data $304 (i32.const 29084) "<")
 (data $304.1 (i32.const 29096) "\02\00\00\00\1e\00\00\00{\00 \00\"\00r\00e\00g\00i\00s\00t\00e\00r\00\"\00:\00 \00\"")
 (data $305 (i32.const 29148) "<")
 (data $305.1 (i32.const 29160) "\02\00\00\00(\00\00\00\"\00,\00 \00\"\00r\00e\00g\00i\00s\00t\00e\00r\00V\00a\00l\00u\00e\00\"\00:\00 ")
 (data $306 (i32.const 29212) "<")
 (data $306.1 (i32.const 29224) "\02\00\00\00(\00\00\00,\00 \00\"\00t\00h\00r\00e\00s\00h\00o\00l\00d\00V\00a\00l\00u\00e\00\"\00:\00 ")
 (data $307 (i32.const 29276) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\1c\00\00\00\b0q\00\00\00\00\00\00\f0q\00\00\00\00\00\000r\00\00\00\00\00\00\d0m")
 (data $308 (i32.const 29324) "\\")
 (data $308.1 (i32.const 29336) "\02\00\00\00B\00\00\00{\00 \00\"\00i\00s\00L\00a\00b\00e\00l\00\"\00:\00 \00t\00r\00u\00e\00,\00 \00\"\00l\00a\00b\00e\00l\00N\00a\00m\00e\00\"\00:\00 \00\"")
 (data $309 (i32.const 29420) "\1c\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\0c\00\00\00\a0r\00\00\00\00\00\00 k")
 (data $310 (i32.const 29452) "L")
 (data $310.1 (i32.const 29464) "\02\00\00\00:\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00e\00n\00g\00i\00n\00e\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $311 (i32.const 29532) "L")
 (data $311.1 (i32.const 29544) "\02\00\00\002\00\00\00\05\' \00E\00n\00g\00i\00n\00e\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $312 (i32.const 29612) "<")
 (data $312.1 (i32.const 29624) "\02\00\00\00,\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00U\00t\00i\00l\00s\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $313 (i32.const 29676) "L")
 (data $313.1 (i32.const 29688) "\02\00\00\00:\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00u\00t\00i\00l\00s\00 \00m\00o\00d\00u\00l\00e\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $314 (i32.const 29756) "\1c")
 (data $314.1 (i32.const 29768) "\01")
 (data $315 (i32.const 29797) "\a0\f6?")
 (data $315.1 (i32.const 29809) "\c8\b9\f2\82,\d6\bf\80V7($\b4\fa<\00\00\00\00\00\80\f6?")
 (data $315.2 (i32.const 29841) "\08X\bf\bd\d1\d5\bf \f7\e0\d8\08\a5\1c\bd\00\00\00\00\00`\f6?")
 (data $315.3 (i32.const 29873) "XE\17wv\d5\bfmP\b6\d5\a4b#\bd\00\00\00\00\00@\f6?")
 (data $315.4 (i32.const 29905) "\f8-\87\ad\1a\d5\bf\d5g\b0\9e\e4\84\e6\bc\00\00\00\00\00 \f6?")
 (data $315.5 (i32.const 29937) "xw\95_\be\d4\bf\e0>)\93i\1b\04\bd\00\00\00\00\00\00\f6?")
 (data $315.6 (i32.const 29969) "`\1c\c2\8ba\d4\bf\cc\84LH/\d8\13=\00\00\00\00\00\e0\f5?")
 (data $315.7 (i32.const 30001) "\a8\86\860\04\d4\bf:\0b\82\ed\f3B\dc<\00\00\00\00\00\c0\f5?")
 (data $315.8 (i32.const 30033) "HiUL\a6\d3\bf`\94Q\86\c6\b1 =\00\00\00\00\00\a0\f5?")
 (data $315.9 (i32.const 30065) "\80\98\9a\ddG\d3\bf\92\80\c5\d4MY%=\00\00\00\00\00\80\f5?")
 (data $315.10 (i32.const 30097) " \e1\ba\e2\e8\d2\bf\d8+\b7\99\1e{&=\00\00\00\00\00`\f5?")
 (data $315.11 (i32.const 30129) "\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00`\f5?")
 (data $315.12 (i32.const 30161) "\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00@\f5?")
 (data $315.13 (i32.const 30193) "x\cf\fbA)\d2\bfv\daS($Z\16\bd\00\00\00\00\00 \f5?")
 (data $315.14 (i32.const 30225) "\98i\c1\98\c8\d1\bf\04T\e7h\bc\af\1f\bd\00\00\00\00\00\00\f5?")
 (data $315.15 (i32.const 30257) "\a8\ab\ab\\g\d1\bf\f0\a8\823\c6\1f\1f=\00\00\00\00\00\e0\f4?")
 (data $315.16 (i32.const 30289) "H\ae\f9\8b\05\d1\bffZ\05\fd\c4\a8&\bd\00\00\00\00\00\c0\f4?")
 (data $315.17 (i32.const 30321) "\90s\e2$\a3\d0\bf\0e\03\f4~\eek\0c\bd\00\00\00\00\00\a0\f4?")
 (data $315.18 (i32.const 30353) "\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\a0\f4?")
 (data $315.19 (i32.const 30385) "\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\80\f4?")
 (data $315.20 (i32.const 30417) "@^m\18\b9\cf\bf\87<\99\ab*W\r=\00\00\00\00\00`\f4?")
 (data $315.21 (i32.const 30449) "`\dc\cb\ad\f0\ce\bf$\af\86\9c\b7&+=\00\00\00\00\00@\f4?")
 (data $315.22 (i32.const 30481) "\f0*n\07\'\ce\bf\10\ff?TO/\17\bd\00\00\00\00\00 \f4?")
 (data $315.23 (i32.const 30513) "\c0Ok!\\\cd\bf\1bh\ca\bb\91\ba!=\00\00\00\00\00\00\f4?")
 (data $315.24 (i32.const 30545) "\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy\'=\00\00\00\00\00\00\f4?")
 (data $315.25 (i32.const 30577) "\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy\'=\00\00\00\00\00\e0\f3?")
 (data $315.26 (i32.const 30609) "\90-t\86\c2\cb\bf\8f\b7\8b1\b0N\19=\00\00\00\00\00\c0\f3?")
 (data $315.27 (i32.const 30641) "\c0\80N\c9\f3\ca\bff\90\cd?cN\ba<\00\00\00\00\00\a0\f3?")
 (data $315.28 (i32.const 30673) "\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\a0\f3?")
 (data $315.29 (i32.const 30705) "\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\80\f3?")
 (data $315.30 (i32.const 30737) "P\f4\9cZR\c9\bf\e3\d4\c1\04\d9\d1*\bd\00\00\00\00\00`\f3?")
 (data $315.31 (i32.const 30769) "\d0 e\a0\7f\c8\bf\t\fa\db\7f\bf\bd+=\00\00\00\00\00@\f3?")
 (data $315.32 (i32.const 30801) "\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00@\f3?")
 (data $315.33 (i32.const 30833) "\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00 \f3?")
 (data $315.34 (i32.const 30865) "\d0\19\e7\0f\d6\c6\bff\e2\b2\a3j\e4\10\bd\00\00\00\00\00\00\f3?")
 (data $315.35 (i32.const 30897) "\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\00\f3?")
 (data $315.36 (i32.const 30929) "\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\e0\f2?")
 (data $315.37 (i32.const 30961) "\b0\a1\e3\e5&\c5\bf\8f[\07\90\8b\de \bd\00\00\00\00\00\c0\f2?")
 (data $315.38 (i32.const 30993) "\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\c0\f2?")
 (data $315.39 (i32.const 31025) "\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\a0\f2?")
 (data $315.40 (i32.const 31057) "\90\1e \fcq\c3\bf:T\'M\86x\f1<\00\00\00\00\00\80\f2?")
 (data $315.41 (i32.const 31089) "\f0\1f\f8R\95\c2\bf\08\c4q\170\8d$\bd\00\00\00\00\00`\f2?")
 (data $315.42 (i32.const 31121) "`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00`\f2?")
 (data $315.43 (i32.const 31153) "`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00@\f2?")
 (data $315.44 (i32.const 31185) "\90\d0|~\d7\c0\bf\f4[\e8\88\96i\n=\00\00\00\00\00@\f2?")
 (data $315.45 (i32.const 31217) "\90\d0|~\d7\c0\bf\f4[\e8\88\96i\n=\00\00\00\00\00 \f2?")
 (data $315.46 (i32.const 31249) "\e0\db1\91\ec\bf\bf\f23\a3\\Tu%\bd\00\00\00\00\00\00\f2?")
 (data $315.47 (i32.const 31282) "+n\07\'\be\bf<\00\f0*,4*=\00\00\00\00\00\00\f2?")
 (data $315.48 (i32.const 31314) "+n\07\'\be\bf<\00\f0*,4*=\00\00\00\00\00\e0\f1?")
 (data $315.49 (i32.const 31345) "\c0[\8fT^\bc\bf\06\be_XW\0c\1d\bd\00\00\00\00\00\c0\f1?")
 (data $315.50 (i32.const 31377) "\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\c0\f1?")
 (data $315.51 (i32.const 31409) "\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\a0\f1?")
 (data $315.52 (i32.const 31441) "\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\a0\f1?")
 (data $315.53 (i32.const 31473) "\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\80\f1?")
 (data $315.54 (i32.const 31505) "`\e5\8a\d2\f0\b6\bf\das3\c97\97&\bd\00\00\00\00\00`\f1?")
 (data $315.55 (i32.const 31537) " \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00`\f1?")
 (data $315.56 (i32.const 31569) " \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00@\f1?")
 (data $315.57 (i32.const 31601) "\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00@\f1?")
 (data $315.58 (i32.const 31633) "\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00 \f1?")
 (data $315.59 (i32.const 31665) "\80\a3\ee6e\b1\bf\t\a3\8fv^|\14=\00\00\00\00\00\00\f1?")
 (data $315.60 (i32.const 31697) "\80\11\c00\n\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\00\f1?")
 (data $315.61 (i32.const 31729) "\80\11\c00\n\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\e0\f0?")
 (data $315.62 (i32.const 31761) "\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\e0\f0?")
 (data $315.63 (i32.const 31793) "\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\c0\f0?")
 (data $315.64 (i32.const 31825) "\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\c0\f0?")
 (data $315.65 (i32.const 31857) "\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\a0\f0?")
 (data $315.66 (i32.const 31889) "\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\a0\f0?")
 (data $315.67 (i32.const 31921) "\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\80\f0?")
 (data $315.68 (i32.const 31954) "x\0e\9b\82\9f\bf\e4\t~|&\80)\bd\00\00\00\00\00\80\f0?")
 (data $315.69 (i32.const 31986) "x\0e\9b\82\9f\bf\e4\t~|&\80)\bd\00\00\00\00\00`\f0?")
 (data $315.70 (i32.const 32017) "\80\d5\07\1b\b9\97\bf9\a6\fa\93T\8d(\bd\00\00\00\00\00@\f0?")
 (data $315.71 (i32.const 32050) "\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00@\f0?")
 (data $315.72 (i32.const 32082) "\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00 \f0?")
 (data $315.73 (i32.const 32114) "\10k*\e0\7f\bf\e4@\da\r?\e2\19\bd\00\00\00\00\00 \f0?")
 (data $315.74 (i32.const 32146) "\10k*\e0\7f\bf\e4@\da\r?\e2\19\bd\00\00\00\00\00\00\f0?")
 (data $315.75 (i32.const 32198) "\f0?")
 (data $315.76 (i32.const 32229) "\c0\ef?")
 (data $315.77 (i32.const 32242) "\89u\15\10\80?\e8+\9d\99k\c7\10\bd\00\00\00\00\00\80\ef?")
 (data $315.78 (i32.const 32273) "\80\93XV \90?\d2\f7\e2\06[\dc#\bd\00\00\00\00\00@\ef?")
 (data $315.79 (i32.const 32306) "\c9(%I\98?4\0cZ2\ba\a0*\bd\00\00\00\00\00\00\ef?")
 (data $315.80 (i32.const 32337) "@\e7\89]A\a0?S\d7\f1\\\c0\11\01=\00\00\00\00\00\c0\ee?")
 (data $315.81 (i32.const 32370) ".\d4\aef\a4?(\fd\bdus\16,\bd\00\00\00\00\00\80\ee?")
 (data $315.82 (i32.const 32401) "\c0\9f\14\aa\94\a8?}&Z\d0\95y\19\bd\00\00\00\00\00@\ee?")
 (data $315.83 (i32.const 32433) "\c0\dd\cds\cb\ac?\07(\d8G\f2h\1a\bd\00\00\00\00\00 \ee?")
 (data $315.84 (i32.const 32465) "\c0\06\c01\ea\ae?{;\c9O>\11\0e\bd\00\00\00\00\00\e0\ed?")
 (data $315.85 (i32.const 32497) "`F\d1;\97\b1?\9b\9e\rV]2%\bd\00\00\00\00\00\a0\ed?")
 (data $315.86 (i32.const 32529) "\e0\d1\a7\f5\bd\b3?\d7N\db\a5^\c8,=\00\00\00\00\00`\ed?")
 (data $315.87 (i32.const 32561) "\a0\97MZ\e9\b5?\1e\1d]<\06i,\bd\00\00\00\00\00@\ed?")
 (data $315.88 (i32.const 32593) "\c0\ea\n\d3\00\b7?2\ed\9d\a9\8d\1e\ec<\00\00\00\00\00\00\ed?")
 (data $315.89 (i32.const 32625) "@Y]^3\b9?\daG\bd:\\\11#=\00\00\00\00\00\c0\ec?")
 (data $315.90 (i32.const 32657) "`\ad\8d\c8j\bb?\e5h\f7+\80\90\13\bd\00\00\00\00\00\a0\ec?")
 (data $315.91 (i32.const 32689) "@\bc\01X\88\bc?\d3\acZ\c6\d1F&=\00\00\00\00\00`\ec?")
 (data $315.92 (i32.const 32721) " \n\839\c7\be?\e0E\e6\afh\c0-\bd\00\00\00\00\00@\ec?")
 (data $315.93 (i32.const 32753) "\e0\db9\91\e8\bf?\fd\n\a1O\d64%\bd\00\00\00\00\00\00\ec?")
 (data $315.94 (i32.const 32785) "\e0\'\82\8e\17\c1?\f2\07-\cex\ef!=\00\00\00\00\00\e0\eb?")
 (data $315.95 (i32.const 32817) "\f0#~+\aa\c1?4\998D\8e\a7,=\00\00\00\00\00\a0\eb?")
 (data $315.96 (i32.const 32849) "\80\86\0ca\d1\c2?\a1\b4\81\cbl\9d\03=\00\00\00\00\00\80\eb?")
 (data $315.97 (i32.const 32881) "\90\15\b0\fce\c3?\89rK#\a8/\c6<\00\00\00\00\00@\eb?")
 (data $315.98 (i32.const 32913) "\b03\83=\91\c4?x\b6\fdTy\83%=\00\00\00\00\00 \eb?")
 (data $315.99 (i32.const 32945) "\b0\a1\e4\e5\'\c5?\c7}i\e5\e83&=\00\00\00\00\00\e0\ea?")
 (data $315.100 (i32.const 32977) "\10\8c\beNW\c6?x.<,\8b\cf\19=\00\00\00\00\00\c0\ea?")
 (data $315.101 (i32.const 33009) "pu\8b\12\f0\c6?\e1!\9c\e5\8d\11%\bd\00\00\00\00\00\a0\ea?")
 (data $315.102 (i32.const 33041) "PD\85\8d\89\c7?\05C\91p\10f\1c\bd\00\00\00\00\00`\ea?")
 (data $315.103 (i32.const 33074) "9\eb\af\be\c8?\d1,\e9\aaT=\07\bd\00\00\00\00\00@\ea?")
 (data $315.104 (i32.const 33106) "\f7\dcZZ\c9?o\ff\a0X(\f2\07=\00\00\00\00\00\00\ea?")
 (data $315.105 (i32.const 33137) "\e0\8a<\ed\93\ca?i!VPCr(\bd\00\00\00\00\00\e0\e9?")
 (data $315.106 (i32.const 33169) "\d0[W\d81\cb?\aa\e1\acN\8d5\0c\bd\00\00\00\00\00\c0\e9?")
 (data $315.107 (i32.const 33201) "\e0;8\87\d0\cb?\b6\12TY\c4K-\bd\00\00\00\00\00\a0\e9?")
 (data $315.108 (i32.const 33233) "\10\f0\c6\fbo\cc?\d2+\96\c5r\ec\f1\bc\00\00\00\00\00`\e9?")
 (data $315.109 (i32.const 33265) "\90\d4\b0=\b1\cd?5\b0\15\f7*\ff*\bd\00\00\00\00\00@\e9?")
 (data $315.110 (i32.const 33297) "\10\e7\ff\0eS\ce?0\f4A`\'\12\c2<\00\00\00\00\00 \e9?")
 (data $315.111 (i32.const 33330) "\dd\e4\ad\f5\ce?\11\8e\bbe\15!\ca\bc\00\00\00\00\00\00\e9?")
 (data $315.112 (i32.const 33361) "\b0\b3l\1c\99\cf?0\df\0c\ca\ec\cb\1b=\00\00\00\00\00\c0\e8?")
 (data $315.113 (i32.const 33393) "XM`8q\d0?\91N\ed\16\db\9c\f8<\00\00\00\00\00\a0\e8?")
 (data $315.114 (i32.const 33425) "`ag-\c4\d0?\e9\ea<\16\8b\18\'=\00\00\00\00\00\80\e8?")
 (data $315.115 (i32.const 33457) "\e8\'\82\8e\17\d1?\1c\f0\a5c\0e!,\bd\00\00\00\00\00`\e8?")
 (data $315.116 (i32.const 33489) "\f8\ac\cb\\k\d1?\81\16\a5\f7\cd\9a+=\00\00\00\00\00@\e8?")
 (data $315.117 (i32.const 33521) "hZc\99\bf\d1?\b7\bdGQ\ed\a6,=\00\00\00\00\00 \e8?")
 (data $315.118 (i32.const 33553) "\b8\0emE\14\d2?\ea\baF\ba\de\87\n=\00\00\00\00\00\e0\e7?")
 (data $315.119 (i32.const 33585) "\90\dc|\f0\be\d2?\f4\04PJ\fa\9c*=\00\00\00\00\00\c0\e7?")
 (data $315.120 (i32.const 33617) "`\d3\e1\f1\14\d3?\b8<!\d3z\e2(\bd\00\00\00\00\00\a0\e7?")
 (data $315.121 (i32.const 33649) "\10\bevgk\d3?\c8w\f1\b0\cdn\11=\00\00\00\00\00\80\e7?")
 (data $315.122 (i32.const 33681) "03wR\c2\d3?\\\bd\06\b6T;\18=\00\00\00\00\00`\e7?")
 (data $315.123 (i32.const 33713) "\e8\d5#\b4\19\d4?\9d\e0\90\ec6\e4\08=\00\00\00\00\00@\e7?")
 (data $315.124 (i32.const 33745) "\c8q\c2\8dq\d4?u\d6g\t\ce\'/\bd\00\00\00\00\00 \e7?")
 (data $315.125 (i32.const 33777) "0\17\9e\e0\c9\d4?\a4\d8\n\1b\89 .\bd\00\00\00\00\00\00\e7?")
 (data $315.126 (i32.const 33809) "\a08\07\ae\"\d5?Y\c7d\81p\be.=\00\00\00\00\00\e0\e6?")
 (data $315.127 (i32.const 33841) "\d0\c8S\f7{\d5?\ef@]\ee\ed\ad\1f=\00\00\00\00\00\c0\e6?")
 (data $315.128 (i32.const 33873) "`Y\df\bd\d5\d5?\dce\a4\08*\0b\n\bd")
 (data $316 (i32.const 33902) "\f0?n\bf\88\1aO;\9b<53\fb\a9=\f6\ef?]\dc\d8\9c\13`q\bca\80w>\9a\ec\ef?\d1f\87\10z^\90\bc\85\7fn\e8\15\e3\ef?\13\f6g5R\d2\8c<t\85\15\d3\b0\d9\ef?\fa\8e\f9#\80\ce\8b\bc\de\f6\dd)k\d0\ef?a\c8\e6aN\f7`<\c8\9bu\18E\c7\ef?\99\d33[\e4\a3\90<\83\f3\c6\ca>\be\ef?m{\83]\a6\9a\97<\0f\89\f9lX\b5\ef?\fc\ef\fd\92\1a\b5\8e<\f7Gr+\92\ac\ef?\d1\9c/p=\be><\a2\d1\d32\ec\a3\ef?\0bn\90\894\03j\bc\1b\d3\fe\aff\9b\ef?\0e\bd/*RV\95\bcQ[\12\d0\01\93\ef?U\eaN\8c\ef\80P\bc\cc1l\c0\bd\8a\ef?\16\f4\d5\b9#\c9\91\bc\e0-\a9\ae\9a\82\ef?\afU\\\e9\e3\d3\80<Q\8e\a5\c8\98z\ef?H\93\a5\ea\15\1b\80\bc{Q}<\b8r\ef?=2\deU\f0\1f\8f\bc\ea\8d\8c8\f9j\ef?\bfS\13?\8c\89\8b<u\cbo\eb[c\ef?&\eb\11v\9c\d9\96\bc\d4\\\04\84\e0[\ef?`/:>\f7\ec\9a<\aa\b9h1\87T\ef?\9d8\86\cb\82\e7\8f\bc\1d\d9\fc\"PM\ef?\8d\c3\a6DAo\8a<\d6\8cb\88;F\ef?}\04\e4\b0\05z\80<\96\dc}\91I?\ef?\94\a8\a8\e3\fd\8e\96<8bunz8\ef?}Ht\f2\18^\87<?\a6\b2O\ce1\ef?\f2\e7\1f\98+G\80<\dd|\e2eE+\ef?^\08q?{\b8\96\bc\81c\f5\e1\df$\ef?1\ab\tm\e1\f7\82<\e1\de\1f\f5\9d\1e\ef?\fa\bfo\1a\9b!=\bc\90\d9\da\d0\7f\18\ef?\b4\n\0cr\827\8b<\0b\03\e4\a6\85\12\ef?\8f\cb\ce\89\92\14n<V/>\a9\af\0c\ef?\b6\ab\b0MuM\83<\15\b71\n\fe\06\ef?Lt\ac\e2\01B\86<1\d8L\fcp\01\ef?J\f8\d3]9\dd\8f<\ff\16d\b2\08\fc\ee?\04[\8e;\80\a3\86\bc\f1\9f\92_\c5\f6\ee?hPK\cc\edJ\92\bc\cb\a9:7\a7\f1\ee?\8e-Q\1b\f8\07\99\bcf\d8\05m\ae\ec\ee?\d26\94>\e8\d1q\bc\f7\9f\e54\db\e7\ee?\15\1b\ce\b3\19\19\99\bc\e5\a8\13\c3-\e3\ee?mL*\a7H\9f\85<\"4\12L\a6\de\ee?\8ai(z`\12\93\bc\1c\80\ac\04E\da\ee?[\89\17H\8f\a7X\bc*.\f7!\n\d6\ee?\1b\9aIg\9b,|\bc\97\a8P\d9\f5\d1\ee?\11\ac\c2`\edcC<-\89a`\08\ce\ee?\efd\06;\tf\96<W\00\1d\edA\ca\ee?y\03\a1\da\e1\ccn<\d0<\c1\b5\a2\c6\ee?0\12\0f?\8e\ff\93<\de\d3\d7\f0*\c3\ee?\b0\afz\bb\ce\90v<\'*6\d5\da\bf\ee?w\e0T\eb\bd\1d\93<\r\dd\fd\99\b2\bc\ee?\8e\a3q\004\94\8f\bc\a7,\9dv\b2\b9\ee?I\a3\93\dc\cc\de\87\bcBf\cf\a2\da\b6\ee?_8\0f\bd\c6\dex\bc\82O\9dV+\b4\ee?\f6\\{\ecF\12\86\bc\0f\92]\ca\a4\b1\ee?\8e\d7\fd\18\055\93<\da\'\b56G\af\ee?\05\9b\8a/\b7\98{<\fd\c7\97\d4\12\ad\ee?\tT\1c\e2\e1c\90<)TH\dd\07\ab\ee?\ea\c6\19P\85\c74<\b7FY\8a&\a9\ee?5\c0d+\e62\94<H!\ad\15o\a7\ee?\9fv\99aJ\e4\8c\bc\t\dcv\b9\e1\a5\ee?\a8M\ef;\c53\8c\bc\85U:\b0~\a4\ee?\ae\e9+\89xS\84\bc \c3\cc4F\a3\ee?XXVx\dd\ce\93\bc%\"U\828\a2\ee?d\19~\80\aa\10W<s\a9L\d4U\a1\ee?(\"^\bf\ef\b3\93\bc\cd;\7ff\9e\a0\ee?\82\b94\87\ad\12j\bc\bf\da\0bu\12\a0\ee?\ee\a9m\b8\efgc\bc/\1ae<\b2\9f\ee?Q\88\e0T=\dc\80\bc\84\94Q\f9}\9f\ee?\cf>Z~d\1fx\bct_\ec\e8u\9f\ee?\b0}\8b\c0J\ee\86\bct\81\a5H\9a\9f\ee?\8a\e6U\1e2\19\86\bc\c9gBV\eb\9f\ee?\d3\d4\t^\cb\9c\90<?]\deOi\a0\ee?\1d\a5M\b9\dc2{\bc\87\01\ebs\14\a1\ee?k\c0gT\fd\ec\94<2\c10\01\ed\a1\ee?Ul\d6\ab\e1\ebe<bN\cf6\f3\a2\ee?B\cf\b3/\c5\a1\88\bc\12\1a>T\'\a4\ee?47;\f1\b6i\93\bc\13\ceL\99\89\a5\ee?\1e\ff\19:\84^\80\bc\ad\c7#F\1a\a7\ee?nWr\d8P\d4\94\bc\ed\92D\9b\d9\a8\ee?\00\8a\0e[g\ad\90<\99f\8a\d9\c7\aa\ee?\b4\ea\f0\c1/\b7\8d<\db\a0*B\e5\ac\ee?\ff\e7\c5\9c`\b6e\bc\8cD\b5\162\af\ee?D_\f3Y\83\f6{<6w\15\99\ae\b1\ee?\83=\1e\a7\1f\t\93\bc\c6\ff\91\0b[\b4\ee?)\1el\8b\b8\a9]\bc\e5\c5\cd\b07\b7\ee?Y\b9\90|\f9#l\bc\0fR\c8\cbD\ba\ee?\aa\f9\f4\"CC\92\bcPN\de\9f\82\bd\ee?K\8ef\d7l\ca\85\bc\ba\07\cap\f1\c0\ee?\'\ce\91+\fc\afq<\90\f0\a3\82\91\c4\ee?\bbs\n\e15\d2m<##\e3\19c\c8\ee?c\"b\"\04\c5\87\bce\e5]{f\cc\ee?\d51\e2\e3\86\1c\8b<3-J\ec\9b\d0\ee?\15\bb\bc\d3\d1\bb\91\bc]%>\b2\03\d5\ee?\d21\ee\9c1\cc\90<X\b30\13\9e\d9\ee?\b3Zsn\84i\84<\bf\fdyUk\de\ee?\b4\9d\8e\97\cd\df\82\bcz\f3\d3\bfk\e3\ee?\873\cb\92w\1a\8c<\ad\d3Z\99\9f\e8\ee?\fa\d9\d1J\8f{\90\bcf\b6\8d)\07\ee\ee?\ba\ae\dcV\d9\c3U\bc\fb\15O\b8\a2\f3\ee?@\f6\a6=\0e\a4\90\bc:Y\e5\8dr\f9\ee?4\93\ad8\f4\d6h\bcG^\fb\f2v\ff\ee?5\8aXk\e2\ee\91\bcJ\06\a10\b0\05\ef?\cd\dd_\n\d7\fft<\d2\c1K\90\1e\0c\ef?\ac\98\92\fa\fb\bd\91\bc\t\1e\d7[\c2\12\ef?\b3\0c\af0\aens<\9cR\85\dd\9b\19\ef?\94\fd\9f\\2\e3\8e<z\d0\ff_\ab \ef?\acY\t\d1\8f\e0\84<K\d1W.\f1\'\ef?g\1aN8\af\cdc<\b5\e7\06\94m/\ef?h\19\92l,kg<i\90\ef\dc 7\ef?\d2\b5\cc\83\18\8a\80\bc\fa\c3]U\0b?\ef?o\fa\ff?]\ad\8f\bc|\89\07J-G\ef?I\a9u8\ae\r\90\bc\f2\89\r\08\87O\ef?\a7\07=\a6\85\a3t<\87\a4\fb\dc\18X\ef?\0f\"@ \9e\91\82\bc\98\83\c9\16\e3`\ef?\ac\92\c1\d5PZ\8e<\852\db\03\e6i\ef?Kk\01\acY:\84<`\b4\01\f3!s\ef?\1f>\b4\07!\d5\82\bc_\9b{3\97|\ef?\c9\rG;\b9*\89\bc)\a1\f5\14F\86\ef?\d3\88:`\04\b6t<\f6?\8b\e7.\90\ef?qr\9dQ\ec\c5\83<\83L\c7\fbQ\9a\ef?\f0\91\d3\8f\12\f7\8f\bc\da\90\a4\a2\af\a4\ef?}t#\e2\98\ae\8d\bc\f1g\8e-H\af\ef?\08 \aaA\bc\c3\8e<\'Za\ee\1b\ba\ef?2\eb\a9\c3\94+\84<\97\bak7+\c5\ef?\ee\85\d11\a9d\8a<@En[v\d0\ef?\ed\e3;\e4\ba7\8e\bc\14\be\9c\ad\fd\db\ef?\9d\cd\91M;\89w<\d8\90\9e\81\c1\e7\ef?\89\cc`A\c1\05S<\f1q\8f+\c2\f3\ef?")
 (data $317 (i32.const 35948) "l")
 (data $317.1 (i32.const 35960) "\02\00\00\00P\00\00\00E\00n\00t\00r\00o\00p\00y\00 \00r\00a\00t\00e\00 \00o\00f\00 \00e\00m\00p\00t\00y\00 \00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000\00.\000")
 (data $318 (i32.const 36060) "L")
 (data $318.1 (i32.const 36072) "\02\00\00\008\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00u\00t\00i\00l\00s\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $319 (i32.const 36140) ",")
 (data $319.1 (i32.const 36152) "\01\00\00\00\18\00\00\00\9a\99\99\99\99\99\b9?\00\00\00\00\00\00\e0?333333\f3?")
 (data $320 (i32.const 36188) "|")
 (data $320.1 (i32.const 36200) "\02\00\00\00`\00\00\00E\00n\00t\00r\00o\00p\00y\00 \00r\00a\00t\00e\00 \00o\00f\00 \00n\00o\00n\00-\00e\00m\00p\00t\00y\00 \00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \000\00.\000")
 (data $321 (i32.const 36316) "L")
 (data $321.1 (i32.const 36328) "\02\00\00\002\00\00\00\13\' \00e\00n\00t\00r\00o\00p\00y\00R\00a\00t\00e\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $322 (i32.const 36396) "\1c")
 (data $322.1 (i32.const 36408) "\01")
 (data $323 (i32.const 36428) "|")
 (data $323.1 (i32.const 36440) "\02\00\00\00j\00\00\00A\00l\00i\00g\00n\00i\00n\00g\00 \00a\00n\00 \00e\00m\00p\00t\00y\00 \00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00s\00u\00l\00t\00 \00i\00n\00 \00a\00n\00 \00e\00m\00p\00t\00y\00 \00r\00i\00n\00g")
 (data $324 (i32.const 36556) ",")
 (data $324.1 (i32.const 36568) "\01\00\00\00\18\00\00\00\9a\99\99\99\99\99\b9?\00\00\00\00\00\00\e0?333333\f3?")
 (data $325 (i32.const 36604) "l")
 (data $325.1 (i32.const 36616) "\02\00\00\00P\00\00\00A\00l\00i\00g\00n\00e\00d\00 \00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00s\00a\00m\00e\00 \00l\00e\00n\00g\00t\00h")
 (data $326 (i32.const 36716) "l")
 (data $326.1 (i32.const 36728) "\02\00\00\00V\00\00\00A\00l\00l\00 \00p\00h\00a\00s\00e\00s\00 \00i\00n\00 \00a\00n\00 \00a\00l\00i\00g\00n\00e\00d\00 \00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000\00.\000")
 (data $327 (i32.const 36828) "<")
 (data $327.1 (i32.const 36840) "\02\00\00\00&\00\00\00\13\' \00a\00l\00i\00g\00n\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $328 (i32.const 36892) "\1c")
 (data $328.1 (i32.const 36904) "\01\00\00\00\0c\00\00\00\02\00\00\00\03\00\00\00\05")
 (data $329 (i32.const 36924) "L")
 (data $329.1 (i32.const 36936) "\02\00\00\004\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z")
 (data $330 (i32.const 37004) "\\")
 (data $330.1 (i32.const 37016) "\02\00\00\00L\00\00\00g\00e\00n\00e\00r\00a\00t\00e\00S\00y\00m\00b\00o\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00d\00e\00t\00e\00r\00m\00i\00n\00i\00s\00t\00i\00c")
 (data $331 (i32.const 37100) "\1c")
 (data $331.1 (i32.const 37112) "\01\00\00\00\0c\00\00\00\07\00\00\00\0b\00\00\00\r")
 (data $332 (i32.const 37132) "l")
 (data $332.1 (i32.const 37144) "\02\00\00\00X\00\00\00G\00e\00n\00e\00r\00a\00t\00e\00d\00 \00s\00y\00m\00b\00o\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00s\00 \00l\00o\00n\00g")
 (data $333 (i32.const 37244) "L")
 (data $333.1 (i32.const 37256) "\02\00\00\008\00\00\00\13\' \00g\00e\00n\00e\00r\00a\00t\00e\00S\00y\00m\00b\00o\00l\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $334 (i32.const 37324) "\1c")
 (data $334.1 (i32.const 37336) "\02\00\00\00\02\00\00\00.")
 (data $335 (i32.const 37356) "\1c")
 (data $335.1 (i32.const 37368) "\02\00\00\00\08\00\00\003\00.\001\004")
 (data $336 (i32.const 37388) "l")
 (data $336.1 (i32.const 37400) "\02\00\00\00T\00\00\00t\00o\00F\00i\00x\00e\00d\00 \00s\00h\00o\00u\00l\00d\00 \00d\00e\00f\00a\00u\00l\00t\00 \00t\00o\00 \002\00 \00d\00e\00c\00i\00m\00a\00l\00 \00p\00l\00a\00c\00e\00s")
 (data $337 (i32.const 37500) "\1c")
 (data $337.1 (i32.const 37512) "\02\00\00\00\n\00\00\003\00.\001\004\002")
 (data $338 (i32.const 37532) "l")
 (data $338.1 (i32.const 37544) "\02\00\00\00\\\00\00\00t\00o\00F\00i\00x\00e\00d\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00n\00d\00l\00e\00 \00s\00p\00e\00c\00i\00f\00i\00e\00d\00 \00d\00e\00c\00i\00m\00a\00l\00 \00p\00l\00a\00c\00e\00s")
 (data $339 (i32.const 37644) "\1c")
 (data $339.1 (i32.const 37656) "\02\00\00\00\0c\00\00\001\00.\005\000\000\000")
 (data $340 (i32.const 37676) "\\")
 (data $340.1 (i32.const 37688) "\02\00\00\00B\00\00\00t\00o\00F\00i\00x\00e\00d\00 \00s\00h\00o\00u\00l\00d\00 \00a\00d\00d\00 \00t\00r\00a\00i\00l\00i\00n\00g\00 \00z\00e\00r\00o\00s")
 (data $341 (i32.const 37772) "\1c")
 (data $341.1 (i32.const 37784) "\02\00\00\00\08\00\00\005\00.\000\000")
 (data $342 (i32.const 37804) "l")
 (data $342.1 (i32.const 37816) "\02\00\00\00P\00\00\00t\00o\00F\00i\00x\00e\00d\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00n\00d\00l\00e\00 \00i\00n\00t\00e\00g\00e\00r\00s\00 \00c\00o\00r\00r\00e\00c\00t\00l\00y")
 (data $343 (i32.const 37916) "<")
 (data $343.1 (i32.const 37928) "\02\00\00\00*\00\00\00\13\' \00t\00o\00F\00i\00x\00e\00d\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $344 (i32.const 37980) "\\")
 (data $344.1 (i32.const 37992) "\02\00\00\00B\00\00\00\n\00A\00l\00l\00 \00u\00t\00i\00l\00s\00 \00m\00o\00d\00u\00l\00e\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $345 (i32.const 38076) "L")
 (data $345.1 (i32.const 38088) "\02\00\00\000\00\00\00\05\' \00U\00t\00i\00l\00s\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $346 (i32.const 38156) "<")
 (data $346.1 (i32.const 38168) "\02\00\00\00,\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00A\00r\00r\00a\00y\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $347 (i32.const 38220) "L")
 (data $347.1 (i32.const 38232) "\02\00\00\00<\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00a\00r\00r\00a\00y\00 \00u\00t\00i\00l\00i\00t\00y\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $348 (i32.const 38300) "\8c")
 (data $348.1 (i32.const 38312) "\02\00\00\00|\00\00\00c\00r\00e\00a\00t\00e\00A\00r\00r\00a\00y\00 \00s\00h\00o\00u\00l\00d\00 \00c\00r\00e\00a\00t\00e\00 \00a\00n\00 \00a\00r\00r\00a\00y\00 \00w\00i\00t\00h\00 \00t\00h\00e\00 \00s\00p\00e\00c\00i\00f\00i\00e\00d\00 \00c\00a\00p\00a\00c\00i\00t\00y")
 (data $349 (i32.const 38444) "\\")
 (data $349.1 (i32.const 38456) "\02\00\00\00D\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00c\00o\00r\00e\00-\00a\00r\00r\00a\00y\00s\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $350 (i32.const 38540) "\8c")
 (data $350.1 (i32.const 38552) "\02\00\00\00r\00\00\00c\00r\00e\00a\00t\00e\00A\00r\00r\00a\00y\00 \00s\00h\00o\00u\00l\00d\00 \00c\00r\00e\00a\00t\00e\00 \00a\00n\00 \00e\00m\00p\00t\00y\00 \00a\00r\00r\00a\00y\00 \00w\00i\00t\00h\00 \00n\00o\00 \00c\00a\00p\00a\00c\00i\00t\00y")
 (data $351 (i32.const 38684) "L")
 (data $351.1 (i32.const 38696) "\02\00\00\002\00\00\00\13\' \00c\00r\00e\00a\00t\00e\00A\00r\00r\00a\00y\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $352 (i32.const 38764) "\8c")
 (data $352.1 (i32.const 38776) "\02\00\00\00|\00\00\00c\00r\00e\00a\00t\00e\00F\00i\00l\00l\00e\00d\00A\00r\00r\00a\00y\00 \00s\00h\00o\00u\00l\00d\00 \00c\00r\00e\00a\00t\00e\00 \00a\00n\00 \00a\00r\00r\00a\00y\00 \00w\00i\00t\00h\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00s\00i\00z\00e")
 (data $353 (i32.const 38908) "\8c")
 (data $353.1 (i32.const 38920) "\02\00\00\00x\00\00\00A\00l\00l\00 \00e\00l\00e\00m\00e\00n\00t\00s\00 \00i\00n\00 \00a\00 \00f\00i\00l\00l\00e\00d\00 \00a\00r\00r\00a\00y\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00d\00e\00f\00a\00u\00l\00t\00 \00v\00a\00l\00u\00e")
 (data $354 (i32.const 39052) "\\")
 (data $354.1 (i32.const 39064) "\02\00\00\00>\00\00\00\13\' \00c\00r\00e\00a\00t\00e\00F\00i\00l\00l\00e\00d\00A\00r\00r\00a\00y\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $355 (i32.const 39148) "\1c")
 (data $355.1 (i32.const 39160) "\02\00\00\00\02\00\00\00a")
 (data $356 (i32.const 39180) "\1c")
 (data $356.1 (i32.const 39192) "\02\00\00\00\02\00\00\00b")
 (data $357 (i32.const 39212) "\ac")
 (data $357.1 (i32.const 39224) "\02\00\00\00\96\00\00\00a\00r\00r\00a\00y\00F\00r\00o\00m\00M\00a\00p\00V\00a\00l\00u\00e\00s\00 \00s\00h\00o\00u\00l\00d\00 \00c\00r\00e\00a\00t\00e\00 \00a\00n\00 \00a\00r\00r\00a\00y\00 \00w\00i\00t\00h\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00v\00a\00l\00u\00e\00s")
 (data $358 (i32.const 39388) "|")
 (data $358.1 (i32.const 39400) "\02\00\00\00`\00\00\00T\00h\00e\00 \00a\00r\00r\00a\00y\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00t\00h\00e\00 \00v\00a\00l\00u\00e\00s\00 \00f\00r\00o\00m\00 \00t\00h\00e\00 \00m\00a\00p")
 (data $359 (i32.const 39516) "\\")
 (data $359.1 (i32.const 39528) "\02\00\00\00@\00\00\00\13\' \00a\00r\00r\00a\00y\00F\00r\00o\00m\00M\00a\00p\00V\00a\00l\00u\00e\00s\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $360 (i32.const 39612) "\1c")
 (data $360.1 (i32.const 39624) "\01\00\00\00\0c\00\00\00\n\00\00\00\14\00\00\00\1e")
 (data $361 (i32.const 39644) "|")
 (data $361.1 (i32.const 39656) "\02\00\00\00d\00\00\00s\00a\00f\00e\00G\00e\00t\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00e\00l\00e\00m\00e\00n\00t\00 \00a\00t\00 \00a\00 \00v\00a\00l\00i\00d\00 \00i\00n\00d\00e\00x")
 (data $362 (i32.const 39772) "\9c")
 (data $362.1 (i32.const 39784) "\02\00\00\00\84\00\00\00s\00a\00f\00e\00G\00e\00t\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00d\00e\00f\00a\00u\00l\00t\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00a\00n\00 \00o\00u\00t\00-\00o\00f\00-\00b\00o\00u\00n\00d\00s\00 \00i\00n\00d\00e\00x")
 (data $363 (i32.const 39932) "<")
 (data $363.1 (i32.const 39944) "\02\00\00\00*\00\00\00\13\' \00s\00a\00f\00e\00G\00e\00t\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $364 (i32.const 39996) ",")
 (data $364.1 (i32.const 40008) "\01\00\00\00\18\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\02\00\00\00\04\00\00\00\02")
 (data $365 (i32.const 40044) "\8c")
 (data $365.1 (i32.const 40056) "\02\00\00\00|\00\00\00r\00e\00m\00o\00v\00e\00A\00l\00l\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00m\00o\00v\00e\00 \00a\00l\00l\00 \00o\00c\00c\00u\00r\00r\00e\00n\00c\00e\00s\00 \00o\00f\00 \00t\00h\00e\00 \00s\00p\00e\00c\00i\00f\00i\00e\00d\00 \00v\00a\00l\00u\00e")
 (data $366 (i32.const 40188) "|")
 (data $366.1 (i32.const 40200) "\02\00\00\00l\00\00\00T\00h\00e\00 \00r\00e\00m\00a\00i\00n\00i\00n\00g\00 \00e\00l\00e\00m\00e\00n\00t\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00a\00f\00t\00e\00r\00 \00r\00e\00m\00o\00v\00a\00l")
 (data $367 (i32.const 40316) "L")
 (data $367.1 (i32.const 40328) "\02\00\00\00.\00\00\00\13\' \00r\00e\00m\00o\00v\00e\00A\00l\00l\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $368 (i32.const 40396) ",")
 (data $368.1 (i32.const 40408) "\01\00\00\00\18\00\00\00\01\00\00\00\02\00\00\00\02\00\00\00\03\00\00\00\01\00\00\00\04")
 (data $369 (i32.const 40444) "|")
 (data $369.1 (i32.const 40456) "\02\00\00\00f\00\00\00r\00e\00m\00o\00v\00e\00D\00u\00p\00l\00i\00c\00a\00t\00e\00s\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00m\00o\00v\00e\00 \00a\00l\00l\00 \00d\00u\00p\00l\00i\00c\00a\00t\00e\00 \00v\00a\00l\00u\00e\00s")
 (data $370 (i32.const 40572) ",")
 (data $370.1 (i32.const 40584) "\01\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data $371 (i32.const 40620) "l")
 (data $371.1 (i32.const 40632) "\02\00\00\00N\00\00\00T\00h\00e\00 \00r\00e\00m\00a\00i\00n\00i\00n\00g\00 \00e\00l\00e\00m\00e\00n\00t\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00u\00n\00i\00q\00u\00e")
 (data $372 (i32.const 40732) "L")
 (data $372.1 (i32.const 40744) "\02\00\00\00<\00\00\00\13\' \00r\00e\00m\00o\00v\00e\00D\00u\00p\00l\00i\00c\00a\00t\00e\00s\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $373 (i32.const 40812) ",")
 (data $373.1 (i32.const 40824) "\01\00\00\00\18\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06")
 (data $374 (i32.const 40860) "\1c")
 (data $374.1 (i32.const 40872) "\ae\00\00\00\08\00\00\00\05")
 (data $375 (i32.const 40892) "\1c")
 (data $375.1 (i32.const 40904) "\01\00\00\00\0c\00\00\00\02\00\00\00\04\00\00\00\06")
 (data $376 (i32.const 40924) "|")
 (data $376.1 (i32.const 40936) "\02\00\00\00h\00\00\00T\00h\00e\00 \00t\00r\00u\00t\00h\00y\00 \00p\00a\00r\00t\00i\00t\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00a\00l\00l\00 \00e\00v\00e\00n\00 \00n\00u\00m\00b\00e\00r\00s")
 (data $377 (i32.const 41052) "\1c")
 (data $377.1 (i32.const 41064) "\01\00\00\00\0c\00\00\00\01\00\00\00\03\00\00\00\05")
 (data $378 (i32.const 41084) "|")
 (data $378.1 (i32.const 41096) "\02\00\00\00d\00\00\00T\00h\00e\00 \00f\00a\00l\00s\00y\00 \00p\00a\00r\00t\00i\00t\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00a\00l\00l\00 \00o\00d\00d\00 \00n\00u\00m\00b\00e\00r\00s")
 (data $379 (i32.const 41212) "L")
 (data $379.1 (i32.const 41224) "\02\00\00\00.\00\00\00\13\' \00p\00a\00r\00t\00i\00t\00i\00o\00n\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $380 (i32.const 41292) "\1c")
 (data $380.1 (i32.const 41304) "\01\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $381 (i32.const 41324) "\1c")
 (data $381.1 (i32.const 41336) "\02\00\00\00\02\00\00\00c")
 (data $382 (i32.const 41356) "\1c")
 (data $382.1 (i32.const 41368) "\01\00\00\00\0c\00\00\00\00\99\00\00 \99\00\00\80\a1")
 (data $383 (i32.const 41388) "\8c")
 (data $383.1 (i32.const 41400) "\02\00\00\00x\00\00\00z\00i\00p\00 \00s\00h\00o\00u\00l\00d\00 \00c\00r\00e\00a\00t\00e\00 \00a\00n\00 \00a\00r\00r\00a\00y\00 \00o\00f\00 \00t\00u\00p\00l\00e\00s\00 \00w\00i\00t\00h\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00l\00e\00n\00g\00t\00h")
 (data $384 (i32.const 41532) "l")
 (data $384.1 (i32.const 41544) "\02\00\00\00P\00\00\00T\00h\00e\00 \00f\00i\00r\00s\00t\00 \00z\00i\00p\00p\00e\00d\00 \00t\00u\00p\00l\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $385 (i32.const 41644) "l")
 (data $385.1 (i32.const 41656) "\02\00\00\00N\00\00\00T\00h\00e\00 \00l\00a\00s\00t\00 \00z\00i\00p\00p\00e\00d\00 \00t\00u\00p\00l\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $386 (i32.const 41756) "<")
 (data $386.1 (i32.const 41768) "\02\00\00\00\"\00\00\00\13\' \00z\00i\00p\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $387 (i32.const 41820) ",")
 (data $387.1 (i32.const 41832) "\01\00\00\00\1c\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07")
 (data $388 (i32.const 41868) "L")
 (data $388.1 (i32.const 41880) "\02\00\00\006\00\00\00C\00h\00u\00n\00k\00 \00s\00i\00z\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00p\00o\00s\00i\00t\00i\00v\00e")
 (data $389 (i32.const 41948) "L")
 (data $389.1 (i32.const 41960) "\02\00\00\00.\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00o\00r\00e\00/\00a\00r\00r\00a\00y\00s\00.\00t\00s")
 (data $390 (i32.const 42028) "|")
 (data $390.1 (i32.const 42040) "\02\00\00\00`\00\00\00c\00h\00u\00n\00k\00 \00s\00h\00o\00u\00l\00d\00 \00c\00r\00e\00a\00t\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00c\00h\00u\00n\00k\00s")
 (data $391 (i32.const 42156) "\1c")
 (data $391.1 (i32.const 42168) "\01\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $392 (i32.const 42188) "\\")
 (data $392.1 (i32.const 42200) "\02\00\00\00B\00\00\00T\00h\00e\00 \00f\00i\00r\00s\00t\00 \00c\00h\00u\00n\00k\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $393 (i32.const 42284) "\1c")
 (data $393.1 (i32.const 42296) "\01\00\00\00\04\00\00\00\07")
 (data $394 (i32.const 42316) "\\")
 (data $394.1 (i32.const 42328) "\02\00\00\00@\00\00\00T\00h\00e\00 \00l\00a\00s\00t\00 \00c\00h\00u\00n\00k\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $395 (i32.const 42412) "<")
 (data $395.1 (i32.const 42424) "\02\00\00\00&\00\00\00\13\' \00c\00h\00u\00n\00k\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $396 (i32.const 42476) "\1c")
 (data $396.1 (i32.const 42488) "\01\00\00\00\08\00\00\00\01\00\00\00\02")
 (data $397 (i32.const 42508) "\1c")
 (data $397.1 (i32.const 42520) "\01\00\00\00\08\00\00\00\03\00\00\00\04")
 (data $398 (i32.const 42540) "\1c")
 (data $398.1 (i32.const 42552) "\01\00\00\00\04\00\00\00\05")
 (data $399 (i32.const 42572) ",")
 (data $399.1 (i32.const 42584) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $400 (i32.const 42620) "l")
 (data $400.1 (i32.const 42632) "\02\00\00\00V\00\00\00f\00l\00a\00t\00t\00e\00n\00 \00s\00h\00o\00u\00l\00d\00 \00p\00r\00o\00d\00u\00c\00e\00 \00a\00 \00s\00i\00n\00g\00l\00e\00,\00 \00f\00l\00a\00t\00 \00a\00r\00r\00a\00y")
 (data $401 (i32.const 42732) "<")
 (data $401.1 (i32.const 42744) "\02\00\00\00*\00\00\00\13\' \00f\00l\00a\00t\00t\00e\00n\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $402 (i32.const 42796) ",")
 (data $402.1 (i32.const 42808) "\01\00\00\00\14\00\00\00\n\00\00\00\14\00\00\00\1e\00\00\00(\00\00\002")
 (data $403 (i32.const 42844) "\1c")
 (data $403.1 (i32.const 42856) "\b2\00\00\00\08\00\00\00\06")
 (data $404 (i32.const 42876) "\ac")
 (data $404.1 (i32.const 42888) "\02\00\00\00\8e\00\00\00f\00i\00n\00d\00I\00n\00d\00e\00x\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00i\00n\00d\00e\00x\00 \00o\00f\00 \00t\00h\00e\00 \00f\00i\00r\00s\00t\00 \00m\00a\00t\00c\00h\00i\00n\00g\00 \00e\00l\00e\00m\00e\00n\00t")
 (data $405 (i32.const 43052) "\1c")
 (data $405.1 (i32.const 43064) "\b2\00\00\00\08\00\00\00\07")
 (data $406 (i32.const 43084) "|")
 (data $406.1 (i32.const 43096) "\02\00\00\00b\00\00\00f\00i\00n\00d\00I\00n\00d\00e\00x\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00-\001\00 \00i\00f\00 \00n\00o\00 \00e\00l\00e\00m\00e\00n\00t\00 \00i\00s\00 \00f\00o\00u\00n\00d")
 (data $407 (i32.const 43212) "L")
 (data $407.1 (i32.const 43224) "\02\00\00\00.\00\00\00\13\' \00f\00i\00n\00d\00I\00n\00d\00e\00x\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $408 (i32.const 43292) ",")
 (data $408.1 (i32.const 43304) "\01\00\00\00\18\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06")
 (data $409 (i32.const 43340) "\1c")
 (data $409.1 (i32.const 43352) "\ae\00\00\00\08\00\00\00\08")
 (data $410 (i32.const 43372) "\ac")
 (data $410.1 (i32.const 43384) "\02\00\00\00\96\00\00\00c\00o\00u\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00e\00l\00e\00m\00e\00n\00t\00s\00 \00t\00h\00a\00t\00 \00m\00a\00t\00c\00h\00 \00t\00h\00e\00 \00p\00r\00e\00d\00i\00c\00a\00t\00e")
 (data $411 (i32.const 43548) "<")
 (data $411.1 (i32.const 43560) "\02\00\00\00&\00\00\00\13\' \00c\00o\00u\00n\00t\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $412 (i32.const 43612) "<")
 (data $412.1 (i32.const 43624) "\02\00\00\00&\00\00\00S\00t\00e\00p\00 \00c\00a\00n\00n\00o\00t\00 \00b\00e\00 \00z\00e\00r\00o")
 (data $413 (i32.const 43676) ",")
 (data $413.1 (i32.const 43688) "\01\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data $414 (i32.const 43724) "|")
 (data $414.1 (i32.const 43736) "\02\00\00\00h\00\00\00r\00a\00n\00g\00e\00 \00s\00h\00o\00u\00l\00d\00 \00c\00r\00e\00a\00t\00e\00 \00a\00n\00 \00a\00r\00r\00a\00y\00 \00w\00i\00t\00h\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00v\00a\00l\00u\00e\00s")
 (data $415 (i32.const 43852) ",")
 (data $415.1 (i32.const 43864) "\01\00\00\00\10\00\00\00\05\00\00\00\04\00\00\00\03\00\00\00\02")
 (data $416 (i32.const 43900) "l")
 (data $416.1 (i32.const 43912) "\02\00\00\00Z\00\00\00r\00a\00n\00g\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00n\00d\00l\00e\00 \00a\00 \00n\00e\00g\00a\00t\00i\00v\00e\00 \00s\00t\00e\00p\00 \00c\00o\00r\00r\00e\00c\00t\00l\00y")
 (data $417 (i32.const 44012) "<")
 (data $417.1 (i32.const 44024) "\02\00\00\00&\00\00\00\13\' \00r\00a\00n\00g\00e\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $418 (i32.const 44076) "\1c")
 (data $418.1 (i32.const 44088) "\b6\00\00\00\08\00\00\00\t")
 (data $419 (i32.const 44108) "l")
 (data $419.1 (i32.const 44120) "\02\00\00\00N\00\00\00g\00r\00o\00u\00p\00B\00y\00 \00s\00h\00o\00u\00l\00d\00 \00g\00r\00o\00u\00p\00 \00e\00l\00e\00m\00e\00n\00t\00s\00 \00c\00o\00r\00r\00e\00c\00t\00l\00y")
 (data $420 (i32.const 44220) "|")
 (data $420.1 (i32.const 44232) "\02\00\00\00d\00\00\00g\00r\00o\00u\00p\00B\00y\00 \00s\00h\00o\00u\00l\00d\00 \00c\00r\00e\00a\00t\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00g\00r\00o\00u\00p\00s")
 (data $421 (i32.const 44348) "<")
 (data $421.1 (i32.const 44360) "\02\00\00\00*\00\00\00\13\' \00g\00r\00o\00u\00p\00B\00y\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $422 (i32.const 44412) ",")
 (data $422.1 (i32.const 44424) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $423 (i32.const 44460) "|")
 (data $423.1 (i32.const 44472) "\02\00\00\00b\00\00\00s\00h\00u\00f\00f\00l\00e\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00c\00h\00a\00n\00g\00e\00 \00t\00h\00e\00 \00l\00e\00n\00g\00t\00h\00 \00o\00f\00 \00t\00h\00e\00 \00a\00r\00r\00a\00y")
 (data $424 (i32.const 44588) "|")
 (data $424.1 (i32.const 44600) "\02\00\00\00^\00\00\00s\00h\00u\00f\00f\00l\00e\00 \00s\00h\00o\00u\00l\00d\00 \00c\00h\00a\00n\00g\00e\00 \00t\00h\00e\00 \00o\00r\00d\00e\00r\00 \00o\00f\00 \00t\00h\00e\00 \00e\00l\00e\00m\00e\00n\00t\00s")
 (data $425 (i32.const 44716) "<")
 (data $425.1 (i32.const 44728) "\02\00\00\00*\00\00\00\13\' \00s\00h\00u\00f\00f\00l\00e\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $426 (i32.const 44780) "\1c")
 (data $426.1 (i32.const 44792) "\01\00\00\00\0c\00\00\00\n\00\00\00\14\00\00\00\1e")
 (data $427 (i32.const 44812) "|")
 (data $427.1 (i32.const 44824) "\02\00\00\00`\00\00\00l\00a\00s\00t\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00l\00a\00s\00t\00 \00e\00l\00e\00m\00e\00n\00t\00 \00o\00f\00 \00t\00h\00e\00 \00a\00r\00r\00a\00y")
 (data $428 (i32.const 44940) "\1c")
 (data $428.1 (i32.const 44952) "\01")
 (data $429 (i32.const 44972) "\8c")
 (data $429.1 (i32.const 44984) "\02\00\00\00n\00\00\00l\00a\00s\00t\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00d\00e\00f\00a\00u\00l\00t\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00a\00n\00 \00e\00m\00p\00t\00y\00 \00a\00r\00r\00a\00y")
 (data $430 (i32.const 45116) "<")
 (data $430.1 (i32.const 45128) "\02\00\00\00$\00\00\00\13\' \00l\00a\00s\00t\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $431 (i32.const 45180) "\1c")
 (data $431.1 (i32.const 45192) "\01\00\00\00\0c\00\00\00\n\00\00\00\14\00\00\00\1e")
 (data $432 (i32.const 45212) "|")
 (data $432.1 (i32.const 45224) "\02\00\00\00d\00\00\00f\00i\00r\00s\00t\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00f\00i\00r\00s\00t\00 \00e\00l\00e\00m\00e\00n\00t\00 \00o\00f\00 \00t\00h\00e\00 \00a\00r\00r\00a\00y")
 (data $433 (i32.const 45340) "\1c")
 (data $433.1 (i32.const 45352) "\01")
 (data $434 (i32.const 45372) "\8c")
 (data $434.1 (i32.const 45384) "\02\00\00\00p\00\00\00f\00i\00r\00s\00t\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00d\00e\00f\00a\00u\00l\00t\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00a\00n\00 \00e\00m\00p\00t\00y\00 \00a\00r\00r\00a\00y")
 (data $435 (i32.const 45516) "<")
 (data $435.1 (i32.const 45528) "\02\00\00\00&\00\00\00\13\' \00f\00i\00r\00s\00t\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $436 (i32.const 45580) "\1c")
 (data $436.1 (i32.const 45592) "\01\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $437 (i32.const 45612) "\1c")
 (data $437.1 (i32.const 45624) "\01\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $438 (i32.const 45644) "\1c")
 (data $438.1 (i32.const 45656) "\01\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\04")
 (data $439 (i32.const 45676) "|")
 (data $439.1 (i32.const 45688) "\02\00\00\00^\00\00\00a\00r\00r\00a\00y\00E\00q\00u\00a\00l\00s\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00r\00u\00e\00 \00f\00o\00r\00 \00e\00q\00u\00a\00l\00 \00a\00r\00r\00a\00y\00s")
 (data $440 (i32.const 45804) "|")
 (data $440.1 (i32.const 45816) "\02\00\00\00d\00\00\00a\00r\00r\00a\00y\00E\00q\00u\00a\00l\00s\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00f\00a\00l\00s\00e\00 \00f\00o\00r\00 \00u\00n\00e\00q\00u\00a\00l\00 \00a\00r\00r\00a\00y\00s")
 (data $441 (i32.const 45932) "L")
 (data $441.1 (i32.const 45944) "\02\00\00\002\00\00\00\13\' \00a\00r\00r\00a\00y\00E\00q\00u\00a\00l\00s\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $442 (i32.const 46012) ",")
 (data $442.1 (i32.const 46024) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $443 (i32.const 46060) "<")
 (data $443.1 (i32.const 46072) "\02\00\00\00&\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00w\00i\00n\00d\00o\00w\00 \00s\00i\00z\00e")
 (data $444 (i32.const 46124) "\8c")
 (data $444.1 (i32.const 46136) "\02\00\00\00r\00\00\00s\00l\00i\00d\00i\00n\00g\00W\00i\00n\00d\00o\00w\00 \00s\00h\00o\00u\00l\00d\00 \00c\00r\00e\00a\00t\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00w\00i\00n\00d\00o\00w\00s")
 (data $445 (i32.const 46268) "\1c")
 (data $445.1 (i32.const 46280) "\01\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $446 (i32.const 46300) "\\")
 (data $446.1 (i32.const 46312) "\02\00\00\00D\00\00\00T\00h\00e\00 \00f\00i\00r\00s\00t\00 \00w\00i\00n\00d\00o\00w\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $447 (i32.const 46396) "\1c")
 (data $447.1 (i32.const 46408) "\01\00\00\00\0c\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $448 (i32.const 46428) "\\")
 (data $448.1 (i32.const 46440) "\02\00\00\00B\00\00\00T\00h\00e\00 \00l\00a\00s\00t\00 \00w\00i\00n\00d\00o\00w\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $449 (i32.const 46524) "L")
 (data $449.1 (i32.const 46536) "\02\00\00\006\00\00\00\13\' \00s\00l\00i\00d\00i\00n\00g\00W\00i\00n\00d\00o\00w\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $450 (i32.const 46604) ",")
 (data $450.1 (i32.const 46616) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $451 (i32.const 46652) ",")
 (data $451.1 (i32.const 46664) "\01\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $452 (i32.const 46700) "l")
 (data $452.1 (i32.const 46712) "\02\00\00\00V\00\00\00r\00o\00t\00a\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00o\00t\00a\00t\00e\00 \00t\00h\00e\00 \00a\00r\00r\00a\00y\00 \00t\00o\00 \00t\00h\00e\00 \00r\00i\00g\00h\00t")
 (data $453 (i32.const 46812) ",")
 (data $453.1 (i32.const 46824) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $454 (i32.const 46860) "|")
 (data $454.1 (i32.const 46872) "\02\00\00\00^\00\00\00r\00o\00t\00a\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00o\00t\00a\00t\00e\00 \00t\00h\00e\00 \00a\00r\00r\00a\00y\00 \00b\00a\00c\00k\00 \00t\00o\00 \00t\00h\00e\00 \00l\00e\00f\00t")
 (data $455 (i32.const 46988) "<")
 (data $455.1 (i32.const 47000) "\02\00\00\00(\00\00\00\13\' \00r\00o\00t\00a\00t\00e\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $456 (i32.const 47052) ",")
 (data $456.1 (i32.const 47064) "\01\00\00\00\14\00\00\00\n\00\00\00\14\00\00\00\1e\00\00\00(\00\00\002")
 (data $457 (i32.const 47100) "\1c")
 (data $457.1 (i32.const 47112) "\b7\00\00\00\08\00\00\00\n")
 (data $458 (i32.const 47132) "\8c")
 (data $458.1 (i32.const 47144) "\02\00\00\00t\00\00\00b\00i\00n\00a\00r\00y\00S\00e\00a\00r\00c\00h\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00i\00n\00d\00e\00x\00 \00o\00f\00 \00t\00h\00e\00 \00t\00a\00r\00g\00e\00t")
 (data $459 (i32.const 47276) "\1c")
 (data $459.1 (i32.const 47288) "\b7\00\00\00\08\00\00\00\0b")
 (data $460 (i32.const 47308) "\8c")
 (data $460.1 (i32.const 47320) "\02\00\00\00p\00\00\00b\00i\00n\00a\00r\00y\00S\00e\00a\00r\00c\00h\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00-\001\00 \00i\00f\00 \00t\00h\00e\00 \00t\00a\00r\00g\00e\00t\00 \00i\00s\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d")
 (data $461 (i32.const 47452) "L")
 (data $461.1 (i32.const 47464) "\02\00\00\004\00\00\00\13\' \00b\00i\00n\00a\00r\00y\00S\00e\00a\00r\00c\00h\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $462 (i32.const 47532) ",")
 (data $462.1 (i32.const 47544) "\01\00\00\00\10\00\00\00\n\00\00\00\14\00\00\00(\00\00\002")
 (data $463 (i32.const 47580) "\1c")
 (data $463.1 (i32.const 47592) "\b7\00\00\00\08\00\00\00\0c")
 (data $464 (i32.const 47612) ",")
 (data $464.1 (i32.const 47624) "\01\00\00\00\14\00\00\00\n\00\00\00\14\00\00\00\1e\00\00\00(\00\00\002")
 (data $465 (i32.const 47660) "\8c")
 (data $465.1 (i32.const 47672) "\02\00\00\00|\00\00\00i\00n\00s\00e\00r\00t\00S\00o\00r\00t\00e\00d\00 \00s\00h\00o\00u\00l\00d\00 \00i\00n\00s\00e\00r\00t\00 \00t\00h\00e\00 \00e\00l\00e\00m\00e\00n\00t\00 \00a\00t\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00p\00o\00s\00i\00t\00i\00o\00n")
 (data $466 (i32.const 47804) "L")
 (data $466.1 (i32.const 47816) "\02\00\00\004\00\00\00\13\' \00i\00n\00s\00e\00r\00t\00S\00o\00r\00t\00e\00d\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $467 (i32.const 47884) ",")
 (data $467.1 (i32.const 47896) "\01\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data $468 (i32.const 47932) ",")
 (data $468.1 (i32.const 47944) "\01\00\00\00\10\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06")
 (data $469 (i32.const 47980) "\1c")
 (data $469.1 (i32.const 47992) "\01\00\00\00\08\00\00\00\03\00\00\00\04")
 (data $470 (i32.const 48012) "l")
 (data $470.1 (i32.const 48024) "\02\00\00\00\\\00\00\00i\00n\00t\00e\00r\00s\00e\00c\00t\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00c\00o\00m\00m\00o\00n\00 \00e\00l\00e\00m\00e\00n\00t\00s")
 (data $471 (i32.const 48124) "L")
 (data $471.1 (i32.const 48136) "\02\00\00\004\00\00\00\13\' \00i\00n\00t\00e\00r\00s\00e\00c\00t\00i\00o\00n\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $472 (i32.const 48204) ",")
 (data $472.1 (i32.const 48216) "\01\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data $473 (i32.const 48252) ",")
 (data $473.1 (i32.const 48264) "\01\00\00\00\10\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06")
 (data $474 (i32.const 48300) "\1c")
 (data $474.1 (i32.const 48312) "\01\00\00\00\08\00\00\00\01\00\00\00\02")
 (data $475 (i32.const 48332) "\ac")
 (data $475.1 (i32.const 48344) "\02\00\00\00\96\00\00\00d\00i\00f\00f\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00e\00l\00e\00m\00e\00n\00t\00s\00 \00i\00n\00 \00t\00h\00e\00 \00f\00i\00r\00s\00t\00 \00a\00r\00r\00a\00y\00 \00b\00u\00t\00 \00n\00o\00t\00 \00t\00h\00e\00 \00s\00e\00c\00o\00n\00d")
 (data $476 (i32.const 48508) "L")
 (data $476.1 (i32.const 48520) "\02\00\00\000\00\00\00\13\' \00d\00i\00f\00f\00e\00r\00e\00n\00c\00e\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $477 (i32.const 48588) ",")
 (data $477.1 (i32.const 48600) "\01\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data $478 (i32.const 48636) ",")
 (data $478.1 (i32.const 48648) "\01\00\00\00\10\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06")
 (data $479 (i32.const 48684) ",")
 (data $479.1 (i32.const 48696) "\01\00\00\00\18\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06")
 (data $480 (i32.const 48732) "\8c")
 (data $480.1 (i32.const 48744) "\02\00\00\00p\00\00\00u\00n\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00a\00l\00l\00 \00u\00n\00i\00q\00u\00e\00 \00e\00l\00e\00m\00e\00n\00t\00s\00 \00f\00r\00o\00m\00 \00b\00o\00t\00h\00 \00a\00r\00r\00a\00y\00s")
 (data $481 (i32.const 48876) "<")
 (data $481.1 (i32.const 48888) "\02\00\00\00&\00\00\00\13\' \00u\00n\00i\00o\00n\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $482 (i32.const 48940) "\\")
 (data $482.1 (i32.const 48952) "\02\00\00\00D\00\00\00\n\00A\00l\00l\00 \00a\00r\00r\00a\00y\00 \00u\00t\00i\00l\00i\00t\00y\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $483 (i32.const 49036) "L")
 (data $483.1 (i32.const 49048) "\02\00\00\000\00\00\00\05\' \00A\00r\00r\00a\00y\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $484 (i32.const 49116) "L")
 (data $484.1 (i32.const 49128) "\02\00\00\000\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00B\00u\00i\00l\00d\00e\00r\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $485 (i32.const 49196) "L")
 (data $485.1 (i32.const 49208) "\02\00\00\000\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00b\00u\00i\00l\00d\00e\00r\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $486 (i32.const 49276) "\1c")
 (data $486.1 (i32.const 49288) "\02\00\00\00\n\00\00\00P\00r\00i\00m\00e")
 (data $487 (i32.const 49308) "L")
 (data $487.1 (i32.const 49320) "\02\00\00\00.\00\00\00 \00m\00u\00s\00t\00 \00b\00e\00 \00p\00o\00s\00i\00t\00i\00v\00e\00,\00 \00g\00o\00t\00 ")
 (data $488 (i32.const 49388) "\1c\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\0c\00\00\00\00\00\00\00\b0\c0")
 (data $489 (i32.const 49420) "L")
 (data $489.1 (i32.const 49432) "\02\00\00\006\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00o\00r\00e\00/\00v\00a\00l\00i\00d\00a\00t\00o\00r\00s\00.\00t\00s")
 (data $490 (i32.const 49500) ",")
 (data $490.1 (i32.const 49512) "\02\00\00\00\12\00\00\00A\00m\00p\00l\00i\00t\00u\00d\00e")
 (data $491 (i32.const 49548) "L")
 (data $491.1 (i32.const 49560) "\02\00\00\006\00\00\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00o\00n\00-\00n\00e\00g\00a\00t\00i\00v\00e\00,\00 \00g\00o\00t\00 ")
 (data $492 (i32.const 49628) "\1c\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\0c\00\00\00\00\00\00\00\a0\c1")
 (data $493 (i32.const 49660) "|")
 (data $493.1 (i32.const 49672) "\02\00\00\00^\00\00\00P\00r\00i\00m\00e\00S\00t\00a\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00a\00n\00 \00a\00m\00p\00l\00i\00t\00u\00d\00e\00 \00f\00o\00r\00 \00p\00r\00i\00m\00e\00 \002")
 (data $494 (i32.const 49788) "\\")
 (data $494.1 (i32.const 49800) "\02\00\00\00H\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00c\00o\00r\00e\00-\00b\00u\00i\00l\00d\00e\00r\00s\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $495 (i32.const 49884) "|")
 (data $495.1 (i32.const 49896) "\02\00\00\00^\00\00\00P\00r\00i\00m\00e\00S\00t\00a\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00a\00n\00 \00a\00m\00p\00l\00i\00t\00u\00d\00e\00 \00f\00o\00r\00 \00p\00r\00i\00m\00e\00 \003")
 (data $496 (i32.const 50012) "\9c")
 (data $496.1 (i32.const 50024) "\02\00\00\00\8c\00\00\00T\00h\00e\00 \00s\00u\00m\00 \00o\00f\00 \00s\00q\00u\00a\00r\00e\00d\00 \00a\00m\00p\00l\00i\00t\00u\00d\00e\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00l\00o\00s\00e\00 \00t\00o\00 \001\00 \00a\00f\00t\00e\00r\00 \00n\00o\00r\00m\00a\00l\00i\00z\00a\00t\00i\00o\00n")
 (data $497 (i32.const 50172) "\\")
 (data $497.1 (i32.const 50184) "\02\00\00\00>\00\00\00\13\' \00P\00r\00i\00m\00e\00S\00t\00a\00t\00e\00B\00u\00i\00l\00d\00e\00r\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $498 (i32.const 50268) ",")
 (data $498.1 (i32.const 50280) "\02\00\00\00\12\00\00\00t\00e\00s\00t\00-\00n\00o\00d\00e")
 (data $499 (i32.const 50316) ",")
 (data $499.1 (i32.const 50328) "\02\00\00\00\0e\00\00\00N\00o\00d\00e\00 \00I\00D")
 (data $500 (i32.const 50364) "<")
 (data $500.1 (i32.const 50376) "\02\00\00\00 \00\00\00 \00c\00a\00n\00n\00o\00t\00 \00b\00e\00 \00e\00m\00p\00t\00y")
 (data $501 (i32.const 50428) ",")
 (data $501.1 (i32.const 50440) "\02\00\00\00\14\00\00\00o\00t\00h\00e\00r\00-\00n\00o\00d\00e")
 (data $502 (i32.const 50476) "<")
 (data $502.1 (i32.const 50488) "\02\00\00\00*\00\00\00E\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00 \00s\00t\00r\00e\00n\00g\00t\00h")
 (data $503 (i32.const 50540) "<")
 (data $503.1 (i32.const 50552) "\02\00\00\00&\00\00\00N\00o\00d\00e\00 \00I\00D\00 \00i\00s\00 \00r\00e\00q\00u\00i\00r\00e\00d")
 (data $504 (i32.const 50604) "L")
 (data $504.1 (i32.const 50616) "\02\00\00\002\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00o\00r\00e\00/\00b\00u\00i\00l\00d\00e\00r\00s\00.\00t\00s")
 (data $505 (i32.const 50684) "L")
 (data $505.1 (i32.const 50696) "\02\00\00\00<\00\00\00A\00t\00 \00l\00e\00a\00s\00t\00 \003\00 \00p\00r\00i\00m\00e\00s\00 \00a\00r\00e\00 \00r\00e\00q\00u\00i\00r\00e\00d")
 (data $506 (i32.const 50764) "<")
 (data $506.1 (i32.const 50776) "\02\00\00\00\"\00\00\00M\00a\00x\00 \00e\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00s")
 (data $507 (i32.const 50828) "\\")
 (data $507.1 (i32.const 50840) "\02\00\00\00L\00\00\00Q\00u\00a\00n\00t\00u\00m\00N\00o\00d\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00I\00D")
 (data $508 (i32.const 50924) "l")
 (data $508.1 (i32.const 50936) "\02\00\00\00T\00\00\00Q\00u\00a\00n\00t\00u\00m\00N\00o\00d\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00p\00r\00i\00m\00e\00s")
 (data $509 (i32.const 51036) "l")
 (data $509.1 (i32.const 51048) "\02\00\00\00Z\00\00\00Q\00u\00a\00n\00t\00u\00m\00N\00o\00d\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e")
 (data $510 (i32.const 51148) "|")
 (data $510.1 (i32.const 51160) "\02\00\00\00`\00\00\00Q\00u\00a\00n\00t\00u\00m\00N\00o\00d\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00e\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t")
 (data $511 (i32.const 51276) "\\")
 (data $511.1 (i32.const 51288) "\02\00\00\00@\00\00\00\13\' \00N\00e\00t\00w\00o\00r\00k\00N\00o\00d\00e\00B\00u\00i\00l\00d\00e\00r\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $512 (i32.const 51372) ",")
 (data $512.1 (i32.const 51384) "\02\00\00\00\18\00\00\00t\00e\00s\00t\00-\00m\00e\00s\00s\00a\00g\00e")
 (data $513 (i32.const 51420) ",")
 (data $513.1 (i32.const 51432) "\02\00\00\00\18\00\00\00M\00e\00s\00s\00a\00g\00e\00 \00t\00y\00p\00e")
 (data $514 (i32.const 51468) "\1c")
 (data $514.1 (i32.const 51480) "\02\00\00\00\0c\00\00\00n\00o\00d\00e\00-\00a")
 (data $515 (i32.const 51500) ",")
 (data $515.1 (i32.const 51512) "\02\00\00\00\12\00\00\00S\00o\00u\00r\00c\00e\00 \00I\00D")
 (data $516 (i32.const 51548) "\1c")
 (data $516.1 (i32.const 51560) "\02\00\00\00\0c\00\00\00n\00o\00d\00e\00-\00b")
 (data $517 (i32.const 51580) ",")
 (data $517.1 (i32.const 51592) "\02\00\00\00\12\00\00\00T\00a\00r\00g\00e\00t\00 \00I\00D")
 (data $518 (i32.const 51628) "\1c")
 (data $518.1 (i32.const 51640) "\02\00\00\00\08\00\00\00d\00a\00t\00a")
 (data $519 (i32.const 51660) "\1c")
 (data $519.1 (i32.const 51672) "\02\00\00\00\n\00\00\00h\00e\00l\00l\00o")
 (data $520 (i32.const 51692) "\1c")
 (data $520.1 (i32.const 51704) "\c2\00\00\00\08\00\00\00\r")
 (data $521 (i32.const 51724) "L")
 (data $521.1 (i32.const 51736) "\02\00\00\000\00\00\00M\00e\00s\00s\00a\00g\00e\00 \00t\00y\00p\00e\00 \00i\00s\00 \00r\00e\00q\00u\00i\00r\00e\00d")
 (data $522 (i32.const 51804) "<")
 (data $522.1 (i32.const 51816) "\02\00\00\00*\00\00\00S\00o\00u\00r\00c\00e\00 \00I\00D\00 \00i\00s\00 \00r\00e\00q\00u\00i\00r\00e\00d")
 (data $523 (i32.const 51868) "l")
 (data $523.1 (i32.const 51880) "\02\00\00\00X\00\00\00P\00r\00o\00t\00o\00c\00o\00l\00M\00e\00s\00s\00a\00g\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00t\00y\00p\00e")
 (data $524 (i32.const 51980) "|")
 (data $524.1 (i32.const 51992) "\02\00\00\00b\00\00\00P\00r\00o\00t\00o\00c\00o\00l\00M\00e\00s\00s\00a\00g\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00s\00o\00u\00r\00c\00e\00 \00I\00D")
 (data $525 (i32.const 52108) "|")
 (data $525.1 (i32.const 52120) "\02\00\00\00b\00\00\00P\00r\00o\00t\00o\00c\00o\00l\00M\00e\00s\00s\00a\00g\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00t\00a\00r\00g\00e\00t\00 \00I\00D")
 (data $526 (i32.const 52236) "|")
 (data $526.1 (i32.const 52248) "\02\00\00\00^\00\00\00P\00r\00o\00t\00o\00c\00o\00l\00M\00e\00s\00s\00a\00g\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00p\00a\00y\00l\00o\00a\00d")
 (data $527 (i32.const 52364) "\\")
 (data $527.1 (i32.const 52376) "\02\00\00\00H\00\00\00\13\' \00P\00r\00o\00t\00o\00c\00o\00l\00M\00e\00s\00s\00a\00g\00e\00B\00u\00i\00l\00d\00e\00r\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $528 (i32.const 52460) "\1c")
 (data $528.1 (i32.const 52472) "\02\00\00\00\0c\00\00\00n\00o\00d\00e\00-\001")
 (data $529 (i32.const 52492) "\1c")
 (data $529.1 (i32.const 52504) "\01\00\00\00\0c\00\00\00\02\00\00\00\03\00\00\00\05")
 (data $530 (i32.const 52524) "\1c")
 (data $530.1 (i32.const 52536) "\02\00\00\00\0c\00\00\00n\00o\00d\00e\00-\002")
 (data $531 (i32.const 52556) "\1c")
 (data $531.1 (i32.const 52568) "\01\00\00\00\0c\00\00\00\07\00\00\00\0b\00\00\00\r")
 (data $532 (i32.const 52588) ",")
 (data $532.1 (i32.const 52600) "\02\00\00\00\12\00\00\00M\00a\00x\00 \00n\00o\00d\00e\00s")
 (data $533 (i32.const 52636) ",")
 (data $533.1 (i32.const 52648) "\02\00\00\00\12\00\00\00M\00a\00x\00 \00l\00i\00n\00k\00s")
 (data $534 (i32.const 52684) "\8c")
 (data $534.1 (i32.const 52696) "\02\00\00\00|\00\00\00N\00e\00t\00w\00o\00r\00k\00T\00o\00p\00o\00l\00o\00g\00y\00B\00u\00i\00l\00d\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00n\00o\00d\00e\00s")
 (data $535 (i32.const 52828) "\8c")
 (data $535.1 (i32.const 52840) "\02\00\00\00p\00\00\00N\00e\00t\00w\00o\00r\00k\00T\00o\00p\00o\00l\00o\00g\00y\00B\00u\00i\00l\00d\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00m\00a\00x\00 \00n\00o\00d\00e\00s")
 (data $536 (i32.const 52972) "\8c")
 (data $536.1 (i32.const 52984) "\02\00\00\00p\00\00\00N\00e\00t\00w\00o\00r\00k\00T\00o\00p\00o\00l\00o\00g\00y\00B\00u\00i\00l\00d\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00m\00a\00x\00 \00l\00i\00n\00k\00s")
 (data $537 (i32.const 53116) "\\")
 (data $537.1 (i32.const 53128) "\02\00\00\00H\00\00\00\13\' \00N\00e\00t\00w\00o\00r\00k\00T\00o\00p\00o\00l\00o\00g\00y\00B\00u\00i\00l\00d\00e\00r\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $538 (i32.const 53212) ",")
 (data $538.1 (i32.const 53224) "\02\00\00\00\16\00\00\00Q\00u\00b\00i\00t\00 \00c\00o\00u\00n\00t")
 (data $539 (i32.const 53260) "\1c")
 (data $539.1 (i32.const 53272) "\02\00\00\00\02\00\00\00H")
 (data $540 (i32.const 53292) "\1c")
 (data $540.1 (i32.const 53304) "\02\00\00\00\08\00\00\00C\00N\00O\00T")
 (data $541 (i32.const 53324) "\8c")
 (data $541.1 (i32.const 53336) "\02\00\00\00|\00\00\00Q\00u\00a\00n\00t\00u\00m\00C\00i\00r\00c\00u\00i\00t\00B\00u\00i\00l\00d\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00q\00u\00b\00i\00t\00s")
 (data $542 (i32.const 53468) "\8c")
 (data $542.1 (i32.const 53480) "\02\00\00\00z\00\00\00Q\00u\00a\00n\00t\00u\00m\00C\00i\00r\00c\00u\00i\00t\00B\00u\00i\00l\00d\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00g\00a\00t\00e\00s")
 (data $543 (i32.const 53612) "\9c")
 (data $543.1 (i32.const 53624) "\02\00\00\00\88\00\00\00Q\00u\00a\00n\00t\00u\00m\00C\00i\00r\00c\00u\00i\00t\00B\00u\00i\00l\00d\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00m\00e\00a\00s\00u\00r\00e\00m\00e\00n\00t\00s")
 (data $544 (i32.const 53772) "\\")
 (data $544.1 (i32.const 53784) "\02\00\00\00F\00\00\00\13\' \00Q\00u\00a\00n\00t\00u\00m\00C\00i\00r\00c\00u\00i\00t\00B\00u\00i\00l\00d\00e\00r\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $545 (i32.const 53868) "L")
 (data $545.1 (i32.const 53880) "\02\00\00\008\00\00\00\n\00A\00l\00l\00 \00b\00u\00i\00l\00d\00e\00r\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $546 (i32.const 53948) "L")
 (data $546.1 (i32.const 53960) "\02\00\00\004\00\00\00\05\' \00B\00u\00i\00l\00d\00e\00r\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $547 (i32.const 54028) "L")
 (data $547.1 (i32.const 54040) "\02\00\00\00<\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00C\00o\00n\00f\00i\00g\00 \00L\00o\00a\00d\00e\00r\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $548 (i32.const 54108) "L")
 (data $548.1 (i32.const 54120) "\02\00\00\00<\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00c\00o\00n\00f\00i\00g\00 \00l\00o\00a\00d\00e\00r\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $549 (i32.const 54188) "l\03")
 (data $549.1 (i32.const 54200) "\02\00\00\00X\03\00\00{\00\n\00 \00 \00 \00 \00\"\00g\00l\00o\00b\00a\00l\00\"\00:\00 \00{\00\n\00 \00 \00 \00 \00 \00 \00\"\00s\00e\00t\00t\00i\00n\00g\001\00\"\00:\00 \00\"\00v\00a\00l\00u\00e\001\00\"\00\n\00 \00 \00 \00 \00}\00,\00\n\00 \00 \00 \00 \00\"\00m\00o\00d\00u\00l\00e\00s\00\"\00:\00 \00[\00\n\00 \00 \00 \00 \00 \00 \00{\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00\"\00t\00y\00p\00e\00\"\00:\00 \00\"\00t\00e\00s\00t\00-\00m\00o\00d\00u\00l\00e\00\"\00,\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00\"\00i\00d\00\"\00:\00 \00\"\00t\00e\00s\00t\00-\00m\00o\00d\00u\00l\00e\00-\001\00\"\00,\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00\"\00e\00n\00a\00b\00l\00e\00d\00\"\00:\00 \00t\00r\00u\00e\00,\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00\"\00p\00r\00i\00o\00r\00i\00t\00y\00\"\00:\00 \001\000\00,\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00\"\00c\00o\00n\00f\00i\00g\00\"\00:\00 \00{\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00\"\00p\00a\00r\00a\00m\001\00\"\00:\00 \00\"\00v\00a\00l\00u\00e\001\00\"\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00}\00,\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00\"\00d\00e\00p\00e\00n\00d\00e\00n\00c\00i\00e\00s\00\"\00:\00 \00[\00]\00\n\00 \00 \00 \00 \00 \00 \00}\00\n\00 \00 \00 \00 \00]\00,\00\n\00 \00 \00 \00 \00\"\00p\00r\00o\00f\00i\00l\00e\00s\00\"\00:\00 \00{\00\n\00 \00 \00 \00 \00 \00 \00\"\00t\00e\00s\00t\00-\00p\00r\00o\00f\00i\00l\00e\00\"\00:\00 \00{\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00\"\00n\00a\00m\00e\00\"\00:\00 \00\"\00t\00e\00s\00t\00-\00p\00r\00o\00f\00i\00l\00e\00\"\00,\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00\"\00m\00o\00d\00u\00l\00e\00s\00\"\00:\00 \00[\00]\00,\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00\"\00o\00v\00e\00r\00r\00i\00d\00e\00s\00\"\00:\00 \00{\00}\00\n\00 \00 \00 \00 \00 \00 \00}\00\n\00 \00 \00 \00 \00}\00\n\00 \00 \00}")
 (data $550 (i32.const 55068) "\1c")
 (data $550.1 (i32.const 55080) "\01")
 (data $551 (i32.const 55100) ",")
 (data $551.1 (i32.const 55112) "\02\00\00\00\10\00\00\00\"\00g\00l\00o\00b\00a\00l\00\"")
 (data $552 (i32.const 55148) "\1c")
 (data $552.1 (i32.const 55160) "\02\00\00\00\02\00\00\00{")
 (data $553 (i32.const 55180) "\1c")
 (data $553.1 (i32.const 55192) "\02\00\00\00\02\00\00\00}")
 (data $554 (i32.const 55212) "\1c")
 (data $554.1 (i32.const 55224) "\02\00\00\00\02\00\00\00,")
 (data $555 (i32.const 55244) "\1c")
 (data $555.1 (i32.const 55256) "\02\00\00\00\02\00\00\00:")
 (data $556 (i32.const 55276) "\1c")
 (data $556.1 (i32.const 55288) "\02\00\00\00\02\00\00\00\"")
 (data $557 (i32.const 55308) ",")
 (data $557.1 (i32.const 55320) "\02\00\00\00\12\00\00\00\"\00m\00o\00d\00u\00l\00e\00s\00\"")
 (data $558 (i32.const 55356) "\1c")
 (data $558.1 (i32.const 55368) "\02\00\00\00\02\00\00\00[")
 (data $559 (i32.const 55388) "\1c")
 (data $559.1 (i32.const 55400) "\02\00\00\00\02\00\00\00]")
 (data $560 (i32.const 55420) "\1c")
 (data $560.1 (i32.const 55432) "\02\00\00\00\0c\00\00\00p\00a\00r\00a\00m\001")
 (data $561 (i32.const 55452) "\1c")
 (data $561.1 (i32.const 55464) "\02\00\00\00\0c\00\00\00v\00a\00l\00u\00e\001")
 (data $562 (i32.const 55484) "\1c")
 (data $562.1 (i32.const 55496) "\01")
 (data $563 (i32.const 55516) ",")
 (data $563.1 (i32.const 55528) "\02\00\00\00\16\00\00\00t\00e\00s\00t\00-\00m\00o\00d\00u\00l\00e")
 (data $564 (i32.const 55564) ",")
 (data $564.1 (i32.const 55576) "\02\00\00\00\1a\00\00\00t\00e\00s\00t\00-\00m\00o\00d\00u\00l\00e\00-\001")
 (data $565 (i32.const 55612) ",")
 (data $565.1 (i32.const 55624) "\02\00\00\00\14\00\00\00\"\00p\00r\00o\00f\00i\00l\00e\00s\00\"")
 (data $566 (i32.const 55660) ",")
 (data $566.1 (i32.const 55672) "\02\00\00\00\1c\00\00\00\"\00t\00e\00s\00t\00-\00p\00r\00o\00f\00i\00l\00e\00\"")
 (data $567 (i32.const 55708) "\1c")
 (data $567.1 (i32.const 55720) "\01")
 (data $568 (i32.const 55740) ",")
 (data $568.1 (i32.const 55752) "\02\00\00\00\18\00\00\00t\00e\00s\00t\00-\00p\00r\00o\00f\00i\00l\00e")
 (data $569 (i32.const 55788) ",")
 (data $569.1 (i32.const 55800) "\02\00\00\00\10\00\00\00s\00e\00t\00t\00i\00n\00g\001")
 (data $570 (i32.const 55836) "|")
 (data $570.1 (i32.const 55848) "\02\00\00\00b\00\00\00T\00h\00e\00 \00g\00l\00o\00b\00a\00l\00 \00c\00o\00n\00f\00i\00g\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00s\00e\00t\00t\00i\00n\00g")
 (data $571 (i32.const 55964) "l")
 (data $571.1 (i32.const 55976) "\02\00\00\00R\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00c\00o\00r\00e\00-\00c\00o\00n\00f\00i\00g\00-\00l\00o\00a\00d\00e\00r\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $572 (i32.const 56076) "|")
 (data $572.1 (i32.const 56088) "\02\00\00\00h\00\00\00T\00h\00e\00 \00c\00o\00n\00f\00i\00g\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00m\00o\00d\00u\00l\00e\00s")
 (data $573 (i32.const 56204) "l")
 (data $573.1 (i32.const 56216) "\02\00\00\00T\00\00\00T\00h\00e\00 \00c\00o\00n\00f\00i\00g\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00p\00r\00o\00f\00i\00l\00e")
 (data $574 (i32.const 56316) "L")
 (data $574.1 (i32.const 56328) "\02\00\00\00<\00\00\00\13\' \00J\00S\00O\00N\00C\00o\00n\00f\00i\00g\00P\00a\00r\00s\00e\00r\00 \00t\00e\00s\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $575 (i32.const 56396) "\\")
 (data $575.1 (i32.const 56408) "\02\00\00\00D\00\00\00\n\00A\00l\00l\00 \00c\00o\00n\00f\00i\00g\00 \00l\00o\00a\00d\00e\00r\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $576 (i32.const 56492) "\\")
 (data $576.1 (i32.const 56504) "\02\00\00\00@\00\00\00\05\' \00C\00o\00n\00f\00i\00g\00 \00L\00o\00a\00d\00e\00r\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $577 (i32.const 56588) "L")
 (data $577.1 (i32.const 56600) "\02\00\00\004\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00C\00o\00n\00s\00t\00a\00n\00t\00s\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $578 (i32.const 56668) "L")
 (data $578.1 (i32.const 56680) "\02\00\00\004\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00c\00o\00n\00s\00t\00a\00n\00t\00s\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $579 (i32.const 56748) "\1c")
 (data $579.1 (i32.const 56760) "\02\00\00\00\08\00\00\00t\00e\00s\00t")
 (data $580 (i32.const 56780) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\14\00\00\00\00\00\00\00\90o\00\00\00\00\00\00\90o")
 (data $581 (i32.const 56828) "\1c")
 (data $581.1 (i32.const 56840) "\02\00\00\00\n\00\00\00t\00e\00s\00t\00-")
 (data $582 (i32.const 56860) "L")
 (data $582.1 (i32.const 56872) "\02\00\00\006\00\00\00I\00D\00 \00s\00h\00o\00u\00l\00d\00 \00s\00t\00a\00r\00t\00 \00w\00i\00t\00h\00 \00p\00r\00e\00f\00i\00x")
 (data $583 (i32.const 56940) "\\")
 (data $583.1 (i32.const 56952) "\02\00\00\00J\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00c\00o\00r\00e\00-\00c\00o\00n\00s\00t\00a\00n\00t\00s\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $584 (i32.const 57036) "<")
 (data $584.1 (i32.const 57048) "\02\00\00\00(\00\00\00I\00D\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00u\00n\00i\00q\00u\00e")
 (data $585 (i32.const 57100) "L")
 (data $585.1 (i32.const 57112) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00G\00e\00n\00e\00r\00a\00t\00e\00U\00n\00i\00q\00u\00e\00I\00d\00 \00p\00a\00s\00s\00e\00d")
 (data $586 (i32.const 57180) "\\")
 (data $586.1 (i32.const 57192) "\02\00\00\00@\00\00\001\008\000\00 \00d\00e\00g\00r\00e\00e\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00P\00I\00 \00r\00a\00d\00i\00a\00n\00s")
 (data $587 (i32.const 57276) "\\")
 (data $587.1 (i32.const 57288) "\02\00\00\00B\00\00\009\000\00 \00d\00e\00g\00r\00e\00e\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00P\00I\00/\002\00 \00r\00a\00d\00i\00a\00n\00s")
 (data $588 (i32.const 57372) "L")
 (data $588.1 (i32.const 57384) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00D\00e\00g\00r\00e\00e\00s\00T\00o\00R\00a\00d\00i\00a\00n\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $589 (i32.const 57452) "\\")
 (data $589.1 (i32.const 57464) "\02\00\00\00@\00\00\00P\00I\00 \00r\00a\00d\00i\00a\00n\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\008\000\00 \00d\00e\00g\00r\00e\00e\00s")
 (data $590 (i32.const 57548) "\\")
 (data $590.1 (i32.const 57560) "\02\00\00\00B\00\00\00P\00I\00/\002\00 \00r\00a\00d\00i\00a\00n\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \009\000\00 \00d\00e\00g\00r\00e\00e\00s")
 (data $591 (i32.const 57644) "L")
 (data $591.1 (i32.const 57656) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00R\00a\00d\00i\00a\00n\00s\00T\00o\00D\00e\00g\00r\00e\00e\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $592 (i32.const 57724) "\\")
 (data $592.1 (i32.const 57736) "\02\00\00\00L\00\00\00V\00a\00l\00u\00e\00 \00w\00i\00t\00h\00i\00n\00 \00r\00a\00n\00g\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00u\00n\00c\00h\00a\00n\00g\00e\00d")
 (data $593 (i32.const 57820) "l")
 (data $593.1 (i32.const 57832) "\02\00\00\00P\00\00\00V\00a\00l\00u\00e\00 \00b\00e\00l\00o\00w\00 \00m\00i\00n\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00l\00a\00m\00p\00e\00d\00 \00t\00o\00 \00m\00i\00n")
 (data $594 (i32.const 57932) "l")
 (data $594.1 (i32.const 57944) "\02\00\00\00P\00\00\00V\00a\00l\00u\00e\00 \00a\00b\00o\00v\00e\00 \00m\00a\00x\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00l\00a\00m\00p\00e\00d\00 \00t\00o\00 \00m\00a\00x")
 (data $595 (i32.const 58044) "<")
 (data $595.1 (i32.const 58056) "\02\00\00\00$\00\00\00\13\' \00t\00e\00s\00t\00C\00l\00a\00m\00p\00 \00p\00a\00s\00s\00e\00d")
 (data $596 (i32.const 58108) "L")
 (data $596.1 (i32.const 58120) "\02\00\00\006\00\00\00L\00e\00r\00p\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00m\00i\00d\00p\00o\00i\00n\00t")
 (data $597 (i32.const 58188) "\\")
 (data $597.1 (i32.const 58200) "\02\00\00\00>\00\00\00L\00e\00r\00p\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00s\00t\00a\00r\00t\00 \00a\00t\00 \00t\00=\000")
 (data $598 (i32.const 58284) "L")
 (data $598.1 (i32.const 58296) "\02\00\00\00:\00\00\00L\00e\00r\00p\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00e\00n\00d\00 \00a\00t\00 \00t\00=\001")
 (data $599 (i32.const 58364) "<")
 (data $599.1 (i32.const 58376) "\02\00\00\00\"\00\00\00\13\' \00t\00e\00s\00t\00L\00e\00r\00p\00 \00p\00a\00s\00s\00e\00d")
 (data $600 (i32.const 58428) "|")
 (data $600.1 (i32.const 58440) "\02\00\00\00d\00\00\00S\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \00e\00q\00u\00a\00l\00 \00w\00i\00t\00h\00 \00d\00e\00f\00a\00u\00l\00t\00 \00e\00p\00s\00i\00l\00o\00n")
 (data $601 (i32.const 58556) "\\")
 (data $601.1 (i32.const 58568) "\02\00\00\00B\00\00\00S\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \00e\00q\00u\00a\00l")
 (data $602 (i32.const 58652) "|")
 (data $602.1 (i32.const 58664) "\02\00\00\00b\00\00\00S\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \00e\00q\00u\00a\00l\00 \00w\00i\00t\00h\00 \00c\00u\00s\00t\00o\00m\00 \00e\00p\00s\00i\00l\00o\00n")
 (data $603 (i32.const 58780) "L")
 (data $603.1 (i32.const 58792) "\02\00\00\000\00\00\00\13\' \00t\00e\00s\00t\00A\00p\00p\00r\00o\00x\00E\00q\00u\00a\00l\00 \00p\00a\00s\00s\00e\00d")
 (data $604 (i32.const 58860) "L")
 (data $604.1 (i32.const 58872) "\02\00\00\00<\00\00\00\n\00A\00l\00l\00 \00c\00o\00n\00s\00t\00a\00n\00t\00s\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $605 (i32.const 58940) "L")
 (data $605.1 (i32.const 58952) "\02\00\00\008\00\00\00\05\' \00C\00o\00n\00s\00t\00a\00n\00t\00s\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $606 (i32.const 59020) "\\")
 (data $606.1 (i32.const 59032) "\02\00\00\00D\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00F\00u\00n\00c\00t\00i\00o\00n\00a\00l\00 \00B\00l\00o\00c\00k\00s\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $607 (i32.const 59116) "\\")
 (data $607.1 (i32.const 59128) "\02\00\00\00D\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00f\00u\00n\00c\00t\00i\00o\00n\00a\00l\00 \00b\00l\00o\00c\00k\00s\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $608 (i32.const 59212) "\1c")
 (data $608.1 (i32.const 59224) "\02\00\00\00\n\00\00\00n\00o\00d\00e\00A")
 (data $609 (i32.const 59244) "<")
 (data $609.1 (i32.const 59256) "\01\00\00\00(\00\00\00\9a\99\99\99\99\99\b9?\9a\99\99\99\99\99\c9?333333\d3?\9a\99\99\99\99\99\c9?\9a\99\99\99\99\99\b9?")
 (data $610 (i32.const 59308) "<")
 (data $610.1 (i32.const 59320) "\02\00\00\00\"\00\00\00[\00F\00N\00]\00 \00S\00t\00a\00b\00i\00l\00i\00z\00i\00n\00g\00 ")
 (data $611 (i32.const 59372) "L")
 (data $611.1 (i32.const 59384) "\02\00\00\002\00\00\00:\00 \00C\00u\00r\00r\00e\00n\00t\00 \00E\00n\00t\00r\00o\00p\00y\00 \00R\00a\00t\00e\00 \00=\00 ")
 (data $612 (i32.const 59452) ",")
 (data $612.1 (i32.const 59464) "\02\00\00\00\1c\00\00\00,\00 \00C\00o\00h\00e\00r\00e\00n\00c\00e\00 \00=\00 ")
 (data $613 (i32.const 59500) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\18\00\00\00\c0\e7\00\00\00\00\00\00\00\e8\00\00\00\00\00\00P\e8")
 (data $614 (i32.const 59548) "\1c")
 (data $614.1 (i32.const 59560) "\02\00\00\00\n\00\00\00[\00F\00N\00]\00 ")
 (data $615 (i32.const 59580) "L")
 (data $615.1 (i32.const 59592) "\02\00\00\008\00\00\00 \00s\00t\00a\00b\00i\00l\00i\00z\00e\00d\00.\00 \00N\00e\00w\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00:\00 ")
 (data $616 (i32.const 59660) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\10\00\00\00\b0\e8\00\00\00\00\00\00\d0\e8")
 (data $617 (i32.const 59708) "|")
 (data $617.1 (i32.const 59720) "\02\00\00\00^\00\00\00 \00s\00t\00a\00b\00i\00l\00i\00z\00a\00t\00i\00o\00n\00 \00n\00o\00t\00 \00n\00e\00e\00d\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00o\00n\00d\00i\00t\00i\00o\00n\00s\00.")
 (data $618 (i32.const 59836) "\1c\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\0c\00\00\00\b0\e8\00\00\00\00\00\00P\e9")
 (data $619 (i32.const 59868) "l")
 (data $619.1 (i32.const 59880) "\02\00\00\00\\\00\00\00s\00t\00a\00b\00i\00l\00i\00z\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00r\00u\00e\00 \00f\00o\00r\00 \00a\00 \00s\00t\00a\00b\00l\00e\00 \00n\00o\00d\00e")
 (data $620 (i32.const 59980) "l")
 (data $620.1 (i32.const 59992) "\02\00\00\00N\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00f\00u\00n\00c\00t\00i\00o\00n\00a\00l\00B\00l\00o\00c\00k\00s\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $621 (i32.const 60092) "l")
 (data $621.1 (i32.const 60104) "\02\00\00\00X\00\00\00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00b\00o\00o\00s\00t\00e\00d\00 \00o\00n\00 \00s\00t\00a\00b\00i\00l\00i\00z\00a\00t\00i\00o\00n")
 (data $622 (i32.const 60204) "|")
 (data $622.1 (i32.const 60216) "\02\00\00\00f\00\00\00\13\' \00t\00e\00s\00t\00S\00t\00a\00b\00i\00l\00i\00z\00e\00S\00h\00o\00u\00l\00d\00R\00e\00t\00u\00r\00n\00T\00r\00u\00e\00F\00o\00r\00S\00t\00a\00b\00l\00e\00N\00o\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $623 (i32.const 60332) "<")
 (data $623.1 (i32.const 60344) "\01\00\00\00(\00\00\00\9a\99\99\99\99\99\b9?\cd\cc\cc\cc\cc\cc\ec?\9a\99\99\99\99\99\c9?\9a\99\99\99\99\99\e9?333333\d3?")
 (data $624 (i32.const 60396) "|")
 (data $624.1 (i32.const 60408) "\02\00\00\00d\00\00\00s\00t\00a\00b\00i\00l\00i\00z\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00f\00a\00l\00s\00e\00 \00f\00o\00r\00 \00a\00n\00 \00u\00n\00s\00t\00a\00b\00l\00e\00 \00n\00o\00d\00e")
 (data $625 (i32.const 60524) "|")
 (data $625.1 (i32.const 60536) "\02\00\00\00l\00\00\00\13\' \00t\00e\00s\00t\00S\00t\00a\00b\00i\00l\00i\00z\00e\00S\00h\00o\00u\00l\00d\00R\00e\00t\00u\00r\00n\00F\00a\00l\00s\00e\00F\00o\00r\00U\00n\00s\00t\00a\00b\00l\00e\00N\00o\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $626 (i32.const 60652) "\1c")
 (data $626.1 (i32.const 60664) "\01")
 (data $627 (i32.const 60684) "\1c")
 (data $627.1 (i32.const 60696) "\02\00\00\00\n\00\00\00n\00o\00d\00e\00B")
 (data $628 (i32.const 60716) "\1c")
 (data $628.1 (i32.const 60728) "\01")
 (data $629 (i32.const 60748) "\8c")
 (data $629.1 (i32.const 60760) "\02\00\00\00t\00\00\00[\00F\00N\00]\00 \00T\00e\00l\00e\00p\00o\00r\00t\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00:\00 \00N\00o\00 \00c\00u\00r\00r\00e\00n\00t\00 \00n\00o\00d\00e\00 \00(\00t\00h\00i\00s\00N\00o\00d\00e\00)\00 \00s\00e\00t\00.")
 (data $630 (i32.const 60892) "L")
 (data $630.1 (i32.const 60904) "\02\00\00\008\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00f\00u\00n\00c\00t\00i\00o\00n\00a\00l\00B\00l\00o\00c\00k\00s\00.\00t\00s")
 (data $631 (i32.const 60972) "|")
 (data $631.1 (i32.const 60984) "\02\00\00\00^\00\00\00[\00F\00N\00]\00 \00A\00t\00t\00e\00m\00p\00t\00i\00n\00g\00 \00t\00o\00 \00t\00e\00l\00e\00p\00o\00r\00t\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00(\00e\00n\00t\00r\00o\00p\00y\00:\00 ")
 (data $632 (i32.const 61100) ",")
 (data $632.1 (i32.const 61112) "\02\00\00\00\0e\00\00\00)\00 \00f\00r\00o\00m\00 ")
 (data $633 (i32.const 61148) "\1c")
 (data $633.1 (i32.const 61160) "\02\00\00\00\08\00\00\00 \00t\00o\00 ")
 (data $634 (i32.const 61180) ",")
 (data $634.1 (i32.const 61192) "\02\00\00\00\1a\00\00\00.\00 \00E\00n\00t\00a\00n\00g\00l\00e\00d\00?\00 ")
 (data $635 (i32.const 61228) "<")
 (data $635.1 (i32.const 61240) "\02\00\00\00(\00\00\00,\00 \00T\00a\00r\00g\00e\00t\00 \00C\00o\00h\00e\00r\00e\00n\00c\00e\00:\00 ")
 (data $636 (i32.const 61292) "<\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00(\00\00\00@\ee\00\00\00\00\00\00\c0\ee\00\00\00\00\00\00\f0\ee\00\00\00\00\00\00\10\ef\00\00\00\00\00\00@\ef")
 (data $637 (i32.const 61356) "<")
 (data $637.1 (i32.const 61368) "\02\00\00\00\1e\00\00\00[\00F\00N\00]\00 \00F\00r\00a\00g\00m\00e\00n\00t\00 \00\"")
 (data $638 (i32.const 61420) "L")
 (data $638.1 (i32.const 61432) "\02\00\00\00:\00\00\00\"\00 \00s\00u\00c\00c\00e\00s\00s\00f\00u\00l\00l\00y\00 \00t\00e\00l\00e\00p\00o\00r\00t\00e\00d\00 \00t\00o\00 ")
 (data $639 (i32.const 61500) "\1c")
 (data $639.1 (i32.const 61512) "\02\00\00\00\02\00\00\00!")
 (data $640 (i32.const 61532) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\14\00\00\00\c0\ef\00\00\00\00\00\00\00\f0\00\00\00\00\00\00P\f0")
 (data $641 (i32.const 61580) "\1c")
 (data $641.1 (i32.const 61592) "\02\00\00\00\04\00\00\00 \00 ")
 (data $642 (i32.const 61612) ",")
 (data $642.1 (i32.const 61624) "\02\00\00\00\0e\00\00\00e\00n\00t\00r\00o\00p\00y")
 (data $643 (i32.const 61660) "\1c")
 (data $643.1 (i32.const 61672) "\02\00\00\00\08\00\00\00n\00u\00l\00l")
 (data $644 (i32.const 61692) "L")
 (data $644.1 (i32.const 61704) "\02\00\00\002\00\00\00C\00a\00n\00n\00o\00t\00 \00a\00d\00d\00 \00f\00i\00e\00l\00d\00 \00t\00o\00 \00a\00r\00r\00a\00y")
 (data $645 (i32.const 61772) "L")
 (data $645.1 (i32.const 61784) "\02\00\00\00<\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00o\00r\00e\00/\00s\00e\00r\00i\00a\00l\00i\00z\00a\00t\00i\00o\00n\00.\00t\00s")
 (data $646 (i32.const 61852) "\1c")
 (data $646.1 (i32.const 61864) "\02\00\00\00\02\00\00\00\n")
 (data $647 (i32.const 61884) ",")
 (data $647.1 (i32.const 61896) "\02\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s")
 (data $648 (i32.const 61932) "\1c")
 (data $648.1 (i32.const 61944) "\02\00\00\00\04\00\00\00\\\00\"")
 (data $649 (i32.const 61964) "\1c")
 (data $649.1 (i32.const 61976) "\02\00\00\00\04\00\00\00\\\00\\")
 (data $650 (i32.const 61996) "\1c")
 (data $650.1 (i32.const 62008) "\02\00\00\00\04\00\00\00\\\00b")
 (data $651 (i32.const 62028) "\1c")
 (data $651.1 (i32.const 62040) "\02\00\00\00\04\00\00\00\\\00f")
 (data $652 (i32.const 62060) "\1c")
 (data $652.1 (i32.const 62072) "\02\00\00\00\04\00\00\00\\\00n")
 (data $653 (i32.const 62092) "\1c")
 (data $653.1 (i32.const 62104) "\02\00\00\00\04\00\00\00\\\00r")
 (data $654 (i32.const 62124) "\1c")
 (data $654.1 (i32.const 62136) "\02\00\00\00\04\00\00\00\\\00t")
 (data $655 (i32.const 62156) "\1c")
 (data $655.1 (i32.const 62168) "\02\00\00\00\04\00\00\00\\\00u")
 (data $656 (i32.const 62188) "\1c")
 (data $656.1 (i32.const 62200) "\02\00\00\00\04\00\00\00\"\00:")
 (data $657 (i32.const 62220) "\1c")
 (data $657.1 (i32.const 62232) "\02\00\00\00\02\00\00\00 ")
 (data $658 (i32.const 62252) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\14\00\00\00P\d8\00\00\00\00\00\00\c0\d7\00\00\00\00\00\00p\d8")
 (data $659 (i32.const 62300) "<")
 (data $659.1 (i32.const 62312) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $660 (i32.const 62364) "\1c")
 (data $660.1 (i32.const 62376) "\02\00\00\00\0c\00\00\00c\00e\00n\00t\00e\00r")
 (data $661 (i32.const 62396) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\10\00\00\00\00\d8\00\00\00\00\00\00\00\f3")
 (data $662 (i32.const 62444) "\1c")
 (data $662.1 (i32.const 62456) "\02\00\00\00\0c\00\00\00c\00o\00e\00f\00f\00s")
 (data $663 (i32.const 62476) "l")
 (data $663.1 (i32.const 62488) "\02\00\00\00\\\00\00\00[\00F\00N\00]\00 \00T\00e\00l\00e\00p\00o\00r\00t\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00.\00 \00C\00o\00n\00d\00i\00t\00i\00o\00n\00s\00 \00n\00o\00t\00 \00m\00e\00t\00.")
 (data $664 (i32.const 62588) "\ac")
 (data $664.1 (i32.const 62600) "\02\00\00\00\8e\00\00\00t\00e\00l\00e\00p\00o\00r\00t\00 \00s\00h\00o\00u\00l\00d\00 \00s\00u\00c\00c\00e\00e\00d\00 \00w\00h\00e\00n\00 \00n\00o\00d\00e\00s\00 \00a\00r\00e\00 \00e\00n\00t\00a\00n\00g\00l\00e\00d\00 \00a\00n\00d\00 \00t\00a\00r\00g\00e\00t\00 \00i\00s\00 \00c\00o\00h\00e\00r\00e\00n\00t")
 (data $665 (i32.const 62764) "\\")
 (data $665.1 (i32.const 62776) "\02\00\00\00D\00\00\00\13\' \00t\00e\00s\00t\00T\00e\00l\00e\00p\00o\00r\00t\00S\00h\00o\00u\00l\00d\00S\00u\00c\00c\00e\00e\00d\00 \00p\00a\00s\00s\00e\00d")
 (data $666 (i32.const 62860) "\1c")
 (data $666.1 (i32.const 62872) "\01")
 (data $667 (i32.const 62892) "l")
 (data $667.1 (i32.const 62904) "\02\00\00\00\\\00\00\00t\00e\00l\00e\00p\00o\00r\00t\00 \00s\00h\00o\00u\00l\00d\00 \00f\00a\00i\00l\00 \00i\00f\00 \00n\00o\00 \00c\00u\00r\00r\00e\00n\00t\00 \00n\00o\00d\00e\00 \00i\00s\00 \00s\00e\00t")
 (data $668 (i32.const 63004) "|")
 (data $668.1 (i32.const 63016) "\02\00\00\00`\00\00\00\13\' \00t\00e\00s\00t\00T\00e\00l\00e\00p\00o\00r\00t\00S\00h\00o\00u\00l\00d\00F\00a\00i\00l\00W\00i\00t\00h\00N\00o\00C\00u\00r\00r\00e\00n\00t\00N\00o\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $669 (i32.const 63132) "\1c")
 (data $669.1 (i32.const 63144) "\01")
 (data $670 (i32.const 63164) "\1c")
 (data $670.1 (i32.const 63176) "\01")
 (data $671 (i32.const 63196) "|")
 (data $671.1 (i32.const 63208) "\02\00\00\00^\00\00\00t\00e\00l\00e\00p\00o\00r\00t\00 \00s\00h\00o\00u\00l\00d\00 \00f\00a\00i\00l\00 \00i\00f\00 \00n\00o\00d\00e\00s\00 \00a\00r\00e\00 \00n\00o\00t\00 \00e\00n\00t\00a\00n\00g\00l\00e\00d")
 (data $672 (i32.const 63324) "l")
 (data $672.1 (i32.const 63336) "\02\00\00\00Z\00\00\00\13\' \00t\00e\00s\00t\00T\00e\00l\00e\00p\00o\00r\00t\00S\00h\00o\00u\00l\00d\00F\00a\00i\00l\00I\00f\00N\00o\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00 \00p\00a\00s\00s\00e\00d")
 (data $673 (i32.const 63436) "\1c")
 (data $673.1 (i32.const 63448) "\01")
 (data $674 (i32.const 63468) "\1c")
 (data $674.1 (i32.const 63480) "\01")
 (data $675 (i32.const 63500) "|")
 (data $675.1 (i32.const 63512) "\02\00\00\00f\00\00\00t\00e\00l\00e\00p\00o\00r\00t\00 \00s\00h\00o\00u\00l\00d\00 \00f\00a\00i\00l\00 \00i\00f\00 \00t\00a\00r\00g\00e\00t\00 \00n\00o\00d\00e\00 \00i\00s\00 \00n\00o\00t\00 \00c\00o\00h\00e\00r\00e\00n\00t")
 (data $676 (i32.const 63628) "|")
 (data $676.1 (i32.const 63640) "\02\00\00\00d\00\00\00\13\' \00t\00e\00s\00t\00T\00e\00l\00e\00p\00o\00r\00t\00S\00h\00o\00u\00l\00d\00F\00a\00i\00l\00I\00f\00T\00a\00r\00g\00e\00t\00N\00o\00t\00C\00o\00h\00e\00r\00e\00n\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $677 (i32.const 63756) "\1c")
 (data $677.1 (i32.const 63768) "\01")
 (data $678 (i32.const 63788) "\1c")
 (data $678.1 (i32.const 63800) "\01")
 (data $679 (i32.const 63820) "|")
 (data $679.1 (i32.const 63832) "\02\00\00\00f\00\00\00e\00n\00t\00a\00n\00g\00l\00e\00d\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00r\00u\00e\00 \00f\00o\00r\00 \00t\00w\00o\00 \00c\00o\00h\00e\00r\00e\00n\00t\00 \00n\00o\00d\00e\00s")
 (data $680 (i32.const 63948) "|")
 (data $680.1 (i32.const 63960) "\02\00\00\00l\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00S\00h\00o\00u\00l\00d\00R\00e\00t\00u\00r\00n\00T\00r\00u\00e\00F\00o\00r\00C\00o\00h\00e\00r\00e\00n\00t\00N\00o\00d\00e\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $681 (i32.const 64076) "\1c")
 (data $681.1 (i32.const 64088) "\01")
 (data $682 (i32.const 64108) "\1c")
 (data $682.1 (i32.const 64120) "\01")
 (data $683 (i32.const 64140) "\8c")
 (data $683.1 (i32.const 64152) "\02\00\00\00r\00\00\00e\00n\00t\00a\00n\00g\00l\00e\00d\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00f\00a\00l\00s\00e\00 \00i\00f\00 \00o\00n\00e\00 \00n\00o\00d\00e\00 \00i\00s\00 \00n\00o\00t\00 \00c\00o\00h\00e\00r\00e\00n\00t")
 (data $684 (i32.const 64284) "\8c")
 (data $684.1 (i32.const 64296) "\02\00\00\00p\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00S\00h\00o\00u\00l\00d\00R\00e\00t\00u\00r\00n\00F\00a\00l\00s\00e\00F\00o\00r\00I\00n\00c\00o\00h\00e\00r\00e\00n\00t\00N\00o\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $685 (i32.const 64428) ",")
 (data $685.1 (i32.const 64440) "\01\00\00\00\18")
 (data $685.2 (i32.const 64454) "\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@")
 (data $686 (i32.const 64476) "l")
 (data $686.1 (i32.const 64488) "\02\00\00\00V\00\00\00[\00M\00E\00T\00A\00]\00 \00O\00b\00s\00e\00r\00v\00i\00n\00g\00 \00p\00h\00a\00s\00e\00 \00r\00i\00n\00g\00 \00o\00f\00 \00r\00e\00m\00o\00t\00e\00 \00n\00o\00d\00e\00 ")
 (data $687 (i32.const 64588) "l")
 (data $687.1 (i32.const 64600) "\02\00\00\00N\00\00\00[\00M\00E\00T\00A\00]\00 \00O\00b\00s\00e\00r\00v\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00:\00 \00R\00e\00m\00o\00t\00e\00 \00n\00o\00d\00e\00 ")
 (data $688 (i32.const 64700) "<")
 (data $688.1 (i32.const 64712) "\02\00\00\00(\00\00\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00t\00o\00o\00 \00l\00o\00w\00 \00(")
 (data $689 (i32.const 64764) "\1c")
 (data $689.1 (i32.const 64776) "\02\00\00\00\04\00\00\00)\00.")
 (data $690 (i32.const 64796) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\14\00\00\00`\fc\00\00\00\00\00\00\d0\fc\00\00\00\00\00\00\10\fd")
 (data $691 (i32.const 64844) "|")
 (data $691.1 (i32.const 64856) "\02\00\00\00d\00\00\00o\00b\00s\00e\00r\00v\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00n\00u\00m\00b\00e\00r\00 \00o\00f\00 \00p\00h\00a\00s\00e\00s")
 (data $692 (i32.const 64972) ",")
 (data $692.1 (i32.const 64984) "\01\00\00\00\18")
 (data $692.2 (i32.const 64998) "\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@")
 (data $693 (i32.const 65020) "l")
 (data $693.1 (i32.const 65032) "\02\00\00\00X\00\00\00o\00b\00s\00e\00r\00v\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00p\00h\00a\00s\00e\00 \00r\00i\00n\00g")
 (data $694 (i32.const 65132) "\8c")
 (data $694.1 (i32.const 65144) "\02\00\00\00p\00\00\00\13\' \00t\00e\00s\00t\00O\00b\00s\00e\00r\00v\00e\00S\00h\00o\00u\00l\00d\00R\00e\00t\00u\00r\00n\00P\00h\00a\00s\00e\00R\00i\00n\00g\00F\00o\00r\00C\00o\00h\00e\00r\00e\00n\00t\00N\00o\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $695 (i32.const 65276) "\1c")
 (data $695.1 (i32.const 65288) "\01")
 (data $696 (i32.const 65308) "\8c")
 (data $696.1 (i32.const 65320) "\02\00\00\00x\00\00\00o\00b\00s\00e\00r\00v\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00a\00n\00 \00e\00m\00p\00t\00y\00 \00a\00r\00r\00a\00y\00 \00f\00o\00r\00 \00a\00 \00n\00o\00n\00-\00c\00o\00h\00e\00r\00e\00n\00t\00 \00n\00o\00d\00e")
 (data $697 (i32.const 65452) "\8c")
 (data $697.1 (i32.const 65464) "\02\00\00\00v\00\00\00\13\' \00t\00e\00s\00t\00O\00b\00s\00e\00r\00v\00e\00S\00h\00o\00u\00l\00d\00R\00e\00t\00u\00r\00n\00E\00m\00p\00t\00y\00A\00r\00r\00a\00y\00F\00o\00r\00I\00n\00c\00o\00h\00e\00r\00e\00n\00t\00N\00o\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $698 (i32.const 65596) "\\")
 (data $698.1 (i32.const 65608) "\02\00\00\00L\00\00\00\n\00A\00l\00l\00 \00f\00u\00n\00c\00t\00i\00o\00n\00a\00l\00 \00b\00l\00o\00c\00k\00s\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $699 (i32.const 65692) "\\")
 (data $699.1 (i32.const 65704) "\02\00\00\00H\00\00\00\05\' \00F\00u\00n\00c\00t\00i\00o\00n\00a\00l\00 \00B\00l\00o\00c\00k\00s\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $700 (i32.const 65788) "L")
 (data $700.1 (i32.const 65800) "\02\00\00\002\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00O\00p\00e\00r\00a\00t\00o\00r\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $701 (i32.const 65868) "L")
 (data $701.1 (i32.const 65880) "\02\00\00\002\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00o\00p\00e\00r\00a\00t\00o\00r\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $702 (i32.const 65952) "\9f\de\e0\c3\f04\f7?\00\90\e6y\7f\cc\d7\bf\1f\e9,jx\13\f7?\00\00\r\c2\eeo\d7\bf\a0\b5\fa\08`\f2\f6?\00\e0Q\13\e3\13\d7\bf}\8c\13\1f\a6\d1\f6?\00x(8[\b8\d6\bf\d1\b4\c5\0bI\b1\f6?\00x\80\90U]\d6\bf\ba\0c/3G\91\f6?\00\00\18v\d0\02\d6\bf#B\"\18\9fq\f6?\00\90\90\86\ca\a8\d5\bf\d9\1e\a5\99OR\f6?\00P\03VCO\d5\bf\c4$\8f\aaV3\f6?\00@k\c37\f6\d4\bf\14\dc\9dk\b3\14\f6?\00P\a8\fd\a7\9d\d4\bfL\\\c6Rd\f6\f5?\00\a8\899\92E\d4\bfO,\91\b5g\d8\f5?\00\b8\b09\f4\ed\d3\bf\de\90[\cb\bc\ba\f5?\00p\8fD\ce\96\d3\bfx\1a\d9\f2a\9d\f5?\00\a0\bd\17\1e@\d3\bf\87VF\12V\80\f5?\00\80F\ef\e2\e9\d2\bf\d3k\e7\ce\97c\f5?\00\e008\1b\94\d2\bf\93\7f\a7\e2%G\f5?\00\88\da\8c\c5>\d2\bf\83E\06B\ff*\f5?\00\90\')\e1\e9\d1\bf\df\bd\b2\db\"\0f\f5?\00\f8H+m\95\d1\bf\d7\de4G\8f\f3\f4?\00\f8\b9\9agA\d1\bf@(\de\cfC\d8\f4?\00\98\ef\94\d0\ed\d0\bf\c8\a3x\c0>\bd\f4?\00\10\db\18\a5\9a\d0\bf\8a%\e0\c3\7f\a2\f4?\00\b8cR\e6G\d0\bf4\84\d4$\05\88\f4?\00\f0\86E\"\eb\cf\bf\0b-\19\1b\cem\f4?\00\b0\17uJG\cf\bfT\189\d3\d9S\f4?\000\10=D\a4\ce\bfZ\84\b4D\':\f4?\00\b0\e9D\r\02\ce\bf\fb\f8\15A\b5 \f4?\00\f0w)\a2`\cd\bf\b1\f4>\da\82\07\f4?\00\90\95\04\01\c0\cc\bf\8f\feW]\8f\ee\f3?\00\10\89V) \cc\bf\e9L\0b\a0\d9\d5\f3?\00\10\81\8d\17\81\cb\bf+\c1\10\c0`\bd\f3?\00\d0\d3\cc\c9\e2\ca\bf\b8\dau+$\a5\f3?\00\90\12.@E\ca\bf\02\d0\9f\cd\"\8d\f3?\00\f0\1dhw\a8\c9\bf\1cz\84\c5[u\f3?\000Him\0c\c9\bf\e26\adI\ce]\f3?\00\c0E\a6 q\c8\bf@\d4M\98yF\f3?\000\14\b4\8f\d6\c7\bf$\cb\ff\ce\\/\f3?\00pb<\b8<\c7\bfI\r\a1uw\18\f3?\00`7\9b\9a\a3\c6\bf\909>7\c8\01\f3?\00\a0\b7T1\0b\c6\bfA\f8\95\bbN\eb\f2?\000$v}s\c5\bf\d1\a9\19\02\n\d5\f2?\000\c2\8f{\dc\c4\bf*\fd\b7\a8\f9\be\f2?\00\00\d2Q,F\c4\bf\ab\1b\0cz\1c\a9\f2?\00\00\83\bc\8a\b0\c3\bf0\b5\14`r\93\f2?\00\00Ik\99\1b\c3\bf\f5\a1WW\fa}\f2?\00@\a4\90T\87\c2\bf\bf;\1d\9b\b3h\f2?\00\a0y\f8\b9\f3\c1\bf\bd\f5\8f\83\9dS\f2?\00\a0,%\c8`\c1\bf;\08\c9\aa\b7>\f2?\00 \f7W\7f\ce\c0\bf\b6@\a9+\01*\f2?\00\a0\feI\dc<\c0\bf2A\cc\96y\15\f2?\00\80K\bc\bdW\bf\bf\9b\fc\d2\1d \01\f2?\00@@\96\087\be\bf\0bHMI\f4\ec\f1?\00@\f9>\98\17\bd\bfie\8fR\f5\d8\f1?\00\a0\d8Ng\f9\bb\bf|~W\11#\c5\f1?\00`/ y\dc\ba\bf\e9&\cbt|\b1\f1?\00\80(\e7\c3\c0\b9\bf\b6\1a,\0c\01\9e\f1?\00\c0r\b3F\a6\b8\bf\bdp\b6{\b0\8a\f1?\00\00\ac\b3\01\8d\b7\bf\b6\bc\ef%\8aw\f1?\00\008E\f1t\b6\bf\da1L5\8dd\f1?\00\80\87m\0e^\b5\bf\dd_\'\90\b9Q\f1?\00\e0\a1\de\\H\b4\bfL\d22\a4\0e?\f1?\00\a0jM\d93\b3\bf\da\f9\10r\8b,\f1?\00`\c5\f8y \b2\bf1\b5\ec(0\1a\f1?\00 b\98F\0e\b1\bf\af4\84\da\fb\07\f1?\00\00\d2jl\fa\af\bf\b3kN\0f\ee\f5\f0?\00@wJ\8d\da\ad\bf\ce\9f*]\06\e4\f0?\00\00\85\e4\ec\bc\ab\bf!\a5,cD\d2\f0?\00\c0\12@\89\a1\a9\bf\1a\98\e2|\a7\c0\f0?\00\c0\023X\88\a7\bf\d16\c6\83/\af\f0?\00\80\d6g^q\a5\bf9\13\a0\98\db\9d\f0?\00\80eI\8a\\\a3\bf\df\e7R\af\ab\8c\f0?\00@\15d\e3I\a1\bf\fb(N/\9f{\f0?\00\80\eb\82\c0r\9e\bf\19\8f5\8c\b5j\f0?\00\80RR\f1U\9a\bf,\f9\ec\a5\eeY\f0?\00\80\81\cfb=\96\bf\90,\d1\cdII\f0?\00\00\aa\8c\fb(\92\bf\a9\ad\f0\c6\c68\f0?\00\00\f9 {1\8c\bf\a92y\13e(\f0?\00\00\aa]5\19\84\bfHs\ea\'$\18\f0?\00\00\ec\c2\03\12x\bf\95\b1\14\06\04\08\f0?\00\00$y\t\04`\bf\1a\fa&\f7\1f\e0\ef?\00\00\90\84\f3\efo?t\eaa\c2\1c\a1\ef?\00\00=5A\dc\87?.\99\81\b0\10c\ef?\00\80\c2\c4\a3\ce\93?\cd\ad\ee<\f6%\ef?\00\00\89\14\c1\9f\9b?\e7\13\91\03\c8\e9\ee?\00\00\11\ce\d8\b0\a1?\ab\b1\cbx\80\ae\ee?\00\c0\01\d0[\8a\a5?\9b\0c\9d\a2\1at\ee?\00\80\d8@\83\\\a9?\b5\99\n\83\91:\ee?\00\80W\efj\'\ad?V\9a`\t\e0\01\ee?\00\c0\98\e5\98u\b0?\98\bbw\e5\01\ca\ed?\00 \r\e3\f5S\b2?\03\91|\0b\f2\92\ed?\00\008\8b\dd.\b4?\ce\\\fbf\ac\\\ed?\00\c0W\87Y\06\b6?\9d\de^\aa,\'\ed?\00\00j5v\da\b7?\cd,k>n\f2\ec?\00`\1cNC\ab\b9?\02y\a7\a2m\be\ec?\00`\r\bb\c7x\bb?m\087m&\8b\ec?\00 \e72\13C\bd?\04X]\bd\94X\ec?\00`\deq1\n\bf?\8c\9f\bb3\b5&\ec?\00@\91+\15g\c0??\e7\ec\ee\83\f5\eb?\00\b0\92\82\85G\c1?\c1\96\dbu\fd\c4\eb?\000\ca\cdn&\c2?(J\86\0c\1e\95\eb?\00P\c5\a6\d7\03\c3?,>\ef\c5\e2e\eb?\00\103<\c3\df\c3?\8b\88\c9gH7\eb?\00\80zk6\ba\c4?J0\1d!K\t\eb?\00\f0\d1(9\93\c5?~\ef\f2\85\e8\db\ea?\00\f0\18$\cdj\c6?\a2=`1\1d\af\ea?\00\90f\ec\f8@\c7?\a7X\d3?\e6\82\ea?\00\f0\1a\f5\c0\15\c8?\8bs\t\ef@W\ea?\00\80\f6T)\e9\c8?\'K\ab\90*,\ea?\00@\f8\026\bb\c9?\d1\f2\93\13\a0\01\ea?\00\00,\1c\ed\8b\ca?\1b<\db$\9f\d7\e9?\00\d0\01\\Q[\cb?\90\b1\c7\05%\ae\e9?\00\c0\bc\ccg)\cc?/\ce\97\f2.\85\e9?\00`H\d55\f6\cc?uK\a4\ee\ba\\\e9?\00\c0F4\bd\c1\cd?8H\e7\9d\c64\e9?\00\e0\cf\b8\01\8c\ce?\e6Rg/O\r\e9?\00\90\17\c0\tU\cf?\9d\d7\ff\8eR\e6\e8?\00\b8\1f\12l\0e\d0?|\00\cc\9f\ce\bf\e8?\00\d0\93\0e\b8q\d0?\0e\c3\be\da\c0\99\e8?\00p\86\9ek\d4\d0?\fb\17#\aa\'t\e8?\00\d0K3\876\d1?\08\9a\b3\ac\00O\e8?\00H#g\r\98\d1?U>e\e8I*\e8?\00\80\cc\e0\ff\f8\d1?`\02\f4\95\01\06\e8?\00hc\d7_Y\d2?)\a3\e0c%\e2\e7?\00\a8\14\t0\b9\d2?\ad\b5\dcw\b3\be\e7?\00`C\10r\18\d3?\c2%\97g\aa\9b\e7?\00\18\ecm&w\d3?W\06\17\f2\07y\e7?\000\af\fbO\d5\d3?\0c\13\d6\db\caV\e7?\00\e0/\e3\ee2\d4?")
 (data $703 (i32.const 68000) "k\b6O\01\00\10\e6?<[B\91l\02~<\95\b4M\03\000\e6?A]\00H\ea\bf\8d<x\d4\94\r\00P\e6?\b7\a5\d6\86\a7\7f\8e<\adoN\07\00p\e6?L%Tk\ea\fca<\ae\0f\df\fe\ff\8f\e6?\fd\0eYL\'~|\bc\bc\c5c\07\00\b0\e6?\01\da\dcHh\c1\8a\bc\f6\c1\\\1e\00\d0\e6?\11\93I\9d\1c?\83<>\f6\05\eb\ff\ef\e6?S-\e2\1a\04\80~\bc\80\97\86\0e\00\10\e7?Ry\tqf\ff{<\12\e9g\fc\ff/\e7?$\87\bd&\e2\00\8c<j\11\81\df\ffO\e7?\d2\01\f1n\91\02n\bc\90\9cg\0f\00p\e7?t\9cT\cdq\fcg\bc5\c8~\fa\ff\8f\e7?\83\04\f5\9e\c1\be\81<\e6\c2 \fe\ff\af\e7?ed\cc)\17~p\bc\00\c9?\ed\ff\cf\e7?\1c\8b{\08r\80\80\bcv\1a&\e9\ff\ef\e7?\ae\f9\9dm(\c0\8d<\e8\a3\9c\04\00\10\e8?3L\e5Q\d2\7f\89<\8f,\93\17\000\e8?\81\f30\b6\e9\fe\8a\bc\9cs3\06\00P\e8?\bc5ek\bf\bf\89<\c6\89B \00p\e8?u{\11\f3e\bf\8b\bc\04y\f5\eb\ff\8f\e8?W\cb=\a2n\00\89\bc\df\04\bc\"\00\b0\e8?\nK\e08\df\00}\bc\8a\1b\0c\e5\ff\cf\e8?\05\9f\ffFq\00\88\bcC\8e\91\fc\ff\ef\e8?8pz\d0{\81\83<\c7_\fa\1e\00\10\e9?\03\b4\dfv\91>\89<\b9{F\13\000\e9?v\02\98KN\80\7f<o\07\ee\e6\ffO\e9?.b\ff\d9\f0~\8f\bc\d1\12<\de\ffo\e9?\ba8&\96\aa\82p\bc\r\8aE\f4\ff\8f\e9?\ef\a8d\91\1b\80\87\bc>.\98\dd\ff\af\e9?7\93Z\8a\e0@\87\bcf\fbI\ed\ff\cf\e9?\00\e0\9b\c1\08\ce?<Q\9c\f1 \00\f0\e9?\n[\88\'\aa?\8a\bc\06\b0E\11\00\10\ea?V\daX\99H\fft<\fa\f6\bb\07\000\ea?\18m+\8a\ab\be\8c<y\1d\97\10\00P\ea?0yx\dd\ca\fe\88<H.\f5\1d\00p\ea?\db\ab\d8=vA\8f\bcR3Y\1c\00\90\ea?\12v\c2\84\02\bf\8e\bcK>O*\00\b0\ea?_?\ff<\04\fdi\bc\d1\1e\ae\d7\ff\cf\ea?\b4p\90\12\e7>\82\bcx\04Q\ee\ff\ef\ea?\a3\de\0e\e0>\06j<[\re\db\ff\0f\eb?\b9\n\1f8\c8\06Z<W\ca\aa\fe\ff/\eb?\1d<#t\1e\01y\bc\dc\ba\95\d9\ffO\eb?\9f*\86h\10\ffy\bc\9ce\9e$\00p\eb?>O\86\d0E\ff\8a<@\16\87\f9\ff\8f\eb?\f9\c3\c2\96w\fe|<O\cb\04\d2\ff\af\eb?\c4+\f2\ee\'\ffc\bcE\\A\d2\ff\cf\eb?!\ea;\ee\b7\ffl\bc\df\tc\f8\ff\ef\eb?\\\0b.\97\03A\81\bcSv\b5\e1\ff\0f\ec?\19j\b7\94d\c1\8b<\e3W\fa\f1\ff/\ec?\ed\c60\8d\ef\fed\bc$\e4\bf\dc\ffO\ec?uG\ec\bch?\84\bc\f7\b9T\ed\ffo\ec?\ec\e0S\f0\a3~\84<\d5\8f\99\eb\ff\8f\ec?\f1\92\f9\8d\06\83s<\9a!%!\00\b0\ec?\04\0e\18d\8e\fdh\bc\9cF\94\dd\ff\cf\ec?r\ea\c7\1c\be~\8e<v\c4\fd\ea\ff\ef\ec?\fe\88\9f\ad9\be\8e<+\f8\9a\16\00\10\ed?qZ\b9\a8\91}u<\1d\f7\0f\r\000\ed?\da\c7pi\90\c1\89<\c4\0fy\ea\ffO\ed?\0c\feX\c57\0eX\bc\e5\87\dc.\00p\ed?D\0f\c1M\d6\80\7f\bc\aa\82\dc!\00\90\ed?\\\\\fd\94\8f|t\bc\83\02k\d8\ff\af\ed?~a!\c5\1d\7f\8c<9Gl)\00\d0\ed?S\b1\ff\b2\9e\01\88<\f5\90D\e5\ff\ef\ed?\89\ccR\c6\d2\00n<\94\f6\ab\cd\ff\0f\ee?\d2i- @\83\7f\bc\dd\c8R\db\ff/\ee?d\08\1b\ca\c1\00{<\ef\16B\f2\ffO\ee?Q\ab\94\b0\a8\ffr<\11^\8a\e8\ffo\ee?Y\be\ef\b1s\f6W\bc\r\ff\9e\11\00\90\ee?\01\c8\0b^\8d\80\84\bcD\17\a5\df\ff\af\ee?\b5 C\d5\06\00x<\a1\7f\12\1a\00\d0\ee?\92\\V`\f8\02P\bc\c4\bc\ba\07\00\f0\ee?\11\e65]D@\85\bc\02\8dz\f5\ff\0f\ef?\05\91\ef91\fbO\bc\c7\8a\e5\1e\000\ef?U\11s\f2\ac\81\8a<\944\82\f5\ffO\ef?C\c7\d7\d4A?\8a<kL\a9\fc\ffo\ef?ux\98\1c\f4\02b\bcA\c4\f9\e1\ff\8f\ef?K\e7w\f4\d1}w<~\e3\e0\d2\ff\af\ef?1\a3|\9a\19\01o\bc\9e\e4w\1c\00\d0\ef?\b1\ac\ceK\ee\81q<1\c3\e0\f7\ff\ef\ef?Z\87p\017\05n\bcn`e\f4\ff\0f\f0?\da\n\1cI\ad~\8a\bcXz\86\f3\ff/\f0?\e0\b2\fc\c3i\7f\97\bc\17\r\fc\fd\ffO\f0?[\94\cb4\fe\bf\97<\82M\cd\03\00p\f0?\cbV\e4\c0\83\00\82<\e8\cb\f2\f9\ff\8f\f0?\1au7\be\df\ffm\bce\da\0c\01\00\b0\f0?\eb&\e6\ae\7f?\91\bc8\d3\a4\01\00\d0\f0?\f7\9fHy\fa}\80<\fd\fd\da\fa\ff\ef\f0?\c0k\d6p\05\04w\bc\96\fd\ba\0b\00\10\f1?b\0bm\84\d4\80\8e<]\f4\e5\fa\ff/\f1?\ef6\fdd\fa\bf\9d<\d9\9a\d5\r\00P\f1?\aeP\12pw\00\9a<\9aU!\0f\00p\f1?\ee\de\e3\e2\f9\fd\8d<&T\'\fc\ff\8f\f1?sr;\dc0\00\91<Y<=\12\00\b0\f1?\88\01\03\80y\7f\99<\b7\9e)\f8\ff\cf\f1?g\8c\9f\ab2\f9e\bc\00\d4\8a\f4\ff\ef\f1?\eb[\a7\9d\bf\7f\93<\a4\86\8b\0c\00\10\f2?\"[\fd\91k\80\9f<\03C\85\03\000\f2?3\bf\9f\eb\c2\ff\93<\84\f6\bc\ff\ffO\f2?r..~\e7\01v<\d9!)\f5\ffo\f2?a\0c\7fv\bb\fc\7f<<:\93\14\00\90\f2?+A\02<\ca\02r\bc\13cU\14\00\b0\f2?\02\1f\f23\82\80\92\bc;R\fe\eb\ff\cf\f2?\f2\dcO8~\ff\88\bc\96\ad\b8\0b\00\f0\f2?\c5A0PQ\ff\85\bc\af\e2z\fb\ff\0f\f3?\9d(^\88q\00\81\bc\7f_\ac\fe\ff/\f3?\15\b7\b7?]\ff\91\bcVg\a6\0c\00P\f3?\bd\82\8b\"\82\7f\95<!\f7\fb\11\00p\f3?\cc\d5\r\c4\ba\00\80<\b9/Y\f9\ff\8f\f3?Q\a7\b2-\9d?\94\bcB\d2\dd\04\00\b0\f3?\e18vpk\7f\85<W\c9\b2\f5\ff\cf\f3?1\12\bf\10:\02z<\18\b4\b0\ea\ff\ef\f3?\b0R\b1fm\7f\98<\f4\af2\15\00\10\f4?$\85\19_7\f8g<)\8bG\17\000\f4?CQ\dcr\e6\01\83<c\b4\95\e7\ffO\f4?Z\89\b2\b8i\ff\89<\e0u\04\e8\ffo\f4?T\f2\c2\9b\b1\c0\95\bc\e7\c1o\ef\ff\8f\f4?r*:\f2\t@\9b<\04\a7\be\e5\ff\af\f4?E}\r\bf\b7\ff\94\bc\de\'\10\17\00\d0\f4?=j\dcqd\c0\99\bc\e2>\f0\0f\00\f0\f4?\1cS\85\0b\89\7f\97<\d1K\dc\12\00\10\f5?6\a4fqe\04`<z\'\05\16\000\f5?\t2#\ce\ce\bf\96\bcLp\db\ec\ffO\f5?\d7\a1\05\05r\02\89\bc\a9T_\ef\ffo\f5?\12d\c9\0e\e6\bf\9b<\12\10\e6\17\00\90\f5?\90\ef\af\81\c5~\88<\92>\c9\03\00\b0\f5?\c0\0c\bf\n\08A\9f\bc\bc\19I\1d\00\d0\f5?)G%\fb*\81\98\bc\89z\b8\e7\ff\ef\f5?\04i\ed\80\b7~\94\bc")
 (data $704 (i32.const 70060) "l")
 (data $704.1 (i32.const 70072) "\02\00\00\00Z\00\00\00R\00e\00s\00u\00l\00t\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00p\00r\00i\00m\00e\00 \002\00 \00f\00r\00o\00m\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00A")
 (data $705 (i32.const 70172) "\\")
 (data $705.1 (i32.const 70184) "\02\00\00\00@\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00o\00p\00e\00r\00a\00t\00o\00r\00s\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $706 (i32.const 70268) "|")
 (data $706.1 (i32.const 70280) "\02\00\00\00b\00\00\00R\00e\00s\00u\00l\00t\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00p\00r\00i\00m\00e\00 \003\00 \00f\00r\00o\00m\00 \00b\00o\00t\00h\00 \00f\00r\00a\00g\00m\00e\00n\00t\00s")
 (data $707 (i32.const 70396) "l")
 (data $707.1 (i32.const 70408) "\02\00\00\00Z\00\00\00R\00e\00s\00u\00l\00t\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00p\00r\00i\00m\00e\00 \005\00 \00f\00r\00o\00m\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00B")
 (data $708 (i32.const 70508) "L")
 (data $708.1 (i32.const 70520) "\02\00\00\00<\00\00\00E\00n\00t\00r\00o\00p\00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00n\00o\00n\00-\00n\00e\00g\00a\00t\00i\00v\00e")
 (data $709 (i32.const 70588) "L")
 (data $709.1 (i32.const 70600) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00T\00e\00n\00s\00o\00r\00O\00p\00e\00r\00a\00t\00i\00o\00n\00 \00p\00a\00s\00s\00e\00d")
 (data $710 (i32.const 70668) "|")
 (data $710.1 (i32.const 70680) "\02\00\00\00l\00\00\00C\00o\00l\00l\00a\00p\00s\00e\00d\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00e\00x\00a\00c\00t\00l\00y\00 \00o\00n\00e\00 \00c\00o\00e\00f\00f\00i\00c\00i\00e\00n\00t")
 (data $711 (i32.const 70796) "l")
 (data $711.1 (i32.const 70808) "\02\00\00\00V\00\00\00C\00o\00l\00l\00a\00p\00s\00e\00d\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00z\00e\00r\00o\00 \00e\00n\00t\00r\00o\00p\00y")
 (data $712 (i32.const 70908) "L")
 (data $712.1 (i32.const 70920) "\02\00\00\008\00\00\00C\00e\00n\00t\00e\00r\00 \00X\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00e\00s\00e\00r\00v\00e\00d")
 (data $713 (i32.const 70988) "L")
 (data $713.1 (i32.const 71000) "\02\00\00\008\00\00\00C\00e\00n\00t\00e\00r\00 \00Y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00r\00e\00s\00e\00r\00v\00e\00d")
 (data $714 (i32.const 71068) "l")
 (data $714.1 (i32.const 71080) "\02\00\00\00P\00\00\00S\00e\00l\00e\00c\00t\00e\00d\00 \00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00a\00m\00p\00l\00i\00t\00u\00d\00e\00 \001\00.\000")
 (data $715 (i32.const 71180) "L")
 (data $715.1 (i32.const 71192) "\02\00\00\00<\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00l\00l\00a\00p\00s\00e\00O\00p\00e\00r\00a\00t\00i\00o\00n\00 \00p\00a\00s\00s\00e\00d")
 (data $716 (i32.const 71260) ",")
 (data $716.1 (i32.const 71272) "\02\00\00\00\10\00\00\00t\00e\00s\00t\00N\00o\00d\00e")
 (data $717 (i32.const 71308) ",")
 (data $717.1 (i32.const 71320) "\01\00\00\00\18")
 (data $717.2 (i32.const 71334) "\e0?\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
 (data $718 (i32.const 71356) "L")
 (data $718.1 (i32.const 71368) "\02\00\00\00:\00\00\00F\00i\00r\00s\00t\00 \00p\00h\00a\00s\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00h\00i\00f\00t\00e\00d")
 (data $719 (i32.const 71436) "L")
 (data $719.1 (i32.const 71448) "\02\00\00\00<\00\00\00S\00e\00c\00o\00n\00d\00 \00p\00h\00a\00s\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00h\00i\00f\00t\00e\00d")
 (data $720 (i32.const 71516) "L")
 (data $720.1 (i32.const 71528) "\02\00\00\00:\00\00\00T\00h\00i\00r\00d\00 \00p\00h\00a\00s\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00h\00i\00f\00t\00e\00d")
 (data $721 (i32.const 71596) "\\")
 (data $721.1 (i32.const 71608) "\02\00\00\00H\00\00\00C\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00l\00i\00g\00h\00t\00l\00y\00 \00r\00e\00d\00u\00c\00e\00d")
 (data $722 (i32.const 71692) "\\")
 (data $722.1 (i32.const 71704) "\02\00\00\00F\00\00\00P\00h\00a\00s\00e\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00w\00r\00a\00p\00p\00e\00d\00 \00t\00o\00 \00[\000\00,\00 \002\00\c0\03)")
 (data $723 (i32.const 71788) "\\")
 (data $723.1 (i32.const 71800) "\02\00\00\00B\00\00\00\13\' \00t\00e\00s\00t\00R\00o\00t\00a\00t\00e\00P\00h\00a\00s\00e\00O\00p\00e\00r\00a\00t\00i\00o\00n\00 \00p\00a\00s\00s\00e\00d")
 (data $724 (i32.const 71884) ",")
 (data $724.1 (i32.const 71896) "\01\00\00\00\18")
 (data $724.2 (i32.const 71910) "\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@")
 (data $725 (i32.const 71932) ",")
 (data $725.1 (i32.const 71944) "\01\00\00\00\18\00\00\00\9a\99\99\99\99\99\f1?\cd\cc\cc\cc\cc\cc\00@\cd\cc\cc\cc\cc\cc\08@")
 (data $726 (i32.const 71980) "<")
 (data $726.1 (i32.const 71992) "\02\00\00\00\"\00\00\00[\00O\00P\00E\00R\00A\00T\00O\00R\00]\00 \00N\00o\00d\00e\00s\00 ")
 (data $727 (i32.const 72044) "\1c")
 (data $727.1 (i32.const 72056) "\02\00\00\00\n\00\00\00 \00a\00n\00d\00 ")
 (data $728 (i32.const 72076) "\\")
 (data $728.1 (i32.const 72088) "\02\00\00\00B\00\00\00 \00a\00r\00e\00 \00e\00n\00t\00a\00n\00g\00l\00e\00d\00.\00 \00N\00e\00w\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00:\00 \00A\00=")
 (data $729 (i32.const 72172) "\1c")
 (data $729.1 (i32.const 72184) "\02\00\00\00\08\00\00\00,\00 \00B\00=")
 (data $730 (i32.const 72204) "<\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00 \00\00\00@\19\01\00\00\00\00\00\80\19\01\00\00\00\00\00\a0\19\01\00\00\00\00\00\00\1a\01")
 (data $731 (i32.const 72268) "l")
 (data $731.1 (i32.const 72280) "\02\00\00\00N\00\00\00 \00c\00a\00n\00n\00o\00t\00 \00e\00n\00t\00a\00n\00g\00l\00e\00.\00 \00P\00r\00o\00b\00a\00b\00i\00l\00i\00t\00y\00 \00t\00o\00o\00 \00l\00o\00w\00:\00 ")
 (data $732 (i32.const 72380) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\18\00\00\00@\19\01\00\00\00\00\00\80\19\01\00\00\00\00\00`\1a\01")
 (data $733 (i32.const 72428) "\\")
 (data $733.1 (i32.const 72440) "\02\00\00\00H\00\00\00N\00o\00d\00e\00 \00A\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00d\00e\00c\00r\00e\00a\00s\00e")
 (data $734 (i32.const 72524) "\\")
 (data $734.1 (i32.const 72536) "\02\00\00\00H\00\00\00N\00o\00d\00e\00 \00B\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00d\00e\00c\00r\00e\00a\00s\00e")
 (data $735 (i32.const 72620) "\\")
 (data $735.1 (i32.const 72632) "\02\00\00\00H\00\00\00\13\' \00t\00e\00s\00t\00L\00i\00n\00k\00E\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00S\00u\00c\00c\00e\00s\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $736 (i32.const 72716) ",")
 (data $736.1 (i32.const 72728) "\01\00\00\00\18")
 (data $736.2 (i32.const 72742) "\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@")
 (data $737 (i32.const 72764) ",")
 (data $737.1 (i32.const 72776) "\01\00\00\00\18")
 (data $737.2 (i32.const 72790) "\10@\00\00\00\00\00\00\14@\00\00\00\00\00\00\18@")
 (data $738 (i32.const 72812) "l")
 (data $738.1 (i32.const 72824) "\02\00\00\00P\00\00\00N\00o\00d\00e\00 \00A\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00m\00a\00i\00n\00 \00u\00n\00c\00h\00a\00n\00g\00e\00d")
 (data $739 (i32.const 72924) "l")
 (data $739.1 (i32.const 72936) "\02\00\00\00P\00\00\00N\00o\00d\00e\00 \00B\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00m\00a\00i\00n\00 \00u\00n\00c\00h\00a\00n\00g\00e\00d")
 (data $740 (i32.const 73036) "\\")
 (data $740.1 (i32.const 73048) "\02\00\00\00H\00\00\00\13\' \00t\00e\00s\00t\00L\00i\00n\00k\00E\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00F\00a\00i\00l\00u\00r\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $741 (i32.const 73132) "\1c")
 (data $741.1 (i32.const 73144) "\02\00\00\00\0c\00\00\00s\00o\00u\00r\00c\00e")
 (data $742 (i32.const 73164) "\1c")
 (data $742.1 (i32.const 73176) "\01")
 (data $743 (i32.const 73196) ",")
 (data $743.1 (i32.const 73208) "\02\00\00\00\18\00\00\00i\00n\00t\00e\00r\00m\00e\00d\00i\00a\00t\00e")
 (data $744 (i32.const 73244) "\1c")
 (data $744.1 (i32.const 73256) "\01")
 (data $745 (i32.const 73276) "\1c")
 (data $745.1 (i32.const 73288) "\02\00\00\00\0c\00\00\00t\00a\00r\00g\00e\00t")
 (data $746 (i32.const 73308) "\1c")
 (data $746.1 (i32.const 73320) "\01")
 (data $747 (i32.const 73340) "\\")
 (data $747.1 (i32.const 73352) "\02\00\00\00H\00\00\00[\00O\00P\00E\00R\00A\00T\00O\00R\00]\00 \00A\00t\00t\00e\00m\00p\00t\00i\00n\00g\00 \00t\00o\00 \00r\00o\00u\00t\00e\00 \00f\00r\00o\00m\00 ")
 (data $748 (i32.const 73436) "\1c")
 (data $748.1 (i32.const 73448) "\02\00\00\00\0c\00\00\00 \00v\00i\00a\00 \00[")
 (data $749 (i32.const 73468) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\1c\00\00\00\90\1e\01\00\00\00\00\00\f0\ee\00\00\00\00\00\00\f0\1e\01\00\00\00\00\00p\d8")
 (data $750 (i32.const 73516) "\1c")
 (data $750.1 (i32.const 73528) "\d5\00\00\00\08\00\00\00\0e")
 (data $751 (i32.const 73548) "\1c")
 (data $751.1 (i32.const 73560) "\02\00\00\00\04\00\00\00,\00 ")
 (data $752 (i32.const 73580) "|")
 (data $752.1 (i32.const 73592) "\02\00\00\00j\00\00\00[\00O\00P\00E\00R\00A\00T\00O\00R\00]\00 \00R\00o\00u\00t\00i\00n\00g\00 \00f\00a\00i\00l\00e\00d\00:\00 \00C\00o\00h\00e\00r\00e\00n\00c\00e\00 \00t\00o\00o\00 \00l\00o\00w\00 \00b\00e\00t\00w\00e\00e\00n\00 ")
 (data $753 (i32.const 73708) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\14\00\00\00\80\1f\01\00\00\00\00\00\80\19\01\00\00\00\00\00\e0\91")
 (data $754 (i32.const 73756) "|")
 (data $754.1 (i32.const 73768) "\02\00\00\00f\00\00\00[\00O\00P\00E\00R\00A\00T\00O\00R\00]\00 \00R\00o\00u\00t\00i\00n\00g\00 \00s\00u\00c\00c\00e\00s\00s\00f\00u\00l\00 \00w\00i\00t\00h\00 \00a\00 \00t\00o\00t\00a\00l\00 \00c\00o\00s\00t\00 \00o\00f\00 ")
 (data $755 (i32.const 73884) "\1c\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\0c\00\00\000 \01\00\00\00\00\00\e0\91")
 (data $756 (i32.const 73916) "l")
 (data $756.1 (i32.const 73928) "\02\00\00\00R\00\00\00[\00O\00P\00E\00R\00A\00T\00O\00R\00]\00 \00R\00o\00u\00t\00i\00n\00g\00 \00f\00a\00i\00l\00e\00d\00:\00 \00T\00o\00t\00a\00l\00 \00c\00o\00s\00t\00 \00o\00f\00 ")
 (data $757 (i32.const 74028) "<")
 (data $757.1 (i32.const 74040) "\02\00\00\00&\00\00\00 \00e\00x\00c\00e\00e\00d\00s\00 \00t\00h\00r\00e\00s\00h\00o\00l\00d\00.")
 (data $758 (i32.const 74092) "\1c\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\0c\00\00\00\d0 \01\00\00\00\00\00@!\01")
 (data $759 (i32.const 74124) "l")
 (data $759.1 (i32.const 74136) "\02\00\00\00\\\00\00\00R\00o\00u\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00s\00u\00c\00c\00e\00e\00d\00 \00w\00i\00t\00h\00 \00h\00i\00g\00h\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00n\00o\00d\00e\00s")
 (data $760 (i32.const 74236) "L")
 (data $760.1 (i32.const 74248) "\02\00\00\002\00\00\00\13\' \00t\00e\00s\00t\00R\00o\00u\00t\00e\00S\00u\00c\00c\00e\00s\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $761 (i32.const 74316) "\1c")
 (data $761.1 (i32.const 74328) "\01")
 (data $762 (i32.const 74348) "\1c")
 (data $762.1 (i32.const 74360) "\01")
 (data $763 (i32.const 74380) "\1c")
 (data $763.1 (i32.const 74392) "\01")
 (data $764 (i32.const 74412) "l")
 (data $764.1 (i32.const 74424) "\02\00\00\00T\00\00\00R\00o\00u\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00f\00a\00i\00l\00 \00w\00i\00t\00h\00 \00l\00o\00w\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00n\00o\00d\00e\00s")
 (data $765 (i32.const 74524) "L")
 (data $765.1 (i32.const 74536) "\02\00\00\002\00\00\00\13\' \00t\00e\00s\00t\00R\00o\00u\00t\00e\00F\00a\00i\00l\00u\00r\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $766 (i32.const 74604) "\1c")
 (data $766.1 (i32.const 74616) "\01")
 (data $767 (i32.const 74636) "\8c")
 (data $767.1 (i32.const 74648) "\02\00\00\00r\00\00\00C\00o\00h\00e\00r\00e\00n\00c\00e\00 \00h\00e\00l\00p\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00n\00o\00d\00e\00\'\00s\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00v\00a\00l\00u\00e")
 (data $768 (i32.const 74780) "L")
 (data $768.1 (i32.const 74792) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00h\00e\00r\00e\00n\00c\00e\00H\00e\00l\00p\00e\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $769 (i32.const 74860) "\8c")
 (data $769.1 (i32.const 74872) "\02\00\00\00r\00\00\00E\00n\00t\00r\00o\00p\00y\00 \00h\00e\00l\00p\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00t\00h\00e\00 \00f\00r\00a\00g\00m\00e\00n\00t\00\'\00s\00 \00e\00n\00t\00r\00o\00p\00y\00 \00v\00a\00l\00u\00e")
 (data $770 (i32.const 75004) "L")
 (data $770.1 (i32.const 75016) "\02\00\00\004\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00H\00e\00l\00p\00e\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $771 (i32.const 75084) "L")
 (data $771.1 (i32.const 75096) "\02\00\00\00:\00\00\00\n\00A\00l\00l\00 \00o\00p\00e\00r\00a\00t\00o\00r\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $772 (i32.const 75164) "L")
 (data $772.1 (i32.const 75176) "\02\00\00\006\00\00\00\05\' \00O\00p\00e\00r\00a\00t\00o\00r\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $773 (i32.const 75244) "L")
 (data $773.1 (i32.const 75256) "\02\00\00\002\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00R\00e\00s\00o\00L\00a\00n\00g\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $774 (i32.const 75324) "L")
 (data $774.1 (i32.const 75336) "\02\00\00\002\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00R\00e\00s\00o\00L\00a\00n\00g\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $775 (i32.const 75404) "l")
 (data $775.1 (i32.const 75416) "\02\00\00\00X\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00c\00o\00e\00f\00f\00i\00c\00i\00e\00n\00t\00 \00f\00o\00r\00 \00p\00r\00i\00m\00e\00 \002")
 (data $776 (i32.const 75516) "\\")
 (data $776.1 (i32.const 75528) "\02\00\00\00@\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00r\00e\00s\00o\00n\00l\00a\00n\00g\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $777 (i32.const 75612) "|")
 (data $777.1 (i32.const 75624) "\02\00\00\00h\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00c\00o\00e\00f\00f\00i\00c\00i\00e\00n\00t\00 \00f\00o\00r\00 \00p\00r\00i\00m\00e\00 \003")
 (data $778 (i32.const 75740) "\\")
 (data $778.1 (i32.const 75752) "\02\00\00\00F\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00c\00e\00n\00t\00e\00r\00 \00X\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $779 (i32.const 75836) "\\")
 (data $779.1 (i32.const 75848) "\02\00\00\00F\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00c\00e\00n\00t\00e\00r\00 \00Y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $780 (i32.const 75932) "\\")
 (data $780.1 (i32.const 75944) "\02\00\00\00D\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00e\00n\00t\00r\00o\00p\00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $781 (i32.const 76028) "l")
 (data $781.1 (i32.const 76040) "\02\00\00\00P\00\00\00\13\' \00t\00e\00s\00t\00R\00e\00s\00o\00n\00a\00n\00t\00F\00r\00a\00g\00m\00e\00n\00t\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $782 (i32.const 76140) "l")
 (data $782.1 (i32.const 76152) "\02\00\00\00R\00\00\00E\00n\00c\00o\00d\00e\00d\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00c\00o\00e\00f\00f\00i\00c\00i\00e\00n\00t\00s")
 (data $783 (i32.const 76252) "l")
 (data $783.1 (i32.const 76264) "\02\00\00\00Z\00\00\00E\00n\00c\00o\00d\00e\00d\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00p\00o\00s\00i\00t\00i\00v\00e\00 \00e\00n\00t\00r\00o\00p\00y")
 (data $784 (i32.const 76364) "l")
 (data $784.1 (i32.const 76376) "\02\00\00\00X\00\00\00E\00n\00c\00o\00d\00e\00d\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00c\00e\00n\00t\00e\00r\00 \00X\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00o\00s\00i\00t\00i\00v\00e")
 (data $785 (i32.const 76476) "l")
 (data $785.1 (i32.const 76488) "\02\00\00\00X\00\00\00E\00n\00c\00o\00d\00e\00d\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00c\00e\00n\00t\00e\00r\00 \00Y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00o\00s\00i\00t\00i\00v\00e")
 (data $786 (i32.const 76588) "\\")
 (data $786.1 (i32.const 76600) "\02\00\00\00F\00\00\00\13\' \00t\00e\00s\00t\00R\00e\00s\00o\00n\00a\00n\00t\00F\00r\00a\00g\00m\00e\00n\00t\00E\00n\00c\00o\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $787 (i32.const 76684) ",")
 (data $787.1 (i32.const 76696) "\02\00\00\00\1a\00\00\00\"\00e\00n\00t\00r\00o\00p\00y\00\"\00:\000\00.\005")
 (data $788 (i32.const 76732) "L")
 (data $788.1 (i32.const 76744) "\02\00\00\006\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00e\00n\00t\00r\00o\00p\00y")
 (data $789 (i32.const 76812) "<")
 (data $789.1 (i32.const 76824) "\02\00\00\00$\00\00\00\"\00c\00e\00n\00t\00e\00r\00\"\00:\00[\001\00.\000\00,\002\00.\000\00]")
 (data $790 (i32.const 76876) "L")
 (data $790.1 (i32.const 76888) "\02\00\00\004\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00c\00e\00n\00t\00e\00r")
 (data $791 (i32.const 76956) "L")
 (data $791.1 (i32.const 76968) "\02\00\00\006\00\00\00\"\00c\00o\00e\00f\00f\00s\00\"\00:\00{\00\"\007\00\"\00:\000\00.\005\00,\00\"\001\001\00\"\00:\000\00.\005\00}")
 (data $792 (i32.const 77036) "\\")
 (data $792.1 (i32.const 77048) "\02\00\00\00@\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00c\00o\00e\00f\00f\00i\00c\00i\00e\00n\00t\00s")
 (data $793 (i32.const 77132) "\\")
 (data $793.1 (i32.const 77144) "\02\00\00\00F\00\00\00\13\' \00t\00e\00s\00t\00R\00e\00s\00o\00n\00a\00n\00t\00F\00r\00a\00g\00m\00e\00n\00t\00T\00o\00J\00S\00O\00N\00 \00p\00a\00s\00s\00e\00d")
 (data $794 (i32.const 77228) "L")
 (data $794.1 (i32.const 77240) "\02\00\00\00:\00\00\00S\00t\00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00e\00n\00t\00r\00o\00p\00y")
 (data $795 (i32.const 77308) "\\")
 (data $795.1 (i32.const 77320) "\02\00\00\00J\00\00\00\13\' \00t\00e\00s\00t\00R\00e\00s\00o\00n\00a\00n\00t\00F\00r\00a\00g\00m\00e\00n\00t\00T\00o\00S\00t\00r\00i\00n\00g\00 \00p\00a\00s\00s\00e\00d")
 (data $796 (i32.const 77404) "\1c")
 (data $796.1 (i32.const 77416) "\02\00\00\00\n\00\00\00n\00o\00d\00e\001")
 (data $797 (i32.const 77436) "L")
 (data $797.1 (i32.const 77448) "\02\00\00\002\00\00\00N\00o\00d\00e\00 \00I\00D\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $798 (i32.const 77516) "L")
 (data $798.1 (i32.const 77528) "\02\00\00\00:\00\00\00N\00o\00d\00e\00 \00p\00r\00i\00[\000\00]\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $799 (i32.const 77596) "\\")
 (data $799.1 (i32.const 77608) "\02\00\00\00>\00\00\00I\00n\00i\00t\00i\00a\00l\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000\00.\000")
 (data $800 (i32.const 77692) "\\")
 (data $800.1 (i32.const 77704) "\02\00\00\00D\00\00\00I\00n\00i\00t\00i\00a\00l\00 \00p\00h\00a\00s\00e\00 \00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00m\00p\00t\00y")
 (data $801 (i32.const 77788) "\\")
 (data $801.1 (i32.const 77800) "\02\00\00\00J\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00N\00o\00d\00e\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $802 (i32.const 77884) "\1c")
 (data $802.1 (i32.const 77896) "\02\00\00\00\n\00\00\00N\00o\00d\00e\00_")
 (data $803 (i32.const 77916) "\1c")
 (data $803.1 (i32.const 77928) "\02\00\00\00\02\00\00\00_")
 (data $804 (i32.const 77948) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\18\00\00\00P0\01\00\00\00\00\00p0\01\00\00\00\00\00p0\01")
 (data $805 (i32.const 77996) "l")
 (data $805.1 (i32.const 78008) "\02\00\00\00V\00\00\00G\00e\00n\00e\00r\00a\00t\00e\00d\00 \00n\00o\00d\00e\00 \00I\00D\00 \00s\00h\00o\00u\00l\00d\00 \00s\00t\00a\00r\00t\00 \00w\00i\00t\00h\00 \00\'\00N\00o\00d\00e\00_\00\'")
 (data $806 (i32.const 78108) "l")
 (data $806.1 (i32.const 78120) "\02\00\00\00N\00\00\00G\00e\00n\00e\00r\00a\00t\00e\00d\00 \00n\00o\00d\00e\00 \00p\00r\00i\00[\000\00]\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $807 (i32.const 78220) "l")
 (data $807.1 (i32.const 78232) "\02\00\00\00V\00\00\00G\00e\00n\00e\00r\00a\00t\00e\00d\00 \00n\00o\00d\00e\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00p\00o\00s\00i\00t\00i\00v\00e")
 (data $808 (i32.const 78332) "|")
 (data $808.1 (i32.const 78344) "\02\00\00\00`\00\00\00G\00e\00n\00e\00r\00a\00t\00e\00d\00 \00n\00o\00d\00e\00 \00p\00h\00a\00s\00e\00 \00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \003\00 \00e\00l\00e\00m\00e\00n\00t\00s")
 (data $809 (i32.const 78460) "\\")
 (data $809.1 (i32.const 78472) "\02\00\00\00L\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00N\00o\00d\00e\00G\00e\00n\00e\00r\00a\00t\00e\00N\00o\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $810 (i32.const 78556) ",")
 (data $810.1 (i32.const 78568) "\01\00\00\00\18\00\00\00\9a\99\99\99\99\99\b9?\9a\99\99\99\99\99\c9?333333\d3?")
 (data $811 (i32.const 78604) "\1c")
 (data $811.1 (i32.const 78616) "\02\00\00\00\04\00\00\00i\00d")
 (data $812 (i32.const 78636) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\1c\00\00\00P\d8\00\00\00\00\00\00\c0\d7\00\00\00\00\00\00\c0\d7\00\00\00\00\00\00p\d8")
 (data $813 (i32.const 78684) "\1c")
 (data $813.1 (i32.const 78696) "\02\00\00\00\06\00\00\00p\00r\00i")
 (data $814 (i32.const 78716) ",")
 (data $814.1 (i32.const 78728) "\02\00\00\00\12\00\00\00p\00h\00a\00s\00e\00R\00i\00n\00g")
 (data $815 (i32.const 78764) ",")
 (data $815.1 (i32.const 78776) "\02\00\00\00\12\00\00\00c\00o\00h\00e\00r\00e\00n\00c\00e")
 (data $816 (i32.const 78812) ",")
 (data $816.1 (i32.const 78824) "\02\00\00\00\18\00\00\00\"\00i\00d\00\"\00:\00\"\00n\00o\00d\00e\001\00\"")
 (data $817 (i32.const 78860) "<")
 (data $817.1 (i32.const 78872) "\02\00\00\00,\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00I\00D")
 (data $818 (i32.const 78924) ",")
 (data $818.1 (i32.const 78936) "\02\00\00\00\1a\00\00\00\"\00p\00r\00i\00\"\00:\00[\002\00,\003\00,\005\00]")
 (data $819 (i32.const 78972) "L")
 (data $819.1 (i32.const 78984) "\02\00\00\00.\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00p\00r\00i")
 (data $820 (i32.const 79052) "<")
 (data $820.1 (i32.const 79064) "\02\00\00\00\1e\00\00\00\"\00c\00o\00h\00e\00r\00e\00n\00c\00e\00\"\00:\000\00.\007")
 (data $821 (i32.const 79116) "L")
 (data $821.1 (i32.const 79128) "\02\00\00\00:\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e")
 (data $822 (i32.const 79196) "\\")
 (data $822.1 (i32.const 79208) "\02\00\00\00@\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00N\00o\00d\00e\00T\00o\00J\00S\00O\00N\00 \00p\00a\00s\00s\00e\00d")
 (data $823 (i32.const 79292) "L")
 (data $823.1 (i32.const 79304) "\02\00\00\000\00\00\00S\00t\00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00I\00D")
 (data $824 (i32.const 79372) "\\")
 (data $824.1 (i32.const 79384) "\02\00\00\00D\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00N\00o\00d\00e\00T\00o\00S\00t\00r\00i\00n\00g\00 \00p\00a\00s\00s\00e\00d")
 (data $825 (i32.const 79468) "\\")
 (data $825.1 (i32.const 79480) "\02\00\00\00F\00\00\00C\00h\00a\00n\00n\00e\00l\00 \00s\00o\00u\00r\00c\00e\00 \00I\00D\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $826 (i32.const 79564) "\\")
 (data $826.1 (i32.const 79576) "\02\00\00\00F\00\00\00C\00h\00a\00n\00n\00e\00l\00 \00t\00a\00r\00g\00e\00t\00 \00I\00D\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $827 (i32.const 79660) "\\")
 (data $827.1 (i32.const 79672) "\02\00\00\00D\00\00\00C\00h\00a\00n\00n\00e\00l\00 \00s\00t\00r\00e\00n\00g\00t\00h\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $828 (i32.const 79756) "l")
 (data $828.1 (i32.const 79768) "\02\00\00\00P\00\00\00C\00h\00a\00n\00n\00e\00l\00 \00m\00e\00m\00o\00r\00y\00 \00e\00n\00t\00r\00o\00p\00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $829 (i32.const 79868) "l")
 (data $829.1 (i32.const 79880) "\02\00\00\00X\00\00\00\13\' \00t\00e\00s\00t\00T\00e\00l\00e\00p\00o\00r\00t\00a\00t\00i\00o\00n\00C\00h\00a\00n\00n\00e\00l\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $830 (i32.const 79980) ",")
 (data $830.1 (i32.const 79992) "\02\00\00\00\10\00\00\00s\00t\00r\00e\00n\00g\00t\00h")
 (data $831 (i32.const 80028) "<")
 (data $831.1 (i32.const 80040) "\02\00\00\00\"\00\00\00h\00o\00l\00o\00g\00r\00a\00p\00h\00i\00c\00M\00e\00m\00o\00r\00y")
 (data $832 (i32.const 80092) ",")
 (data $832.1 (i32.const 80104) "\02\00\00\00\12\00\00\00\"\00s\00o\00u\00r\00c\00e\00\"\00:")
 (data $833 (i32.const 80140) "\\")
 (data $833.1 (i32.const 80152) "\02\00\00\00>\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00s\00o\00u\00r\00c\00e\00 \00n\00o\00d\00e")
 (data $834 (i32.const 80236) ",")
 (data $834.1 (i32.const 80248) "\02\00\00\00\12\00\00\00\"\00t\00a\00r\00g\00e\00t\00\"\00:")
 (data $835 (i32.const 80284) "\\")
 (data $835.1 (i32.const 80296) "\02\00\00\00>\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00t\00a\00r\00g\00e\00t\00 \00n\00o\00d\00e")
 (data $836 (i32.const 80380) ",")
 (data $836.1 (i32.const 80392) "\02\00\00\00\1c\00\00\00\"\00s\00t\00r\00e\00n\00g\00t\00h\00\"\00:\000\00.\009")
 (data $837 (i32.const 80428) "L")
 (data $837.1 (i32.const 80440) "\02\00\00\008\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00s\00t\00r\00e\00n\00g\00t\00h")
 (data $838 (i32.const 80508) "<")
 (data $838.1 (i32.const 80520) "\02\00\00\00(\00\00\00\"\00h\00o\00l\00o\00g\00r\00a\00p\00h\00i\00c\00M\00e\00m\00o\00r\00y\00\"\00:")
 (data $839 (i32.const 80572) "\\")
 (data $839.1 (i32.const 80584) "\02\00\00\00L\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00h\00o\00l\00o\00g\00r\00a\00p\00h\00i\00c\00 \00m\00e\00m\00o\00r\00y")
 (data $840 (i32.const 80668) "l")
 (data $840.1 (i32.const 80680) "\02\00\00\00N\00\00\00\13\' \00t\00e\00s\00t\00T\00e\00l\00e\00p\00o\00r\00t\00a\00t\00i\00o\00n\00C\00h\00a\00n\00n\00e\00l\00T\00o\00J\00S\00O\00N\00 \00p\00a\00s\00s\00e\00d")
 (data $841 (i32.const 80780) "L")
 (data $841.1 (i32.const 80792) "\02\00\00\00<\00\00\00S\00t\00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00s\00t\00r\00e\00n\00g\00t\00h")
 (data $842 (i32.const 80860) "l")
 (data $842.1 (i32.const 80872) "\02\00\00\00R\00\00\00\13\' \00t\00e\00s\00t\00T\00e\00l\00e\00p\00o\00r\00t\00a\00t\00i\00o\00n\00C\00h\00a\00n\00n\00e\00l\00T\00o\00S\00t\00r\00i\00n\00g\00 \00p\00a\00s\00s\00e\00d")
 (data $843 (i32.const 80972) ",")
 (data $843.1 (i32.const 80984) "\02\00\00\00\0e\00\00\00c\00u\00r\00r\00e\00n\00t")
 (data $844 (i32.const 81020) "l")
 (data $844.1 (i32.const 81032) "\02\00\00\00X\00\00\00c\00u\00r\00r\00e\00n\00t\00N\00o\00d\00e\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00n\00u\00l\00l\00 \00a\00f\00t\00e\00r\00 \00s\00e\00t\00t\00i\00n\00g")
 (data $845 (i32.const 81132) "\\")
 (data $845.1 (i32.const 81144) "\02\00\00\00@\00\00\00c\00u\00r\00r\00e\00n\00t\00N\00o\00d\00e\00 \00I\00D\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $846 (i32.const 81228) "|")
 (data $846.1 (i32.const 81240) "\02\00\00\00`\00\00\00c\00u\00r\00r\00e\00n\00t\00N\00o\00d\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00n\00u\00l\00l\00 \00a\00f\00t\00e\00r\00 \00s\00e\00t\00t\00i\00n\00g\00 \00t\00o\00 \00n\00u\00l\00l")
 (data $847 (i32.const 81356) "L")
 (data $847.1 (i32.const 81368) "\02\00\00\006\00\00\00\13\' \00t\00e\00s\00t\00S\00e\00t\00C\00u\00r\00r\00e\00n\00t\00N\00o\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $848 (i32.const 81436) ",")
 (data $848.1 (i32.const 81448) "\01\00\00\00\18\00\00\00\9a\99\99\99\99\99\b9?\9a\99\99\99\99\99\c9?333333\d3?")
 (data $849 (i32.const 81484) "\1c")
 (data $849.1 (i32.const 81496) "\02\00\00\00\n\00\00\00U\00N\00I\00T\00Y")
 (data $850 (i32.const 81516) "\\")
 (data $850.1 (i32.const 81528) "\02\00\00\00D\00\00\00A\00t\00t\00r\00a\00c\00t\00o\00r\00 \00s\00y\00m\00b\00o\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $851 (i32.const 81612) "l")
 (data $851.1 (i32.const 81624) "\02\00\00\00R\00\00\00A\00t\00t\00r\00a\00c\00t\00o\00r\00 \00p\00r\00i\00m\00e\00s\00 \00l\00e\00n\00g\00t\00h\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $852 (i32.const 81724) "l")
 (data $852.1 (i32.const 81736) "\02\00\00\00\\\00\00\00A\00t\00t\00r\00a\00c\00t\00o\00r\00 \00t\00a\00r\00g\00e\00t\00P\00h\00a\00s\00e\00 \00l\00e\00n\00g\00t\00h\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $853 (i32.const 81836) "\\")
 (data $853.1 (i32.const 81848) "\02\00\00\00J\00\00\00A\00t\00t\00r\00a\00c\00t\00o\00r\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $854 (i32.const 81932) "\\")
 (data $854.1 (i32.const 81944) "\02\00\00\00B\00\00\00\13\' \00t\00e\00s\00t\00A\00t\00t\00r\00a\00c\00t\00o\00r\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $855 (i32.const 82028) ",")
 (data $855.1 (i32.const 82040) "\02\00\00\00\0e\00\00\00H\00a\00r\00m\00o\00n\00y")
 (data $856 (i32.const 82076) "l")
 (data $856.1 (i32.const 82088) "\02\00\00\00T\00\00\00C\00r\00e\00a\00t\00e\00d\00 \00a\00t\00t\00r\00a\00c\00t\00o\00r\00 \00s\00y\00m\00b\00o\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $857 (i32.const 82188) "\\")
 (data $857.1 (i32.const 82200) "\02\00\00\00H\00\00\00C\00r\00e\00a\00t\00e\00d\00 \00a\00t\00t\00r\00a\00c\00t\00o\00r\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00p\00r\00i\00m\00e\00s")
 (data $858 (i32.const 82284) "l")
 (data $858.1 (i32.const 82296) "\02\00\00\00V\00\00\00C\00r\00e\00a\00t\00e\00d\00 \00a\00t\00t\00r\00a\00c\00t\00o\00r\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00t\00a\00r\00g\00e\00t\00 \00p\00h\00a\00s\00e\00s")
 (data $859 (i32.const 82396) "l")
 (data $859.1 (i32.const 82408) "\02\00\00\00Z\00\00\00C\00r\00e\00a\00t\00e\00d\00 \00a\00t\00t\00r\00a\00c\00t\00o\00r\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $860 (i32.const 82508) "L")
 (data $860.1 (i32.const 82520) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00A\00t\00t\00r\00a\00c\00t\00o\00r\00C\00r\00e\00a\00t\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $861 (i32.const 82588) ",")
 (data $861.1 (i32.const 82600) "\01\00\00\00\18\00\00\00\9a\99\99\99\99\99\b9?\9a\99\99\99\99\99\c9?333333\d3?")
 (data $862 (i32.const 82636) "\1c")
 (data $862.1 (i32.const 82648) "\02\00\00\00\0c\00\00\00s\00y\00m\00b\00o\00l")
 (data $863 (i32.const 82668) "\1c")
 (data $863.1 (i32.const 82680) "\02\00\00\00\0c\00\00\00p\00r\00i\00m\00e\00s")
 (data $864 (i32.const 82700) ",")
 (data $864.1 (i32.const 82712) "\02\00\00\00\16\00\00\00t\00a\00r\00g\00e\00t\00P\00h\00a\00s\00e")
 (data $865 (i32.const 82748) "<")
 (data $865.1 (i32.const 82760) "\02\00\00\00 \00\00\00\"\00s\00y\00m\00b\00o\00l\00\"\00:\00\"\00U\00N\00I\00T\00Y\00\"")
 (data $866 (i32.const 82812) "L")
 (data $866.1 (i32.const 82824) "\02\00\00\004\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00s\00y\00m\00b\00o\00l")
 (data $867 (i32.const 82892) "<")
 (data $867.1 (i32.const 82904) "\02\00\00\00\1e\00\00\00\"\00c\00o\00h\00e\00r\00e\00n\00c\00e\00\"\00:\000\00.\008")
 (data $868 (i32.const 82956) "<")
 (data $868.1 (i32.const 82968) "\02\00\00\00 \00\00\00\"\00p\00r\00i\00m\00e\00s\00\"\00:\00[\002\00,\003\00,\005\00]")
 (data $869 (i32.const 83020) "L")
 (data $869.1 (i32.const 83032) "\02\00\00\004\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00p\00r\00i\00m\00e\00s")
 (data $870 (i32.const 83100) "L")
 (data $870.1 (i32.const 83112) "\02\00\00\006\00\00\00\"\00t\00a\00r\00g\00e\00t\00P\00h\00a\00s\00e\00\"\00:\00[\000\00.\001\00,\000\00.\002\00,\000\00.\003\00]")
 (data $871 (i32.const 83180) "\\")
 (data $871.1 (i32.const 83192) "\02\00\00\00>\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00t\00a\00r\00g\00e\00t\00P\00h\00a\00s\00e")
 (data $872 (i32.const 83276) "L")
 (data $872.1 (i32.const 83288) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00A\00t\00t\00r\00a\00c\00t\00o\00r\00T\00o\00J\00S\00O\00N\00 \00p\00a\00s\00s\00e\00d")
 (data $873 (i32.const 83356) ",")
 (data $873.1 (i32.const 83368) "\01\00\00\00\18\00\00\00\9a\99\99\99\99\99\b9?\9a\99\99\99\99\99\c9?333333\d3?")
 (data $874 (i32.const 83404) "L")
 (data $874.1 (i32.const 83416) "\02\00\00\008\00\00\00S\00t\00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00s\00y\00m\00b\00o\00l")
 (data $875 (i32.const 83484) "L")
 (data $875.1 (i32.const 83496) "\02\00\00\00<\00\00\00\13\' \00t\00e\00s\00t\00A\00t\00t\00r\00a\00c\00t\00o\00r\00T\00o\00S\00t\00r\00i\00n\00g\00 \00p\00a\00s\00s\00e\00d")
 (data $876 (i32.const 83564) "L")
 (data $876.1 (i32.const 83576) "\02\00\00\00:\00\00\00\n\00A\00l\00l\00 \00R\00e\00s\00o\00L\00a\00n\00g\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $877 (i32.const 83644) "L")
 (data $877.1 (i32.const 83656) "\02\00\00\006\00\00\00\05\' \00R\00e\00s\00o\00L\00a\00n\00g\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $878 (i32.const 83724) "<")
 (data $878.1 (i32.const 83736) "\02\00\00\00,\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00T\00y\00p\00e\00s\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $879 (i32.const 83788) "<")
 (data $879.1 (i32.const 83800) "\02\00\00\00,\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00t\00y\00p\00e\00s\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $880 (i32.const 83852) "L")
 (data $880.1 (i32.const 83864) "\02\00\00\000\00\00\00D\00e\00f\00a\00u\00l\00t\00 \00r\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000")
 (data $881 (i32.const 83932) "L")
 (data $881.1 (i32.const 83944) "\02\00\00\008\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00t\00y\00p\00e\00s\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $882 (i32.const 84012) "L")
 (data $882.1 (i32.const 84024) "\02\00\00\000\00\00\00D\00e\00f\00a\00u\00l\00t\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000")
 (data $883 (i32.const 84092) "<")
 (data $883.1 (i32.const 84104) "\02\00\00\00 \00\00\00R\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003")
 (data $884 (i32.const 84156) "<")
 (data $884.1 (i32.const 84168) "\02\00\00\00 \00\00\00I\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \004")
 (data $885 (i32.const 84220) "\\")
 (data $885.1 (i32.const 84232) "\02\00\00\00>\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $886 (i32.const 84316) "l")
 (data $886.1 (i32.const 84328) "\02\00\00\00R\00\00\00R\00e\00a\00l\00 \00f\00r\00o\00m\00 \00p\00o\00l\00a\00r\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \003")
 (data $887 (i32.const 84428) "l")
 (data $887.1 (i32.const 84440) "\02\00\00\00R\00\00\00I\00m\00a\00g\00 \00f\00r\00o\00m\00 \00p\00o\00l\00a\00r\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \004")
 (data $888 (i32.const 84540) "L")
 (data $888.1 (i32.const 84552) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00F\00r\00o\00m\00P\00o\00l\00a\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $889 (i32.const 84620) "<")
 (data $889.1 (i32.const 84632) "\02\00\00\00(\00\00\00A\00d\00d\00 \00r\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \004")
 (data $890 (i32.const 84684) "<")
 (data $890.1 (i32.const 84696) "\02\00\00\00(\00\00\00A\00d\00d\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \006")
 (data $891 (i32.const 84748) "L")
 (data $891.1 (i32.const 84760) "\02\00\00\00.\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00A\00d\00d\00 \00p\00a\00s\00s\00e\00d")
 (data $892 (i32.const 84828) "L")
 (data $892.1 (i32.const 84840) "\02\00\00\002\00\00\00S\00u\00b\00t\00r\00a\00c\00t\00 \00r\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002")
 (data $893 (i32.const 84908) "L")
 (data $893.1 (i32.const 84920) "\02\00\00\002\00\00\00S\00u\00b\00t\00r\00a\00c\00t\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $894 (i32.const 84988) "L")
 (data $894.1 (i32.const 85000) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00S\00u\00b\00t\00r\00a\00c\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $895 (i32.const 85068) "L")
 (data $895.1 (i32.const 85080) "\02\00\00\004\00\00\00M\00u\00l\00t\00i\00p\00l\00y\00 \00r\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00-\005")
 (data $896 (i32.const 85148) "L")
 (data $896.1 (i32.const 85160) "\02\00\00\004\00\00\00M\00u\00l\00t\00i\00p\00l\00y\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\000")
 (data $897 (i32.const 85228) "L")
 (data $897.1 (i32.const 85240) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00M\00u\00l\00t\00i\00p\00l\00y\00 \00p\00a\00s\00s\00e\00d")
 (data $898 (i32.const 85308) "<")
 (data $898.1 (i32.const 85320) "\02\00\00\00 \00\00\00D\00i\00v\00i\00s\00i\00o\00n\00 \00b\00y\00 \00z\00e\00r\00o")
 (data $899 (i32.const 85372) "<")
 (data $899.1 (i32.const 85384) "\02\00\00\00\"\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00.\00t\00s")
 (data $900 (i32.const 85436) "l")
 (data $900.1 (i32.const 85448) "\02\00\00\00P\00\00\00D\00i\00v\00i\00d\00e\00 \00r\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000\00.\004\004")
 (data $901 (i32.const 85548) "l")
 (data $901.1 (i32.const 85560) "\02\00\00\00P\00\00\00D\00i\00v\00i\00d\00e\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000\00.\000\008")
 (data $902 (i32.const 85660) "L")
 (data $902.1 (i32.const 85672) "\02\00\00\004\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00D\00i\00v\00i\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $903 (i32.const 85740) "l")
 (data $903.1 (i32.const 85752) "\02\00\00\00V\00\00\00D\00i\00v\00 \00a\00l\00i\00a\00s\00 \00r\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000\00.\004\004")
 (data $904 (i32.const 85852) "l")
 (data $904.1 (i32.const 85864) "\02\00\00\00V\00\00\00D\00i\00v\00 \00a\00l\00i\00a\00s\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000\00.\000\008")
 (data $905 (i32.const 85964) "L")
 (data $905.1 (i32.const 85976) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00D\00i\00v\00A\00l\00i\00a\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $906 (i32.const 86044) "<")
 (data $906.1 (i32.const 86056) "\02\00\00\00,\00\00\00S\00c\00a\00l\00e\00 \00r\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \006")
 (data $907 (i32.const 86108) "<")
 (data $907.1 (i32.const 86120) "\02\00\00\00,\00\00\00S\00c\00a\00l\00e\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \008")
 (data $908 (i32.const 86172) "L")
 (data $908.1 (i32.const 86184) "\02\00\00\002\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00S\00c\00a\00l\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $909 (i32.const 86252) "L")
 (data $909.1 (i32.const 86264) "\02\00\00\004\00\00\00C\00o\00n\00j\00u\00g\00a\00t\00e\00 \00r\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003")
 (data $910 (i32.const 86332) "L")
 (data $910.1 (i32.const 86344) "\02\00\00\006\00\00\00C\00o\00n\00j\00u\00g\00a\00t\00e\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00-\004")
 (data $911 (i32.const 86412) "L")
 (data $911.1 (i32.const 86424) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00C\00o\00n\00j\00u\00g\00a\00t\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $912 (i32.const 86492) "<")
 (data $912.1 (i32.const 86504) "\02\00\00\00*\00\00\00M\00a\00g\00n\00i\00t\00u\00d\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $913 (i32.const 86556) "L")
 (data $913.1 (i32.const 86568) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00M\00a\00g\00n\00i\00t\00u\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $914 (i32.const 86636) "L")
 (data $914.1 (i32.const 86648) "\02\00\00\00<\00\00\00M\00a\00g\00n\00i\00t\00u\00d\00e\00 \00s\00q\00u\00a\00r\00e\00d\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002\005")
 (data $915 (i32.const 86716) "\\")
 (data $915.1 (i32.const 86728) "\02\00\00\00H\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00M\00a\00g\00n\00i\00t\00u\00d\00e\00S\00q\00u\00a\00r\00e\00d\00 \00p\00a\00s\00s\00e\00d")
 (data $916 (i32.const 86812) "<")
 (data $916.1 (i32.const 86824) "\02\00\00\00*\00\00\00A\00b\00s\00 \00a\00l\00i\00a\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $917 (i32.const 86876) "L")
 (data $917.1 (i32.const 86888) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00A\00b\00s\00A\00l\00i\00a\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $918 (i32.const 86956) "L")
 (data $918.1 (i32.const 86968) "\02\00\00\00<\00\00\00S\00q\00u\00a\00r\00e\00d\00 \00m\00a\00g\00n\00i\00t\00u\00d\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002\005")
 (data $919 (i32.const 87036) "\\")
 (data $919.1 (i32.const 87048) "\02\00\00\00H\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00S\00q\00u\00a\00r\00e\00d\00M\00a\00g\00n\00i\00t\00u\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $920 (i32.const 87132) "L")
 (data $920.1 (i32.const 87144) "\02\00\00\00:\00\00\00P\00h\00a\00s\00e\00 \00o\00f\00 \00(\000\00,\001\00)\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00P\00I\00/\002")
 (data $921 (i32.const 87212) "L")
 (data $921.1 (i32.const 87224) "\02\00\00\002\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00P\00h\00a\00s\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $922 (i32.const 87292) "\1c")
 (data $922.1 (i32.const 87304) "\02\00\00\00\02\00\00\00+")
 (data $923 (i32.const 87324) "\1c")
 (data $923.1 (i32.const 87336) "\02\00\00\00\02\00\00\00i")
 (data $924 (i32.const 87356) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\10\00\00\00\00\00\00\00\10U\01\00\00\00\00\000U\01")
 (data $925 (i32.const 87404) "\1c\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\0c")
 (data $925.1 (i32.const 87432) "0U\01")
 (data $926 (i32.const 87436) "\1c")
 (data $926.1 (i32.const 87448) "\02\00\00\00\0c\00\00\003\00.\000\000\000\000")
 (data $927 (i32.const 87468) ",")
 (data $927.1 (i32.const 87480) "\02\00\00\00\10\00\00\00+\004\00.\000\000\000\000\00i")
 (data $928 (i32.const 87516) "l")
 (data $928.1 (i32.const 87528) "\02\00\00\00X\00\00\00T\00o\00S\00t\00r\00i\00n\00g\00 \00f\00o\00r\00 \00p\00o\00s\00i\00t\00i\00v\00e\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $929 (i32.const 87628) ",")
 (data $929.1 (i32.const 87640) "\02\00\00\00\10\00\00\00-\004\00.\000\000\000\000\00i")
 (data $930 (i32.const 87676) "l")
 (data $930.1 (i32.const 87688) "\02\00\00\00X\00\00\00T\00o\00S\00t\00r\00i\00n\00g\00 \00f\00o\00r\00 \00n\00e\00g\00a\00t\00i\00v\00e\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $931 (i32.const 87788) "\1c")
 (data $931.1 (i32.const 87800) "\02\00\00\00\0c\00\00\003\00.\001\002\003\000")
 (data $932 (i32.const 87820) ",")
 (data $932.1 (i32.const 87832) "\02\00\00\00\10\00\00\00+\004\00.\005\006\007\000\00i")
 (data $933 (i32.const 87868) "|")
 (data $933.1 (i32.const 87880) "\02\00\00\00d\00\00\00T\00o\00S\00t\00r\00i\00n\00g\00 \00f\00o\00r\00 \00f\00l\00o\00a\00t\00i\00n\00g\00 \00p\00o\00i\00n\00t\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $934 (i32.const 87996) ",")
 (data $934.1 (i32.const 88008) "\02\00\00\00\1c\00\00\000\00.\000\000\000\000\00+\000\00.\000\000\000\000\00i")
 (data $935 (i32.const 88044) "|")
 (data $935.1 (i32.const 88056) "\02\00\00\00d\00\00\00T\00o\00S\00t\00r\00i\00n\00g\00 \00f\00o\00r\00 \00z\00e\00r\00o\00 \00c\00o\00m\00p\00l\00e\00x\00 \00n\00u\00m\00b\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $936 (i32.const 88172) "L")
 (data $936.1 (i32.const 88184) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00T\00o\00S\00t\00r\00i\00n\00g\00 \00p\00a\00s\00s\00e\00d")
 (data $937 (i32.const 88252) "\1c")
 (data $937.1 (i32.const 88264) "\02\00\00\00\08\00\00\00r\00e\00a\00l")
 (data $938 (i32.const 88284) "\1c")
 (data $938.1 (i32.const 88296) "\02\00\00\00\08\00\00\00i\00m\00a\00g")
 (data $939 (i32.const 88316) ",")
 (data $939.1 (i32.const 88328) "\02\00\00\00\10\00\00\00\"\00r\00e\00a\00l\00\"\00:\003")
 (data $940 (i32.const 88364) "L")
 (data $940.1 (i32.const 88376) "\02\00\00\00:\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00r\00e\00a\00l\00 \00p\00a\00r\00t")
 (data $941 (i32.const 88444) ",")
 (data $941.1 (i32.const 88456) "\02\00\00\00\10\00\00\00\"\00i\00m\00a\00g\00\"\00:\004")
 (data $942 (i32.const 88492) "L")
 (data $942.1 (i32.const 88504) "\02\00\00\00:\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00i\00m\00a\00g\00 \00p\00a\00r\00t")
 (data $943 (i32.const 88572) "L")
 (data $943.1 (i32.const 88584) "\02\00\00\004\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00T\00o\00J\00S\00O\00N\00 \00p\00a\00s\00s\00e\00d")
 (data $944 (i32.const 88652) "L")
 (data $944.1 (i32.const 88664) "\02\00\00\004\00\00\00C\00l\00o\00n\00e\00d\00 \00r\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00e")
 (data $945 (i32.const 88732) "L")
 (data $945.1 (i32.const 88744) "\02\00\00\004\00\00\00C\00l\00o\00n\00e\00d\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00e")
 (data $946 (i32.const 88812) "l")
 (data $946.1 (i32.const 88824) "\02\00\00\00T\00\00\00C\00l\00o\00n\00e\00d\00 \00o\00b\00j\00e\00c\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00i\00n\00s\00t\00a\00n\00c\00e")
 (data $947 (i32.const 88924) "L")
 (data $947.1 (i32.const 88936) "\02\00\00\002\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00C\00l\00o\00n\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $948 (i32.const 89004) "\\")
 (data $948.1 (i32.const 89016) "\02\00\00\00D\00\00\00E\00x\00p\00 \00r\00e\00a\00l\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000")
 (data $949 (i32.const 89100) "\\")
 (data $949.1 (i32.const 89112) "\02\00\00\00D\00\00\00E\00x\00p\00 \00i\00m\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \001")
 (data $950 (i32.const 89196) "L")
 (data $950.1 (i32.const 89208) "\02\00\00\00.\00\00\00\13\' \00t\00e\00s\00t\00C\00o\00m\00p\00l\00e\00x\00E\00x\00p\00 \00p\00a\00s\00s\00e\00d")
 (data $951 (i32.const 89276) "\\")
 (data $951.1 (i32.const 89288) "\02\00\00\00B\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00d\00a\00t\00a\00 \00l\00e\00n\00g\00t\00h\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\000")
 (data $952 (i32.const 89372) "L")
 (data $952.1 (i32.const 89384) "\02\00\00\00<\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00e\00n\00t\00r\00o\00p\00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000\00.\005")
 (data $953 (i32.const 89452) "\\")
 (data $953.1 (i32.const 89464) "\02\00\00\00H\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00t\00i\00m\00e\00s\00t\00a\00m\00p\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00o\00r\00r\00e\00c\00t")
 (data $954 (i32.const 89548) "l")
 (data $954.1 (i32.const 89560) "\02\00\00\00V\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00p\00r\00i\00m\00e\00 \00s\00i\00g\00n\00a\00t\00u\00r\00e\00 \00l\00e\00n\00g\00t\00h\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002")
 (data $955 (i32.const 89660) "l")
 (data $955.1 (i32.const 89672) "\02\00\00\00Z\00\00\00\13\' \00t\00e\00s\00t\00R\00e\00s\00o\00n\00a\00n\00t\00F\00r\00a\00g\00m\00e\00n\00t\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00T\00y\00p\00e\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $956 (i32.const 89772) "L")
 (data $956.1 (i32.const 89784) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00P\00r\00o\00t\00o\00c\00o\00l\00T\00y\00p\00e\00E\00n\00u\00m\00 \00p\00a\00s\00s\00e\00d")
 (data $957 (i32.const 89852) "L")
 (data $957.1 (i32.const 89864) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00N\00e\00t\00w\00o\00r\00k\00E\00r\00r\00o\00r\00E\00n\00u\00m\00 \00p\00a\00s\00s\00e\00d")
 (data $958 (i32.const 89932) "L")
 (data $958.1 (i32.const 89944) "\02\00\00\00<\00\00\00\13\' \00t\00e\00s\00t\00P\00r\00o\00t\00o\00c\00o\00l\00E\00r\00r\00o\00r\00E\00n\00u\00m\00 \00p\00a\00s\00s\00e\00d")
 (data $959 (i32.const 90012) "L")
 (data $959.1 (i32.const 90024) "\02\00\00\002\00\00\00S\00o\00u\00r\00c\00e\00 \00I\00D\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00n\00o\00d\00e\00A")
 (data $960 (i32.const 90092) "L")
 (data $960.1 (i32.const 90104) "\02\00\00\002\00\00\00T\00a\00r\00g\00e\00t\00 \00I\00D\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00n\00o\00d\00e\00B")
 (data $961 (i32.const 90172) "<")
 (data $961.1 (i32.const 90184) "\02\00\00\00,\00\00\00S\00t\00r\00e\00n\00g\00t\00h\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000\00.\009")
 (data $962 (i32.const 90236) "L")
 (data $962.1 (i32.const 90248) "\02\00\00\006\00\00\00E\00s\00t\00a\00b\00l\00i\00s\00h\00e\00d\00A\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\000\000")
 (data $963 (i32.const 90316) "<")
 (data $963.1 (i32.const 90328) "\02\00\00\00,\00\00\00L\00a\00s\00t\00S\00y\00n\00c\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002\000\000")
 (data $964 (i32.const 90380) "l")
 (data $964.1 (i32.const 90392) "\02\00\00\00P\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00L\00i\00n\00k\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $965 (i32.const 90492) "\1c")
 (data $965.1 (i32.const 90504) "\02\00\00\00\n\00\00\00n\00o\00d\00e\00X")
 (data $966 (i32.const 90524) "L")
 (data $966.1 (i32.const 90536) "\02\00\00\00.\00\00\00N\00o\00d\00e\00 \00I\00D\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00n\00o\00d\00e\00X")
 (data $967 (i32.const 90604) "L")
 (data $967.1 (i32.const 90616) "\02\00\00\00.\00\00\00C\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000\00.\008")
 (data $968 (i32.const 90684) "<")
 (data $968.1 (i32.const 90696) "\02\00\00\00*\00\00\00E\00n\00t\00r\00o\00p\00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000\00.\001")
 (data $969 (i32.const 90748) "L")
 (data $969.1 (i32.const 90760) "\02\00\00\002\00\00\00M\00e\00m\00o\00r\00y\00 \00u\00s\00a\00g\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005\000")
 (data $970 (i32.const 90828) "L")
 (data $970.1 (i32.const 90840) "\02\00\00\008\00\00\00L\00a\00s\00t\00 \00h\00e\00a\00r\00t\00b\00e\00a\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003\000\000")
 (data $971 (i32.const 90908) "\\")
 (data $971.1 (i32.const 90920) "\02\00\00\00H\00\00\00\13\' \00t\00e\00s\00t\00N\00o\00d\00e\00M\00e\00t\00a\00d\00a\00t\00a\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $972 (i32.const 91004) "L")
 (data $972.1 (i32.const 91016) "\02\00\00\008\00\00\00V\00a\00l\00u\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\00 \00(\001\000\00 \00m\00o\00d\00 \003\00)")
 (data $973 (i32.const 91084) "<")
 (data $973.1 (i32.const 91096) "\02\00\00\00&\00\00\00M\00o\00d\00u\00l\00u\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003")
 (data $974 (i32.const 91148) "\\")
 (data $974.1 (i32.const 91160) "\02\00\00\00H\00\00\00V\00a\00l\00u\00e\00 \00f\00o\00r\00 \00n\00e\00g\00a\00t\00i\00v\00e\00 \00i\00n\00p\00u\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $975 (i32.const 91244) "l")
 (data $975.1 (i32.const 91256) "\02\00\00\00R\00\00\00\13\' \00t\00e\00s\00t\00P\00r\00i\00m\00e\00F\00i\00e\00l\00d\00E\00l\00e\00m\00e\00n\00t\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $976 (i32.const 91356) "<")
 (data $976.1 (i32.const 91368) "\02\00\00\00 \00\00\00M\00o\00d\00u\00l\00u\00s\00 \00m\00i\00s\00m\00a\00t\00c\00h")
 (data $977 (i32.const 91420) "\\")
 (data $977.1 (i32.const 91432) "\02\00\00\00D\00\00\00A\00d\00d\00 \00r\00e\00s\00u\00l\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000\00 \00(\001\00+\002\00 \00m\00o\00d\00 \003\00)")
 (data $978 (i32.const 91516) "\\")
 (data $978.1 (i32.const 91528) "\02\00\00\00B\00\00\00\13\' \00t\00e\00s\00t\00P\00r\00i\00m\00e\00F\00i\00e\00l\00d\00E\00l\00e\00m\00e\00n\00t\00A\00d\00d\00 \00p\00a\00s\00s\00e\00d")
 (data $979 (i32.const 91612) "l")
 (data $979.1 (i32.const 91624) "\02\00\00\00N\00\00\00M\00u\00l\00t\00i\00p\00l\00y\00 \00r\00e\00s\00u\00l\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\00 \00(\002\00*\003\00 \00m\00o\00d\00 \005\00)")
 (data $980 (i32.const 91724) "\\")
 (data $980.1 (i32.const 91736) "\02\00\00\00L\00\00\00\13\' \00t\00e\00s\00t\00P\00r\00i\00m\00e\00F\00i\00e\00l\00d\00E\00l\00e\00m\00e\00n\00t\00M\00u\00l\00t\00i\00p\00l\00y\00 \00p\00a\00s\00s\00e\00d")
 (data $981 (i32.const 91820) "\\")
 (data $981.1 (i32.const 91832) "\02\00\00\00H\00\00\00P\00o\00w\00e\00r\00 \00r\00e\00s\00u\00l\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003\00 \00(\002\00^\003\00 \00m\00o\00d\00 \005\00)")
 (data $982 (i32.const 91916) "\\")
 (data $982.1 (i32.const 91928) "\02\00\00\00F\00\00\00\13\' \00t\00e\00s\00t\00P\00r\00i\00m\00e\00F\00i\00e\00l\00d\00E\00l\00e\00m\00e\00n\00t\00P\00o\00w\00e\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $983 (i32.const 92012) "<")
 (data $983.1 (i32.const 92024) "\02\00\00\00,\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00h\00a\00s\00 \00n\00o\00 \00i\00n\00v\00e\00r\00s\00e")
 (data $984 (i32.const 92076) "L")
 (data $984.1 (i32.const 92088) "\02\00\00\004\00\00\00I\00n\00v\00e\00r\00s\00e\00 \00r\00e\00s\00u\00l\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \005")
 (data $985 (i32.const 92156) "\\")
 (data $985.1 (i32.const 92168) "\02\00\00\00J\00\00\00\13\' \00t\00e\00s\00t\00P\00r\00i\00m\00e\00F\00i\00e\00l\00d\00E\00l\00e\00m\00e\00n\00t\00I\00n\00v\00e\00r\00s\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $986 (i32.const 92252) "L")
 (data $986.1 (i32.const 92264) "\02\00\00\004\00\00\00\n\00A\00l\00l\00 \00t\00y\00p\00e\00s\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $987 (i32.const 92332) "L")
 (data $987.1 (i32.const 92344) "\02\00\00\000\00\00\00\05\' \00T\00y\00p\00e\00s\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $988 (i32.const 92412) "L")
 (data $988.1 (i32.const 92424) "\02\00\00\000\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00R\00u\00n\00t\00i\00m\00e\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $989 (i32.const 92492) "L")
 (data $989.1 (i32.const 92504) "\02\00\00\000\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00r\00u\00n\00t\00i\00m\00e\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $990 (i32.const 92572) "L")
 (data $990.1 (i32.const 92584) "\02\00\00\00:\00\00\00C\00o\00n\00t\00e\00x\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d")
 (data $991 (i32.const 92652) "L")
 (data $991.1 (i32.const 92664) "\02\00\00\00<\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00r\00u\00n\00t\00i\00m\00e\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $992 (i32.const 92732) "\\")
 (data $992.1 (i32.const 92744) "\02\00\00\00F\00\00\00S\00t\00a\00c\00k\00 \00m\00a\00n\00a\00g\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d")
 (data $993 (i32.const 92828) "l")
 (data $993.1 (i32.const 92840) "\02\00\00\00T\00\00\00C\00o\00n\00t\00r\00o\00l\00 \00f\00l\00o\00w\00 \00m\00a\00n\00a\00g\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d")
 (data $994 (i32.const 92940) "\\")
 (data $994.1 (i32.const 92952) "\02\00\00\00D\00\00\00\13\' \00t\00e\00s\00t\00R\00I\00S\00A\00E\00n\00g\00i\00n\00e\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $995 (i32.const 93036) "\1c")
 (data $995.1 (i32.const 93048) "\01")
 (data $996 (i32.const 93068) "\\")
 (data $996.1 (i32.const 93080) "\02\00\00\00F\00\00\00I\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00 \00p\00o\00i\00n\00t\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00r\00e\00s\00e\00t")
 (data $997 (i32.const 93164) "l")
 (data $997.1 (i32.const 93176) "\02\00\00\00P\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00f\00l\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00f\00a\00l\00s\00e\00 \00a\00f\00t\00e\00r\00 \00r\00e\00s\00e\00t")
 (data $998 (i32.const 93276) "\\")
 (data $998.1 (i32.const 93288) "\02\00\00\00J\00\00\00I\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00s\00 \00e\00x\00e\00c\00u\00t\00e\00d\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00r\00e\00s\00e\00t")
 (data $999 (i32.const 93372) "L")
 (data $999.1 (i32.const 93384) "\02\00\00\004\00\00\00R\00e\00s\00e\00t\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00s\00e\00t\00 \00c\00o\00n\00t\00e\00x\00t")
 (data $1000 (i32.const 93452) "l")
 (data $1000.1 (i32.const 93464) "\02\00\00\00T\00\00\00\13\' \00t\00e\00s\00t\00R\00I\00S\00A\00E\00n\00g\00i\00n\00e\00L\00o\00a\00d\00P\00r\00o\00g\00r\00a\00m\00A\00n\00d\00R\00e\00s\00e\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $1001 (i32.const 93564) "\1c")
 (data $1001.1 (i32.const 93576) "\01")
 (data $1002 (i32.const 93596) "L")
 (data $1002.1 (i32.const 93608) "\02\00\00\00<\00\00\00E\00x\00e\00c\00u\00t\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00u\00c\00c\00e\00s\00s\00f\00u\00l")
 (data $1003 (i32.const 93676) "\1c")
 (data $1003.1 (i32.const 93688) "\02\00\00\00\0c\00\00\00r\00e\00s\00u\00l\00t")
 (data $1004 (i32.const 93708) "L")
 (data $1004.1 (i32.const 93720) "\02\00\00\008\00\00\00R\00e\00s\00u\00l\00t\00 \00r\00e\00g\00i\00s\00t\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003\000")
 (data $1005 (i32.const 93788) "\\")
 (data $1005.1 (i32.const 93800) "\02\00\00\00F\00\00\00T\00w\00o\00 \00i\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00x\00e\00c\00u\00t\00e\00d")
 (data $1006 (i32.const 93884) "l")
 (data $1006.1 (i32.const 93896) "\02\00\00\00V\00\00\00\13\' \00t\00e\00s\00t\00R\00I\00S\00A\00E\00n\00g\00i\00n\00e\00E\00x\00e\00c\00u\00t\00e\00S\00i\00m\00p\00l\00e\00P\00r\00o\00g\00r\00a\00m\00 \00p\00a\00s\00s\00e\00d")
 (data $1007 (i32.const 93996) "\1c")
 (data $1007.1 (i32.const 94008) "\01")
 (data $1008 (i32.const 94028) "L")
 (data $1008.1 (i32.const 94040) "\02\00\00\000\00\00\00H\00a\00l\00t\00 \00f\00l\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00t\00r\00u\00e")
 (data $1009 (i32.const 94108) "\\")
 (data $1009.1 (i32.const 94120) "\02\00\00\00D\00\00\00O\00n\00e\00 \00i\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00x\00e\00c\00u\00t\00e\00d")
 (data $1010 (i32.const 94204) "\\")
 (data $1010.1 (i32.const 94216) "\02\00\00\00D\00\00\00\13\' \00t\00e\00s\00t\00R\00I\00S\00A\00E\00n\00g\00i\00n\00e\00E\00x\00e\00c\00u\00t\00e\00H\00a\00l\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $1011 (i32.const 94300) "\1c")
 (data $1011.1 (i32.const 94312) "\01")
 (data $1012 (i32.const 94332) "\\")
 (data $1012.1 (i32.const 94344) "\02\00\00\00D\00\00\00F\00i\00r\00s\00t\00 \00s\00t\00e\00p\00 \00s\00h\00o\00u\00l\00d\00 \00e\00x\00e\00c\00u\00t\00e\00 \00M\00O\00C\00K\00_\00A\00D\00D")
 (data $1013 (i32.const 94428) "\\")
 (data $1013.1 (i32.const 94440) "\02\00\00\00D\00\00\00I\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00 \00p\00o\00i\00n\00t\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00a\00d\00v\00a\00n\00c\00e")
 (data $1014 (i32.const 94524) "\\")
 (data $1014.1 (i32.const 94536) "\02\00\00\00>\00\00\00S\00e\00c\00o\00n\00d\00 \00s\00t\00e\00p\00 \00s\00h\00o\00u\00l\00d\00 \00e\00x\00e\00c\00u\00t\00e\00 \00H\00A\00L\00T")
 (data $1015 (i32.const 94620) "L")
 (data $1015.1 (i32.const 94632) "\02\00\00\008\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00f\00l\00a\00g\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00f\00a\00l\00s\00e")
 (data $1016 (i32.const 94700) "L")
 (data $1016.1 (i32.const 94712) "\02\00\00\006\00\00\00\13\' \00t\00e\00s\00t\00R\00I\00S\00A\00E\00n\00g\00i\00n\00e\00S\00t\00e\00p\00 \00p\00a\00s\00s\00e\00d")
 (data $1017 (i32.const 94780) "\1c")
 (data $1017.1 (i32.const 94792) "\02\00\00\00\n\00\00\00m\00y\00V\00a\00r")
 (data $1018 (i32.const 94812) "<")
 (data $1018.1 (i32.const 94824) "\02\00\00\00&\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00r\00u\00n\00t\00i\00m\00e\00.\00t\00s")
 (data $1019 (i32.const 94876) "<")
 (data $1019.1 (i32.const 94888) "\02\00\00\00$\00\00\00P\00a\00r\00s\00e\00 \00i\00n\00t\00 \00a\00r\00g\00u\00m\00e\00n\00t")
 (data $1020 (i32.const 94940) "<")
 (data $1020.1 (i32.const 94952) "\02\00\00\00(\00\00\00P\00a\00r\00s\00e\00 \00f\00l\00o\00a\00t\00 \00a\00r\00g\00u\00m\00e\00n\00t")
 (data $1021 (i32.const 95004) "L")
 (data $1021.1 (i32.const 95016) "\02\00\00\00<\00\00\00P\00a\00r\00s\00e\00 \00s\00t\00r\00i\00n\00g\00 \00r\00e\00g\00i\00s\00t\00e\00r\00 \00a\00r\00g\00u\00m\00e\00n\00t")
 (data $1022 (i32.const 95084) "\1c")
 (data $1022.1 (i32.const 95096) "\02\00\00\00\08\00\00\007\008\00.\009")
 (data $1023 (i32.const 95116) "L")
 (data $1023.1 (i32.const 95128) "\02\00\00\006\00\00\00P\00a\00r\00s\00e\00 \00s\00t\00r\00i\00n\00g\00 \00f\00l\00o\00a\00t\00 \00a\00r\00g\00u\00m\00e\00n\00t")
 (data $1024 (i32.const 95196) ",")
 (data $1024.1 (i32.const 95208) "\02\00\00\00\0e\00\00\00i\00n\00v\00a\00l\00i\00d")
 (data $1025 (i32.const 95244) "L")
 (data $1025.1 (i32.const 95256) "\02\00\00\00:\00\00\00P\00a\00r\00s\00e\00 \00i\00n\00v\00a\00l\00i\00d\00 \00s\00t\00r\00i\00n\00g\00 \00a\00r\00g\00u\00m\00e\00n\00t")
 (data $1026 (i32.const 95324) "\\")
 (data $1026.1 (i32.const 95336) "\02\00\00\00B\00\00\00\13\' \00t\00e\00s\00t\00R\00I\00S\00A\00E\00n\00g\00i\00n\00e\00P\00a\00r\00s\00e\00V\00a\00l\00u\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1027 (i32.const 95420) "<")
 (data $1027.1 (i32.const 95432) "\02\00\00\00\"\00\00\00P\00a\00r\00s\00e\00 \00v\00a\00l\00i\00d\00 \00p\00r\00i\00m\00e")
 (data $1028 (i32.const 95484) "\1c")
 (data $1028.1 (i32.const 95496) "\02\00\00\00\04\00\00\001\003")
 (data $1029 (i32.const 95516) "L")
 (data $1029.1 (i32.const 95528) "\02\00\00\00:\00\00\00P\00a\00r\00s\00e\00 \00v\00a\00l\00i\00d\00 \00p\00r\00i\00m\00e\00 \00f\00r\00o\00m\00 \00s\00t\00r\00i\00n\00g")
 (data $1030 (i32.const 95596) "\\")
 (data $1030.1 (i32.const 95608) "\02\00\00\00>\00\00\00P\00a\00r\00s\00e\00 \00n\00o\00n\00-\00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \000")
 (data $1031 (i32.const 95692) "L")
 (data $1031.1 (i32.const 95704) "\02\00\00\00.\00\00\00P\00a\00r\00s\00e\00 \001\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \000")
 (data $1032 (i32.const 95772) "\\")
 (data $1032.1 (i32.const 95784) "\02\00\00\00H\00\00\00P\00a\00r\00s\00e\00 \00i\00n\00v\00a\00l\00i\00d\00 \00s\00t\00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \000")
 (data $1033 (i32.const 95868) "\\")
 (data $1033.1 (i32.const 95880) "\02\00\00\00B\00\00\00\13\' \00t\00e\00s\00t\00R\00I\00S\00A\00E\00n\00g\00i\00n\00e\00P\00a\00r\00s\00e\00P\00r\00i\00m\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1034 (i32.const 95964) "L")
 (data $1034.1 (i32.const 95976) "\02\00\00\00<\00\00\00\13\' \00t\00e\00s\00t\00R\00I\00S\00A\00E\00n\00g\00i\00n\00e\00I\00s\00P\00r\00i\00m\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1035 (i32.const 96044) "L")
 (data $1035.1 (i32.const 96056) "\02\00\00\002\00\00\00S\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00G\00l\00o\00b\00a\00l\00S\00t\00a\00t\00e")
 (data $1036 (i32.const 96124) "L")
 (data $1036.1 (i32.const 96136) "\02\00\00\00<\00\00\00S\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00P\00r\00i\00m\00e\00S\00t\00a\00t\00e\00E\00n\00g\00i\00n\00e")
 (data $1037 (i32.const 96204) "L")
 (data $1037.1 (i32.const 96216) "\02\00\00\006\00\00\00S\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00R\00e\00g\00i\00s\00t\00e\00r\00S\00t\00a\00t\00e")
 (data $1038 (i32.const 96284) "\\")
 (data $1038.1 (i32.const 96296) "\02\00\00\00>\00\00\00S\00h\00o\00u\00l\00d\00 \00r\00e\00t\00u\00r\00n\00 \00H\00o\00l\00o\00g\00r\00a\00p\00h\00i\00c\00M\00e\00m\00o\00r\00y")
 (data $1039 (i32.const 96380) "L")
 (data $1039.1 (i32.const 96392) "\02\00\00\00<\00\00\00\13\' \00t\00e\00s\00t\00R\00I\00S\00A\00E\00n\00g\00i\00n\00e\00G\00e\00t\00t\00e\00r\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $1040 (i32.const 96460) ",")
 (data $1040.1 (i32.const 96472) "\02\00\00\00\18\00\00\00t\00a\00r\00g\00e\00t\00_\00l\00a\00b\00e\00l")
 (data $1041 (i32.const 96508) "\1c")
 (data $1041.1 (i32.const 96520) "\01")
 (data $1042 (i32.const 96540) "l")
 (data $1042.1 (i32.const 96552) "\02\00\00\00P\00\00\00J\00u\00m\00p\00 \00s\00h\00o\00u\00l\00d\00 \00e\00x\00e\00c\00u\00t\00e\00 \00c\00o\00r\00r\00e\00c\00t\00 \00i\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00s")
 (data $1043 (i32.const 96652) "\\")
 (data $1043.1 (i32.const 96664) "\02\00\00\00J\00\00\00I\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00 \00p\00o\00i\00n\00t\00e\00r\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00t\00 \00H\00A\00L\00T")
 (data $1044 (i32.const 96748) "\\")
 (data $1044.1 (i32.const 96760) "\02\00\00\00L\00\00\00\13\' \00t\00e\00s\00t\00R\00I\00S\00A\00E\00n\00g\00i\00n\00e\00J\00u\00m\00p\00I\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00 \00p\00a\00s\00s\00e\00d")
 (data $1045 (i32.const 96844) "L")
 (data $1045.1 (i32.const 96856) "\02\00\00\008\00\00\00\n\00A\00l\00l\00 \00r\00u\00n\00t\00i\00m\00e\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $1046 (i32.const 96924) "L")
 (data $1046.1 (i32.const 96936) "\02\00\00\004\00\00\00\05\' \00R\00u\00n\00t\00i\00m\00e\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $1047 (i32.const 97004) "|")
 (data $1047.1 (i32.const 97016) "\02\00\00\00d\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00Q\00u\00a\00n\00t\00u\00m\00 \00O\00p\00e\00r\00a\00t\00i\00o\00n\00s\00 \00I\00m\00p\00l\00e\00m\00e\00n\00t\00a\00t\00i\00o\00n\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $1048 (i32.const 97132) "|")
 (data $1048.1 (i32.const 97144) "\02\00\00\00d\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00q\00u\00a\00n\00t\00u\00m\00 \00o\00p\00e\00r\00a\00t\00i\00o\00n\00s\00 \00i\00m\00p\00l\00e\00m\00e\00n\00t\00a\00t\00i\00o\00n\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $1049 (i32.const 97260) "\1c")
 (data $1049.1 (i32.const 97272) "\01")
 (data $1050 (i32.const 97292) "\1c")
 (data $1050.1 (i32.const 97304) "\01")
 (data $1051 (i32.const 97324) "\1c")
 (data $1051.1 (i32.const 97336) "\01")
 (data $1052 (i32.const 97356) "\1c")
 (data $1052.1 (i32.const 97368) "\01")
 (data $1053 (i32.const 97388) "\\")
 (data $1053.1 (i32.const 97400) "\02\00\00\00H\00\00\00S\00u\00p\00e\00r\00p\00o\00s\00e\00d\00 \00s\00t\00a\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00p\00r\00i\00m\00e\00 \002")
 (data $1054 (i32.const 97484) "l")
 (data $1054.1 (i32.const 97496) "\02\00\00\00N\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00q\00u\00a\00n\00t\00u\00m\00-\00o\00p\00s\00-\00i\00m\00p\00l\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $1055 (i32.const 97596) "\\")
 (data $1055.1 (i32.const 97608) "\02\00\00\00H\00\00\00S\00u\00p\00e\00r\00p\00o\00s\00e\00d\00 \00s\00t\00a\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00p\00r\00i\00m\00e\00 \003")
 (data $1056 (i32.const 97692) "\\")
 (data $1056.1 (i32.const 97704) "\02\00\00\00H\00\00\00S\00u\00p\00e\00r\00p\00o\00s\00e\00d\00 \00s\00t\00a\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00p\00r\00i\00m\00e\00 \005")
 (data $1057 (i32.const 97788) "\\")
 (data $1057.1 (i32.const 97800) "\02\00\00\00J\00\00\00S\00u\00p\00e\00r\00p\00o\00s\00e\00d\00 \00s\00t\00a\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00n\00o\00r\00m\00a\00l\00i\00z\00e\00d")
 (data $1058 (i32.const 97884) "\\")
 (data $1058.1 (i32.const 97896) "\02\00\00\00>\00\00\00\13\' \00t\00e\00s\00t\00S\00u\00p\00e\00r\00p\00o\00s\00e\00O\00p\00e\00r\00a\00t\00i\00o\00n\00 \00p\00a\00s\00s\00e\00d")
 (data $1059 (i32.const 97980) "L")
 (data $1059.1 (i32.const 97992) "\02\00\00\008\00\00\00M\00e\00a\00s\00u\00r\00e\00d\00 \00a\00n\00 \00u\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00p\00r\00i\00m\00e")
 (data $1060 (i32.const 98060) "l")
 (data $1060.1 (i32.const 98072) "\02\00\00\00P\00\00\00P\00r\00i\00m\00e\00 \002\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00m\00e\00a\00s\00u\00r\00e\00d\00 \00a\00t\00 \00l\00e\00a\00s\00t\00 \00o\00n\00c\00e")
 (data $1061 (i32.const 98172) "l")
 (data $1061.1 (i32.const 98184) "\02\00\00\00P\00\00\00P\00r\00i\00m\00e\00 \003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00m\00e\00a\00s\00u\00r\00e\00d\00 \00a\00t\00 \00l\00e\00a\00s\00t\00 \00o\00n\00c\00e")
 (data $1062 (i32.const 98284) "L")
 (data $1062.1 (i32.const 98296) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00M\00e\00a\00s\00u\00r\00e\00O\00p\00e\00r\00a\00t\00i\00o\00n\00 \00p\00a\00s\00s\00e\00d")
 (data $1063 (i32.const 98364) "\9c")
 (data $1063.1 (i32.const 98376) "\02\00\00\00\84\00\00\00C\00o\00l\00l\00a\00p\00s\00e\00d\00 \00s\00t\00a\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00o\00n\00l\00y\00 \00o\00n\00e\00 \00p\00r\00i\00m\00e\00 \00w\00i\00t\00h\00 \00n\00o\00n\00-\00z\00e\00r\00o\00 \00a\00m\00p\00l\00i\00t\00u\00d\00e")
 (data $1064 (i32.const 98524) "|")
 (data $1064.1 (i32.const 98536) "\02\00\00\00d\00\00\00C\00o\00l\00l\00a\00p\00s\00e\00d\00 \00s\00t\00a\00t\00e\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00t\00h\00e\00 \00c\00o\00l\00l\00a\00p\00s\00e\00d\00 \00p\00r\00i\00m\00e")
 (data $1065 (i32.const 98652) "l")
 (data $1065.1 (i32.const 98664) "\02\00\00\00T\00\00\00A\00m\00p\00l\00i\00t\00u\00d\00e\00 \00o\00f\00 \00c\00o\00l\00l\00a\00p\00s\00e\00d\00 \00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\00.\000")
 (data $1066 (i32.const 98764) "|")
 (data $1066.1 (i32.const 98776) "\02\00\00\00l\00\00\00\n\00A\00l\00l\00 \00q\00u\00a\00n\00t\00u\00m\00 \00o\00p\00e\00r\00a\00t\00i\00o\00n\00s\00 \00i\00m\00p\00l\00e\00m\00e\00n\00t\00a\00t\00i\00o\00n\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $1067 (i32.const 98892) "|")
 (data $1067.1 (i32.const 98904) "\02\00\00\00h\00\00\00\05\' \00Q\00u\00a\00n\00t\00u\00m\00 \00O\00p\00e\00r\00a\00t\00i\00o\00n\00s\00 \00I\00m\00p\00l\00e\00m\00e\00n\00t\00a\00t\00i\00o\00n\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $1068 (i32.const 99020) "l")
 (data $1068.1 (i32.const 99032) "\02\00\00\00P\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00E\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $1069 (i32.const 99132) "l")
 (data $1069.1 (i32.const 99144) "\02\00\00\00P\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00e\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $1070 (i32.const 99244) "L")
 (data $1070.1 (i32.const 99256) "\02\00\00\004\00\00\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \001\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00e\00t")
 (data $1071 (i32.const 99324) "l")
 (data $1071.1 (i32.const 99336) "\02\00\00\00\\\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00-\00e\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $1072 (i32.const 99436) "L")
 (data $1072.1 (i32.const 99448) "\02\00\00\004\00\00\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \002\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00e\00t")
 (data $1073 (i32.const 99516) "|")
 (data $1073.1 (i32.const 99528) "\02\00\00\00^\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00P\00a\00i\00r\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $1074 (i32.const 99644) "L")
 (data $1074.1 (i32.const 99656) "\02\00\00\004\00\00\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \001\00 \00s\00h\00o\00u\00l\00d\00 \00e\00v\00o\00l\00v\00e")
 (data $1075 (i32.const 99724) "L")
 (data $1075.1 (i32.const 99736) "\02\00\00\004\00\00\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \002\00 \00s\00h\00o\00u\00l\00d\00 \00e\00v\00o\00l\00v\00e")
 (data $1076 (i32.const 99804) "l")
 (data $1076.1 (i32.const 99816) "\02\00\00\00T\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00P\00a\00i\00r\00E\00v\00o\00l\00v\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1077 (i32.const 99916) "l")
 (data $1077.1 (i32.const 99928) "\02\00\00\00R\00\00\00F\00i\00d\00e\00l\00i\00t\00y\00 \00o\00f\00 \00i\00d\00e\00n\00t\00i\00c\00a\00l\00 \00p\00a\00i\00r\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\00.\000")
 (data $1078 (i32.const 100028) "l")
 (data $1078.1 (i32.const 100040) "\02\00\00\00T\00\00\00F\00i\00d\00e\00l\00i\00t\00y\00 \00o\00f\00 \00o\00r\00t\00h\00o\00g\00o\00n\00a\00l\00 \00p\00a\00i\00r\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000\00.\000")
 (data $1079 (i32.const 100140) "|")
 (data $1079.1 (i32.const 100152) "\02\00\00\00f\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00P\00a\00i\00r\00C\00o\00m\00p\00u\00t\00e\00F\00i\00d\00e\00l\00i\00t\00y\00 \00p\00a\00s\00s\00e\00d")
 (data $1080 (i32.const 100268) "\8c")
 (data $1080.1 (i32.const 100280) "\02\00\00\00n\00\00\00F\00i\00d\00e\00l\00i\00t\00y\00 \00s\00h\00o\00u\00l\00d\00 \00i\00m\00p\00r\00o\00v\00e\00 \00o\00r\00 \00s\00t\00a\00y\00 \00s\00a\00m\00e\00 \00a\00f\00t\00e\00r\00 \00o\00p\00t\00i\00m\00i\00z\00a\00t\00i\00o\00n")
 (data $1081 (i32.const 100412) "\8c")
 (data $1081.1 (i32.const 100424) "\02\00\00\00p\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00a\00n\00g\00l\00e\00d\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00P\00a\00i\00r\00O\00p\00t\00i\00m\00i\00z\00e\00E\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $1082 (i32.const 100556) "l")
 (data $1082.1 (i32.const 100568) "\02\00\00\00X\00\00\00\n\00A\00l\00l\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00e\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $1083 (i32.const 100668) "l")
 (data $1083.1 (i32.const 100680) "\02\00\00\00T\00\00\00\05\' \00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00E\00n\00t\00a\00n\00g\00l\00e\00m\00e\00n\00t\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $1084 (i32.const 100780) "L")
 (data $1084.1 (i32.const 100792) "\02\00\00\006\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $1085 (i32.const 100860) "L")
 (data $1085.1 (i32.const 100872) "\02\00\00\006\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $1086 (i32.const 100940) "L")
 (data $1086.1 (i32.const 100952) "\02\00\00\00.\00\00\00w\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $1087 (i32.const 101020) "\\")
 (data $1087.1 (i32.const 101032) "\02\00\00\00B\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $1088 (i32.const 101116) "L")
 (data $1088.1 (i32.const 101128) "\02\00\00\00.\00\00\00x\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002")
 (data $1089 (i32.const 101196) "L")
 (data $1089.1 (i32.const 101208) "\02\00\00\00.\00\00\00y\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003")
 (data $1090 (i32.const 101276) "L")
 (data $1090.1 (i32.const 101288) "\02\00\00\00.\00\00\00z\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \004")
 (data $1091 (i32.const 101356) "\\")
 (data $1091.1 (i32.const 101368) "\02\00\00\00D\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $1092 (i32.const 101452) "\\")
 (data $1092.1 (i32.const 101464) "\02\00\00\00D\00\00\00M\00u\00l\00t\00i\00p\00l\00y\00 \00w\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00-\006\000")
 (data $1093 (i32.const 101548) "\\")
 (data $1093.1 (i32.const 101560) "\02\00\00\00B\00\00\00M\00u\00l\00t\00i\00p\00l\00y\00 \00x\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\002")
 (data $1094 (i32.const 101644) "\\")
 (data $1094.1 (i32.const 101656) "\02\00\00\00B\00\00\00M\00u\00l\00t\00i\00p\00l\00y\00 \00y\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \003\000")
 (data $1095 (i32.const 101740) "\\")
 (data $1095.1 (i32.const 101752) "\02\00\00\00B\00\00\00M\00u\00l\00t\00i\00p\00l\00y\00 \00z\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002\004")
 (data $1096 (i32.const 101836) "\\")
 (data $1096.1 (i32.const 101848) "\02\00\00\00>\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00M\00u\00l\00t\00i\00p\00l\00y\00 \00p\00a\00s\00s\00e\00d")
 (data $1097 (i32.const 101932) "\\")
 (data $1097.1 (i32.const 101944) "\02\00\00\00B\00\00\00C\00o\00n\00j\00u\00g\00a\00t\00e\00 \00w\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $1098 (i32.const 102028) "\\")
 (data $1098.1 (i32.const 102040) "\02\00\00\00D\00\00\00C\00o\00n\00j\00u\00g\00a\00t\00e\00 \00x\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00-\002")
 (data $1099 (i32.const 102124) "\\")
 (data $1099.1 (i32.const 102136) "\02\00\00\00D\00\00\00C\00o\00n\00j\00u\00g\00a\00t\00e\00 \00y\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00-\003")
 (data $1100 (i32.const 102220) "\\")
 (data $1100.1 (i32.const 102232) "\02\00\00\00D\00\00\00C\00o\00n\00j\00u\00g\00a\00t\00e\00 \00z\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00-\004")
 (data $1101 (i32.const 102316) "L")
 (data $1101.1 (i32.const 102328) "\02\00\00\006\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00N\00o\00r\00m\00 \00p\00a\00s\00s\00e\00d")
 (data $1102 (i32.const 102396) "l")
 (data $1102.1 (i32.const 102408) "\02\00\00\00P\00\00\00N\00o\00r\00m\00a\00l\00i\00z\00e\00d\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00n\00o\00r\00m\00 \001")
 (data $1103 (i32.const 102508) "\\")
 (data $1103.1 (i32.const 102520) "\02\00\00\00@\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00N\00o\00r\00m\00a\00l\00i\00z\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1104 (i32.const 102604) "<")
 (data $1104.1 (i32.const 102616) "\02\00\00\00&\00\00\00B\00l\00o\00c\00h\00 \00x\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000")
 (data $1105 (i32.const 102668) "<")
 (data $1105.1 (i32.const 102680) "\02\00\00\00&\00\00\00B\00l\00o\00c\00h\00 \00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000")
 (data $1106 (i32.const 102732) "<")
 (data $1106.1 (i32.const 102744) "\02\00\00\00&\00\00\00B\00l\00o\00c\00h\00 \00z\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000")
 (data $1107 (i32.const 102796) "L")
 (data $1107.1 (i32.const 102808) "\02\00\00\00<\00\00\00B\00l\00o\00c\00h\00 \00x\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\00 \00f\00o\00r\00 \00p\00u\00r\00e\00 \00i")
 (data $1108 (i32.const 102876) "\\")
 (data $1108.1 (i32.const 102888) "\02\00\00\00H\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00T\00o\00B\00l\00o\00c\00h\00V\00e\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $1109 (i32.const 102972) "l")
 (data $1109.1 (i32.const 102984) "\02\00\00\00R\00\00\00E\00x\00p\00 \00w\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000")
 (data $1110 (i32.const 103084) "l")
 (data $1110.1 (i32.const 103096) "\02\00\00\00R\00\00\00E\00x\00p\00 \00x\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \001")
 (data $1111 (i32.const 103196) "l")
 (data $1111.1 (i32.const 103208) "\02\00\00\00R\00\00\00E\00x\00p\00 \00y\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000")
 (data $1112 (i32.const 103308) "l")
 (data $1112.1 (i32.const 103320) "\02\00\00\00R\00\00\00E\00x\00p\00 \00z\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000")
 (data $1113 (i32.const 103420) "L")
 (data $1113.1 (i32.const 103432) "\02\00\00\004\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00E\00x\00p\00 \00p\00a\00s\00s\00e\00d")
 (data $1114 (i32.const 103500) "\\")
 (data $1114.1 (i32.const 103512) "\02\00\00\00F\00\00\00R\00o\00t\00a\00t\00e\00d\00 \00w\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000")
 (data $1115 (i32.const 103596) "\\")
 (data $1115.1 (i32.const 103608) "\02\00\00\00F\00\00\00R\00o\00t\00a\00t\00e\00d\00 \00x\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \001")
 (data $1116 (i32.const 103692) "\\")
 (data $1116.1 (i32.const 103704) "\02\00\00\00F\00\00\00R\00o\00t\00a\00t\00e\00d\00 \00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000")
 (data $1117 (i32.const 103788) "\\")
 (data $1117.1 (i32.const 103800) "\02\00\00\00F\00\00\00R\00o\00t\00a\00t\00e\00d\00 \00z\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00i\00m\00a\00t\00e\00l\00y\00 \000")
 (data $1118 (i32.const 103884) "L")
 (data $1118.1 (i32.const 103896) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00R\00o\00t\00a\00t\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1119 (i32.const 103964) "\1c")
 (data $1119.1 (i32.const 103976) "\02\00\00\00\02\00\00\00w")
 (data $1120 (i32.const 103996) "\1c")
 (data $1120.1 (i32.const 104008) "\02\00\00\00\02\00\00\00x")
 (data $1121 (i32.const 104028) "\1c")
 (data $1121.1 (i32.const 104040) "\02\00\00\00\02\00\00\00y")
 (data $1122 (i32.const 104060) "\1c")
 (data $1122.1 (i32.const 104072) "\02\00\00\00\02\00\00\00z")
 (data $1123 (i32.const 104092) "\1c")
 (data $1123.1 (i32.const 104104) "\02\00\00\00\n\00\00\00\"\00w\00\"\00:\001")
 (data $1124 (i32.const 104124) "<")
 (data $1124.1 (i32.const 104136) "\02\00\00\00*\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00w")
 (data $1125 (i32.const 104188) "\1c")
 (data $1125.1 (i32.const 104200) "\02\00\00\00\n\00\00\00\"\00x\00\"\00:\002")
 (data $1126 (i32.const 104220) "<")
 (data $1126.1 (i32.const 104232) "\02\00\00\00*\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00x")
 (data $1127 (i32.const 104284) "\1c")
 (data $1127.1 (i32.const 104296) "\02\00\00\00\n\00\00\00\"\00y\00\"\00:\003")
 (data $1128 (i32.const 104316) "<")
 (data $1128.1 (i32.const 104328) "\02\00\00\00*\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00y")
 (data $1129 (i32.const 104380) "\1c")
 (data $1129.1 (i32.const 104392) "\02\00\00\00\n\00\00\00\"\00z\00\"\00:\004")
 (data $1130 (i32.const 104412) "<")
 (data $1130.1 (i32.const 104424) "\02\00\00\00*\00\00\00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00z")
 (data $1131 (i32.const 104476) "L")
 (data $1131.1 (i32.const 104488) "\02\00\00\00:\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00T\00o\00J\00S\00O\00N\00 \00p\00a\00s\00s\00e\00d")
 (data $1132 (i32.const 104556) "\1c")
 (data $1132.1 (i32.const 104568) "\02\00\00\00\02\00\00\00(")
 (data $1133 (i32.const 104588) "\1c")
 (data $1133.1 (i32.const 104600) "\02\00\00\00\02\00\00\00j")
 (data $1134 (i32.const 104620) "\1c")
 (data $1134.1 (i32.const 104632) "\02\00\00\00\04\00\00\00k\00)")
 (data $1135 (i32.const 104652) "<\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00 \00\00\00\80\98\01")
 (data $1135.1 (i32.const 104684) "0U\01\00\00\00\00\00\a0\98\01\00\00\00\00\00\c0\98\01")
 (data $1136 (i32.const 104716) "\1c")
 (data $1136.1 (i32.const 104728) "\02\00\00\00\06\00\00\001\00.\000")
 (data $1137 (i32.const 104748) "\1c")
 (data $1137.1 (i32.const 104760) "\02\00\00\00\n\00\00\00+\002\00.\000\00i")
 (data $1138 (i32.const 104780) "\1c")
 (data $1138.1 (i32.const 104792) "\02\00\00\00\n\00\00\00+\003\00.\000\00j")
 (data $1139 (i32.const 104812) "\1c")
 (data $1139.1 (i32.const 104824) "\02\00\00\00\n\00\00\00+\004\00.\000\00k")
 (data $1140 (i32.const 104844) "\8c")
 (data $1140.1 (i32.const 104856) "\02\00\00\00r\00\00\00T\00o\00S\00t\00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00i\00n\00t\00e\00g\00e\00r\00 \00c\00o\00m\00p\00o\00n\00e\00n\00t\00s\00 \00w\00i\00t\00h\00 \00.\000\00 \00s\00u\00f\00f\00i\00x")
 (data $1141 (i32.const 104988) "\1c")
 (data $1141.1 (i32.const 105000) "\02\00\00\00\06\00\00\001\00.\002")
 (data $1142 (i32.const 105020) "\1c")
 (data $1142.1 (i32.const 105032) "\02\00\00\00\n\00\00\00-\004\00.\006\00i")
 (data $1143 (i32.const 105052) "\1c")
 (data $1143.1 (i32.const 105064) "\02\00\00\00\n\00\00\00+\007\00.\009\00j")
 (data $1144 (i32.const 105084) "\1c")
 (data $1144.1 (i32.const 105096) "\02\00\00\00\n\00\00\00-\000\00.\001\00k")
 (data $1145 (i32.const 105116) "\ac")
 (data $1145.1 (i32.const 105128) "\02\00\00\00\8e\00\00\00T\00o\00S\00t\00r\00i\00n\00g\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00n\00d\00l\00e\00 \00f\00l\00o\00a\00t\00i\00n\00g\00 \00p\00o\00i\00n\00t\00s\00 \00a\00n\00d\00 \00s\00i\00g\00n\00s\00 \00w\00i\00t\00h\00 \00o\00n\00e\00 \00d\00e\00c\00i\00m\00a\00l\00 \00p\00l\00a\00c\00e")
 (data $1146 (i32.const 105292) "\\")
 (data $1146.1 (i32.const 105304) "\02\00\00\00>\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00T\00o\00S\00t\00r\00i\00n\00g\00 \00p\00a\00s\00s\00e\00d")
 (data $1147 (i32.const 105388) "L")
 (data $1147.1 (i32.const 105400) "\02\00\00\00.\00\00\00C\00l\00o\00n\00e\00d\00 \00w\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00e")
 (data $1148 (i32.const 105468) "L")
 (data $1148.1 (i32.const 105480) "\02\00\00\00.\00\00\00C\00l\00o\00n\00e\00d\00 \00x\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00e")
 (data $1149 (i32.const 105548) "L")
 (data $1149.1 (i32.const 105560) "\02\00\00\00.\00\00\00C\00l\00o\00n\00e\00d\00 \00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00e")
 (data $1150 (i32.const 105628) "L")
 (data $1150.1 (i32.const 105640) "\02\00\00\00.\00\00\00C\00l\00o\00n\00e\00d\00 \00z\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00e")
 (data $1151 (i32.const 105708) "L")
 (data $1151.1 (i32.const 105720) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00C\00l\00o\00n\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1152 (i32.const 105788) "L")
 (data $1152.1 (i32.const 105800) "\02\00\00\004\00\00\001\003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00 \00s\00p\00l\00i\00t\00 \00p\00r\00i\00m\00e")
 (data $1153 (i32.const 105868) "L")
 (data $1153.1 (i32.const 105880) "\02\00\00\00:\00\00\007\00 \00s\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00b\00e\00 \00a\00 \00s\00p\00l\00i\00t\00 \00p\00r\00i\00m\00e")
 (data $1154 (i32.const 105948) "l")
 (data $1154.1 (i32.const 105960) "\02\00\00\00Z\00\00\00\13\' \00t\00e\00s\00t\00S\00p\00l\00i\00t\00P\00r\00i\00m\00e\00F\00a\00c\00t\00o\00r\00i\00z\00e\00r\00I\00s\00S\00p\00l\00i\00t\00P\00r\00i\00m\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1155 (i32.const 106060) "l")
 (data $1155.1 (i32.const 106072) "\02\00\00\00R\00\00\00G\00a\00u\00s\00s\00i\00a\00n\00 \00f\00a\00c\00t\00o\00r\00i\00z\00a\00t\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00e\00x\00i\00s\00t\00 \00f\00o\00r\00 \005")
 (data $1156 (i32.const 106172) "L")
 (data $1156.1 (i32.const 106184) "\02\00\00\006\00\00\00G\00a\00u\00s\00s\00i\00a\00n\00 \00a\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\00 \00o\00r\00 \002")
 (data $1157 (i32.const 106252) "L")
 (data $1157.1 (i32.const 106264) "\02\00\00\006\00\00\00G\00a\00u\00s\00s\00i\00a\00n\00 \00b\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\00 \00o\00r\00 \002")
 (data $1158 (i32.const 106332) "|")
 (data $1158.1 (i32.const 106344) "\02\00\00\00d\00\00\00\13\' \00t\00e\00s\00t\00S\00p\00l\00i\00t\00P\00r\00i\00m\00e\00F\00a\00c\00t\00o\00r\00i\00z\00e\00r\00F\00a\00c\00t\00o\00r\00i\00z\00e\00G\00a\00u\00s\00s\00i\00a\00n\00 \00p\00a\00s\00s\00e\00d")
 (data $1159 (i32.const 106460) "\1c")
 (data $1159.1 (i32.const 106472) "\02\00\00\00\02\00\00\00d")
 (data $1160 (i32.const 106492) "l")
 (data $1160.1 (i32.const 106504) "\02\00\00\00V\00\00\00E\00i\00s\00e\00n\00s\00t\00e\00i\00n\00 \00f\00a\00c\00t\00o\00r\00i\00z\00a\00t\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00e\00x\00i\00s\00t\00 \00f\00o\00r\00 \007")
 (data $1161 (i32.const 106604) "L")
 (data $1161.1 (i32.const 106616) "\02\00\00\00:\00\00\00E\00i\00s\00e\00n\00s\00t\00e\00i\00n\00 \00c\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\00 \00o\00r\00 \002")
 (data $1162 (i32.const 106684) "L")
 (data $1162.1 (i32.const 106696) "\02\00\00\00:\00\00\00E\00i\00s\00e\00n\00s\00t\00e\00i\00n\00 \00d\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\00 \00o\00r\00 \002")
 (data $1163 (i32.const 106764) "|")
 (data $1163.1 (i32.const 106776) "\02\00\00\00h\00\00\00\13\' \00t\00e\00s\00t\00S\00p\00l\00i\00t\00P\00r\00i\00m\00e\00F\00a\00c\00t\00o\00r\00i\00z\00e\00r\00F\00a\00c\00t\00o\00r\00i\00z\00e\00E\00i\00s\00e\00n\00s\00t\00e\00i\00n\00 \00p\00a\00s\00s\00e\00d")
 (data $1164 (i32.const 106892) "|")
 (data $1164.1 (i32.const 106904) "\02\00\00\00^\00\00\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00c\00r\00e\00a\00t\00e\00d\00 \00f\00o\00r\00 \00s\00p\00l\00i\00t\00 \00p\00r\00i\00m\00e\00 \001\003")
 (data $1165 (i32.const 107020) "l")
 (data $1165.1 (i32.const 107032) "\02\00\00\00X\00\00\00C\00r\00e\00a\00t\00e\00d\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00n\00o\00n\00-\00z\00e\00r\00o\00 \00n\00o\00r\00m")
 (data $1166 (i32.const 107132) "|")
 (data $1166.1 (i32.const 107144) "\02\00\00\00b\00\00\00\13\' \00t\00e\00s\00t\00S\00p\00l\00i\00t\00P\00r\00i\00m\00e\00F\00a\00c\00t\00o\00r\00i\00z\00e\00r\00C\00r\00e\00a\00t\00e\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00p\00a\00s\00s\00e\00d")
 (data $1167 (i32.const 107260) "\\")
 (data $1167.1 (i32.const 107272) "\02\00\00\00L\00\00\00F\00i\00e\00l\00d\00 \00s\00h\00o\00u\00l\00d\00 \00s\00t\00a\00r\00t\00 \00w\00i\00t\00h\00 \00n\00o\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00s")
 (data $1168 (i32.const 107356) "l")
 (data $1168.1 (i32.const 107368) "\02\00\00\00N\00\00\00P\00h\00a\00s\00e\00 \00c\00o\00r\00r\00e\00c\00t\00i\00o\00n\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d")
 (data $1169 (i32.const 107468) "|")
 (data $1169.1 (i32.const 107480) "\02\00\00\00d\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00i\00c\00R\00e\00s\00o\00n\00a\00n\00c\00e\00F\00i\00e\00l\00d\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $1170 (i32.const 107596) "\\")
 (data $1170.1 (i32.const 107608) "\02\00\00\00F\00\00\00A\00d\00d\00i\00n\00g\00 \00a\00 \00s\00p\00l\00i\00t\00 \00p\00r\00i\00m\00e\00 \00s\00h\00o\00u\00l\00d\00 \00s\00u\00c\00c\00e\00e\00d")
 (data $1171 (i32.const 107692) "|")
 (data $1171.1 (i32.const 107704) "\02\00\00\00f\00\00\00F\00i\00e\00l\00d\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00o\00n\00e\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00a\00f\00t\00e\00r\00 \00a\00d\00d\00i\00n\00g\00 \00p\00r\00i\00m\00e")
 (data $1172 (i32.const 107820) "|")
 (data $1172.1 (i32.const 107832) "\02\00\00\00^\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00i\00c\00R\00e\00s\00o\00n\00a\00n\00c\00e\00F\00i\00e\00l\00d\00A\00d\00d\00P\00r\00i\00m\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1173 (i32.const 107948) "l")
 (data $1173.1 (i32.const 107960) "\02\00\00\00P\00\00\00C\00o\00m\00p\00u\00t\00e\00d\00 \00f\00i\00e\00l\00d\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00n\00o\00n\00-\00z\00e\00r\00o\00 \00n\00o\00r\00m")
 (data $1174 (i32.const 108060) "|")
 (data $1174.1 (i32.const 108072) "\02\00\00\00f\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00i\00c\00R\00e\00s\00o\00n\00a\00n\00c\00e\00F\00i\00e\00l\00d\00C\00o\00m\00p\00u\00t\00e\00F\00i\00e\00l\00d\00 \00p\00a\00s\00s\00e\00d")
 (data $1175 (i32.const 108188) "\8c")
 (data $1175.1 (i32.const 108200) "\02\00\00\00r\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00i\00c\00R\00e\00s\00o\00n\00a\00n\00c\00e\00F\00i\00e\00l\00d\00O\00p\00t\00i\00m\00i\00z\00e\00P\00a\00r\00a\00m\00e\00t\00e\00r\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $1176 (i32.const 108332) "\\")
 (data $1176.1 (i32.const 108344) "\02\00\00\00>\00\00\00I\00n\00i\00t\00i\00a\00l\00 \00t\00w\00i\00s\00t\00 \00a\00n\00g\00l\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000")
 (data $1177 (i32.const 108428) "\\")
 (data $1177.1 (i32.const 108440) "\02\00\00\00J\00\00\00\13\' \00t\00e\00s\00t\00T\00w\00i\00s\00t\00D\00y\00n\00a\00m\00i\00c\00s\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $1178 (i32.const 108524) "l")
 (data $1178.1 (i32.const 108536) "\02\00\00\00P\00\00\00T\00w\00i\00s\00t\00 \00a\00n\00g\00l\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00P\00I\00/\004\00 \00f\00o\00r\00 \00(\001\00,\001\00,\000\00,\000\00)")
 (data $1179 (i32.const 108636) "l")
 (data $1179.1 (i32.const 108648) "\02\00\00\00V\00\00\00\13\' \00t\00e\00s\00t\00T\00w\00i\00s\00t\00D\00y\00n\00a\00m\00i\00c\00s\00C\00o\00m\00p\00u\00t\00e\00T\00w\00i\00s\00t\00A\00n\00g\00l\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1180 (i32.const 108748) "L")
 (data $1180.1 (i32.const 108760) "\02\00\00\002\00\00\00T\00w\00i\00s\00t\00 \00a\00n\00g\00l\00e\00 \00s\00h\00o\00u\00l\00d\00 \00e\00v\00o\00l\00v\00e")
 (data $1181 (i32.const 108828) "\\")
 (data $1181.1 (i32.const 108840) "\02\00\00\00@\00\00\00\13\' \00t\00e\00s\00t\00T\00w\00i\00s\00t\00D\00y\00n\00a\00m\00i\00c\00s\00E\00v\00o\00l\00v\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1182 (i32.const 108924) "\\")
 (data $1182.1 (i32.const 108936) "\02\00\00\00J\00\00\00S\00h\00o\00u\00l\00d\00 \00n\00o\00t\00 \00c\00o\00l\00l\00a\00p\00s\00e\00 \00w\00i\00t\00h\00 \00h\00i\00g\00h\00 \00e\00n\00t\00r\00o\00p\00y")
 (data $1183 (i32.const 109020) "|")
 (data $1183.1 (i32.const 109032) "\02\00\00\00d\00\00\00S\00h\00o\00u\00l\00d\00 \00c\00o\00l\00l\00a\00p\00s\00e\00 \00w\00i\00t\00h\00 \00l\00o\00w\00 \00e\00n\00t\00r\00o\00p\00y\00 \00a\00n\00d\00 \00a\00l\00i\00g\00n\00e\00d\00 \00a\00n\00g\00l\00e")
 (data $1184 (i32.const 109148) "l")
 (data $1184.1 (i32.const 109160) "\02\00\00\00N\00\00\00\13\' \00t\00e\00s\00t\00T\00w\00i\00s\00t\00D\00y\00n\00a\00m\00i\00c\00s\00C\00h\00e\00c\00k\00C\00o\00l\00l\00a\00p\00s\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1185 (i32.const 109260) "l")
 (data $1185.1 (i32.const 109272) "\02\00\00\00Z\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00i\00c\00P\00r\00o\00j\00e\00c\00t\00o\00r\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $1186 (i32.const 109372) "\\")
 (data $1186.1 (i32.const 109384) "\02\00\00\00H\00\00\00P\00r\00o\00j\00e\00c\00t\00e\00d\00 \00a\00r\00r\00a\00y\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00l\00e\00n\00g\00t\00h\00 \002")
 (data $1187 (i32.const 109468) "\\")
 (data $1187.1 (i32.const 109480) "\02\00\00\00F\00\00\00P\00r\00o\00j\00e\00c\00t\00e\00d\00 \00v\00a\00l\00u\00e\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00n\00o\00n\00-\00z\00e\00r\00o")
 (data $1188 (i32.const 109564) "l")
 (data $1188.1 (i32.const 109576) "\02\00\00\00R\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00i\00c\00P\00r\00o\00j\00e\00c\00t\00o\00r\00P\00r\00o\00j\00e\00c\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $1189 (i32.const 109676) "\\")
 (data $1189.1 (i32.const 109688) "\02\00\00\00L\00\00\00E\00i\00g\00e\00n\00v\00a\00l\00u\00e\00s\00 \00a\00r\00r\00a\00y\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \00l\00e\00n\00g\00t\00h\00 \002")
 (data $1190 (i32.const 109772) "L")
 (data $1190.1 (i32.const 109784) "\02\00\00\00<\00\00\00E\00i\00g\00e\00n\00v\00a\00l\00u\00e\00s\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00n\00o\00n\00-\00z\00e\00r\00o")
 (data $1191 (i32.const 109852) "|")
 (data $1191.1 (i32.const 109864) "\02\00\00\00h\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00i\00c\00P\00r\00o\00j\00e\00c\00t\00o\00r\00C\00o\00m\00p\00u\00t\00e\00E\00i\00g\00e\00n\00v\00a\00l\00u\00e\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $1192 (i32.const 109980) "\1c")
 (data $1192.1 (i32.const 109992) "\01")
 (data $1193 (i32.const 110012) "\\")
 (data $1193.1 (i32.const 110024) "\02\00\00\00@\00\00\00S\00h\00o\00u\00l\00d\00 \00a\00l\00l\00o\00c\00a\00t\00e\00 \00f\00i\00r\00s\00t\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n")
 (data $1194 (i32.const 110108) "\\")
 (data $1194.1 (i32.const 110120) "\02\00\00\00B\00\00\00S\00h\00o\00u\00l\00d\00 \00a\00l\00l\00o\00c\00a\00t\00e\00 \00s\00e\00c\00o\00n\00d\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n")
 (data $1195 (i32.const 110204) "\\")
 (data $1195.1 (i32.const 110216) "\02\00\00\00L\00\00\00P\00o\00o\00l\00 \00s\00i\00z\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001\00 \00a\00f\00t\00e\00r\00 \00d\00e\00a\00l\00l\00o\00c\00a\00t\00e")
 (data $1196 (i32.const 110300) "L")
 (data $1196.1 (i32.const 110312) "\02\00\00\008\00\00\00S\00h\00o\00u\00l\00d\00 \00r\00e\00-\00a\00l\00l\00o\00c\00a\00t\00e\00 \00f\00r\00o\00m\00 \00p\00o\00o\00l")
 (data $1197 (i32.const 110380) "|")
 (data $1197.1 (i32.const 110392) "\02\00\00\00`\00\00\00\13\' \00t\00e\00s\00t\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00P\00o\00o\00l\00A\00l\00l\00o\00c\00a\00t\00e\00A\00n\00d\00D\00e\00a\00l\00l\00o\00c\00a\00t\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1198 (i32.const 110508) "\\")
 (data $1198.1 (i32.const 110520) "\02\00\00\00>\00\00\00\n\00A\00l\00l\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $1199 (i32.const 110604) "L")
 (data $1199.1 (i32.const 110616) "\02\00\00\00:\00\00\00\05\' \00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $1200 (i32.const 110684) "\\")
 (data $1200.1 (i32.const 110696) "\02\00\00\00L\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00E\00n\00t\00r\00o\00p\00y\00 \00V\00i\00s\00u\00a\00l\00i\00z\00a\00t\00i\00o\00n\00 \00T\00e\00s\00t\00s\00.\00.\00.")
 (data $1201 (i32.const 110780) "\\")
 (data $1201.1 (i32.const 110792) "\02\00\00\00L\00\00\00R\00u\00n\00n\00i\00n\00g\00 \00e\00n\00t\00r\00o\00p\00y\00 \00v\00i\00s\00u\00a\00l\00i\00z\00a\00t\00i\00o\00n\00 \00t\00e\00s\00t\00s\00.\00.\00.")
 (data $1202 (i32.const 110876) "<")
 (data $1202.1 (i32.const 110888) "\02\00\00\00*\00\00\00T\00i\00m\00e\00s\00t\00a\00m\00p\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000")
 (data $1203 (i32.const 110940) "\\")
 (data $1203.1 (i32.const 110952) "\02\00\00\00D\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00s\00/\00e\00n\00t\00r\00o\00p\00y\00-\00v\00i\00z\00.\00t\00e\00s\00t\00.\00t\00s")
 (data $1204 (i32.const 111036) "\\")
 (data $1204.1 (i32.const 111048) "\02\00\00\00L\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00e\00n\00t\00r\00o\00p\00i\00e\00s\00 \00m\00a\00p\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00m\00p\00t\00y")
 (data $1205 (i32.const 111132) "\\")
 (data $1205.1 (i32.const 111144) "\02\00\00\00F\00\00\00N\00o\00d\00e\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00s\00 \00m\00a\00p\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00m\00p\00t\00y")
 (data $1206 (i32.const 111228) "\\")
 (data $1206.1 (i32.const 111240) "\02\00\00\00H\00\00\00P\00r\00i\00m\00e\00 \00a\00m\00p\00l\00i\00t\00u\00d\00e\00s\00 \00m\00a\00p\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00m\00p\00t\00y")
 (data $1207 (i32.const 111324) "\\")
 (data $1207.1 (i32.const 111336) "\02\00\00\00J\00\00\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00p\00h\00a\00s\00e\00s\00 \00m\00a\00p\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00m\00p\00t\00y")
 (data $1208 (i32.const 111420) "l")
 (data $1208.1 (i32.const 111432) "\02\00\00\00N\00\00\00F\00i\00e\00l\00d\00 \00i\00n\00t\00e\00n\00s\00i\00t\00i\00e\00s\00 \00a\00r\00r\00a\00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00m\00p\00t\00y")
 (data $1209 (i32.const 111532) "l")
 (data $1209.1 (i32.const 111544) "\02\00\00\00P\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00F\00i\00e\00l\00d\00D\00a\00t\00a\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $1210 (i32.const 111644) "l")
 (data $1210.1 (i32.const 111656) "\02\00\00\00V\00\00\00D\00a\00t\00a\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00n\00 \00E\00n\00t\00r\00o\00p\00y\00F\00i\00e\00l\00d\00D\00a\00t\00a\00 \00i\00n\00s\00t\00a\00n\00c\00e")
 (data $1211 (i32.const 111756) "l")
 (data $1211.1 (i32.const 111768) "\02\00\00\00V\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00F\00i\00e\00l\00d\00S\00a\00m\00p\00l\00e\00r\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $1212 (i32.const 111868) "\1c")
 (data $1212.1 (i32.const 111880) "\02\00\00\00\n\00\00\00f\00r\00a\00g\001")
 (data $1213 (i32.const 111900) "\\")
 (data $1213.1 (i32.const 111912) "\02\00\00\00D\00\00\00F\00r\00a\00g\00m\00e\00n\00t\00 \00e\00n\00t\00r\00o\00p\00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00p\00l\00e\00d")
 (data $1214 (i32.const 111996) "l")
 (data $1214.1 (i32.const 112008) "\02\00\00\00\\\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00F\00i\00e\00l\00d\00S\00a\00m\00p\00l\00e\00r\00S\00a\00m\00p\00l\00e\00F\00r\00a\00g\00m\00e\00n\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $1215 (i32.const 112108) "\\")
 (data $1215.1 (i32.const 112120) "\02\00\00\00@\00\00\00N\00o\00d\00e\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00p\00l\00e\00d")
 (data $1216 (i32.const 112204) "l")
 (data $1216.1 (i32.const 112216) "\02\00\00\00T\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00F\00i\00e\00l\00d\00S\00a\00m\00p\00l\00e\00r\00S\00a\00m\00p\00l\00e\00N\00o\00d\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1217 (i32.const 112316) "l")
 (data $1217.1 (i32.const 112328) "\02\00\00\00N\00\00\00P\00r\00i\00m\00e\00 \00a\00m\00p\00l\00i\00t\00u\00d\00e\00 \00f\00o\00r\00 \002\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00p\00l\00e\00d")
 (data $1218 (i32.const 112428) "l")
 (data $1218.1 (i32.const 112440) "\02\00\00\00N\00\00\00P\00r\00i\00m\00e\00 \00a\00m\00p\00l\00i\00t\00u\00d\00e\00 \00f\00o\00r\00 \003\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00p\00l\00e\00d")
 (data $1219 (i32.const 112540) "|")
 (data $1219.1 (i32.const 112552) "\02\00\00\00`\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00F\00i\00e\00l\00d\00S\00a\00m\00p\00l\00e\00r\00S\00a\00m\00p\00l\00e\00P\00r\00i\00m\00e\00S\00t\00a\00t\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1220 (i32.const 112668) "\\")
 (data $1220.1 (i32.const 112680) "\02\00\00\00D\00\00\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00p\00h\00a\00s\00e\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00s\00a\00m\00p\00l\00e\00d")
 (data $1221 (i32.const 112764) "|")
 (data $1221.1 (i32.const 112776) "\02\00\00\00`\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00F\00i\00e\00l\00d\00S\00a\00m\00p\00l\00e\00r\00S\00a\00m\00p\00l\00e\00Q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00p\00a\00s\00s\00e\00d")
 (data $1222 (i32.const 112892) "\1c")
 (data $1222.1 (i32.const 112904) "\e6\00\00\00\08\00\00\00\0f")
 (data $1223 (i32.const 112924) "\\")
 (data $1223.1 (i32.const 112936) "\02\00\00\00D\00\00\00S\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \004\00 \00s\00a\00m\00p\00l\00e\00s\00 \00f\00o\00r\00 \002\00x\002\00 \00g\00r\00i\00d")
 (data $1224 (i32.const 113020) "<")
 (data $1224.1 (i32.const 113032) "\02\00\00\00,\00\00\00S\00a\00m\00p\00l\00e\00 \000\00,\000\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \000")
 (data $1225 (i32.const 113084) "<")
 (data $1225.1 (i32.const 113096) "\02\00\00\00,\00\00\00S\00a\00m\00p\00l\00e\00 \001\00,\000\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $1226 (i32.const 113148) "<")
 (data $1226.1 (i32.const 113160) "\02\00\00\00,\00\00\00S\00a\00m\00p\00l\00e\00 \000\00,\001\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \001")
 (data $1227 (i32.const 113212) "<")
 (data $1227.1 (i32.const 113224) "\02\00\00\00,\00\00\00S\00a\00m\00p\00l\00e\00 \001\00,\001\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \002")
 (data $1228 (i32.const 113276) "l")
 (data $1228.1 (i32.const 113288) "\02\00\00\00Z\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00F\00i\00e\00l\00d\00S\00a\00m\00p\00l\00e\00r\00S\00a\00m\00p\00l\00e\00F\00i\00e\00l\00d\002\00D\00 \00p\00a\00s\00s\00e\00d")
 (data $1229 (i32.const 113388) "\1c")
 (data $1229.1 (i32.const 113400) "\02\00\00\00\n\00\00\00f\00r\00a\00g\00A")
 (data $1230 (i32.const 113420) ",")
 (data $1230.1 (i32.const 113432) "\02\00\00\00\18\00\00\00\"\00t\00i\00m\00e\00s\00t\00a\00m\00p\00\"\00:")
 (data $1231 (i32.const 113468) ",")
 (data $1231.1 (i32.const 113480) "\02\00\00\00\1a\00\00\00\"\00f\00r\00a\00g\00m\00e\00n\00t\00s\00\"\00:\00{")
 (data $1232 (i32.const 113516) "\1c")
 (data $1232.1 (i32.const 113528) "\02\00\00\00\04\00\00\00}\00,")
 (data $1233 (i32.const 113548) ",")
 (data $1233.1 (i32.const 113560) "\02\00\00\00\12\00\00\00\"\00n\00o\00d\00e\00s\00\"\00:\00{")
 (data $1234 (i32.const 113596) ",")
 (data $1234.1 (i32.const 113608) "\02\00\00\00\14\00\00\00\"\00p\00r\00i\00m\00e\00s\00\"\00:\00{")
 (data $1235 (i32.const 113644) "<")
 (data $1235.1 (i32.const 113656) "\02\00\00\00\1e\00\00\00\"\00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00s\00\"\00:\00{")
 (data $1236 (i32.const 113708) ",")
 (data $1236.1 (i32.const 113720) "\02\00\00\00\12\00\00\00\"\00f\00i\00e\00l\00d\00\"\00:\00[")
 (data $1237 (i32.const 113756) "<")
 (data $1237.1 (i32.const 113768) "\02\00\00\00\"\00\00\00\"\00t\00i\00m\00e\00s\00t\00a\00m\00p\00\"\00:\001\002\003\004\005")
 (data $1238 (i32.const 113820) "\\")
 (data $1238.1 (i32.const 113832) "\02\00\00\00L\00\00\00E\00x\00p\00o\00r\00t\00e\00d\00 \00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00t\00i\00m\00e\00s\00t\00a\00m\00p")
 (data $1239 (i32.const 113916) "L")
 (data $1239.1 (i32.const 113928) "\02\00\00\002\00\00\00\"\00f\00r\00a\00g\00m\00e\00n\00t\00s\00\"\00:\00{\00\"\00f\00r\00a\00g\00A\00\"\00:\000\00.\001\00}")
 (data $1240 (i32.const 113996) "|")
 (data $1240.1 (i32.const 114008) "\02\00\00\00^\00\00\00E\00x\00p\00o\00r\00t\00e\00d\00 \00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00e\00n\00t\00r\00o\00p\00i\00e\00s")
 (data $1241 (i32.const 114124) "<")
 (data $1241.1 (i32.const 114136) "\02\00\00\00*\00\00\00\"\00n\00o\00d\00e\00s\00\"\00:\00{\00\"\00n\00o\00d\00e\00B\00\"\00:\000\00.\009\00}")
 (data $1242 (i32.const 114188) "l")
 (data $1242.1 (i32.const 114200) "\02\00\00\00X\00\00\00E\00x\00p\00o\00r\00t\00e\00d\00 \00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00n\00o\00d\00e\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00s")
 (data $1243 (i32.const 114300) "<")
 (data $1243.1 (i32.const 114312) "\02\00\00\00 \00\00\00\"\00p\00r\00i\00m\00e\00s\00\"\00:\00{\00\"\001\007\00\"\00:\001")
 (data $1244 (i32.const 114364) "l")
 (data $1244.1 (i32.const 114376) "\02\00\00\00Z\00\00\00E\00x\00p\00o\00r\00t\00e\00d\00 \00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00p\00r\00i\00m\00e\00 \00a\00m\00p\00l\00i\00t\00u\00d\00e\00s")
 (data $1245 (i32.const 114476) "<")
 (data $1245.1 (i32.const 114488) "\02\00\00\00*\00\00\00\"\00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00s\00\"\00:\00{\00\"\001\009\00\"\00:\000")
 (data $1246 (i32.const 114540) "l")
 (data $1246.1 (i32.const 114552) "\02\00\00\00\\\00\00\00E\00x\00p\00o\00r\00t\00e\00d\00 \00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00 \00p\00h\00a\00s\00e\00s")
 (data $1247 (i32.const 114652) ",")
 (data $1247.1 (i32.const 114664) "\02\00\00\00\14\00\00\00\"\00f\00i\00e\00l\00d\00\"\00:\00[\00]")
 (data $1248 (i32.const 114700) "|")
 (data $1248.1 (i32.const 114712) "\02\00\00\00h\00\00\00E\00x\00p\00o\00r\00t\00e\00d\00 \00J\00S\00O\00N\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00e\00m\00p\00t\00y\00 \00f\00i\00e\00l\00d\00 \00i\00n\00t\00e\00n\00s\00i\00t\00i\00e\00s")
 (data $1249 (i32.const 114828) "l")
 (data $1249.1 (i32.const 114840) "\02\00\00\00T\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00F\00i\00e\00l\00d\00S\00a\00m\00p\00l\00e\00r\00E\00x\00p\00o\00r\00t\00D\00a\00t\00a\00 \00p\00a\00s\00s\00e\00d")
 (data $1250 (i32.const 114940) "L")
 (data $1250.1 (i32.const 114952) "\02\00\00\006\00\00\00T\00i\00m\00e\00s\00t\00a\00m\00p\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00u\00p\00d\00a\00t\00e\00d")
 (data $1251 (i32.const 115020) "l")
 (data $1251.1 (i32.const 115032) "\02\00\00\00T\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00F\00i\00e\00l\00d\00S\00a\00m\00p\00l\00e\00r\00U\00p\00d\00a\00t\00e\00T\00i\00m\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1252 (i32.const 115132) "L")
 (data $1252.1 (i32.const 115144) "\02\00\00\00.\00\00\00H\00i\00s\00t\00o\00r\00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00m\00p\00t\00y")
 (data $1253 (i32.const 115212) "|")
 (data $1253.1 (i32.const 115224) "\02\00\00\00^\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00E\00v\00o\00l\00u\00t\00i\00o\00n\00T\00r\00a\00c\00k\00e\00r\00C\00o\00n\00s\00t\00r\00u\00c\00t\00o\00r\00 \00p\00a\00s\00s\00e\00d")
 (data $1254 (i32.const 115340) "L")
 (data $1254.1 (i32.const 115352) "\02\00\00\006\00\00\00H\00i\00s\00t\00o\00r\00y\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \001\00 \00e\00n\00t\00r\00y")
 (data $1255 (i32.const 115420) "L")
 (data $1255.1 (i32.const 115432) "\02\00\00\00:\00\00\00H\00i\00s\00t\00o\00r\00y\00 \00s\00h\00o\00u\00l\00d\00 \00h\00a\00v\00e\00 \002\00 \00e\00n\00t\00r\00i\00e\00s")
 (data $1256 (i32.const 115500) "|")
 (data $1256.1 (i32.const 115512) "\02\00\00\00h\00\00\00H\00i\00s\00t\00o\00r\00y\00 \00s\00h\00o\00u\00l\00d\00 \00s\00t\00i\00l\00l\00 \00h\00a\00v\00e\00 \002\00 \00e\00n\00t\00r\00i\00e\00s\00 \00(\00o\00l\00d\00e\00s\00t\00 \00r\00e\00m\00o\00v\00e\00d\00)")
 (data $1257 (i32.const 115628) "|")
 (data $1257.1 (i32.const 115640) "\02\00\00\00^\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00E\00v\00o\00l\00u\00t\00i\00o\00n\00T\00r\00a\00c\00k\00e\00r\00R\00e\00c\00o\00r\00d\00S\00t\00a\00t\00e\00 \00p\00a\00s\00s\00e\00d")
 (data $1258 (i32.const 115756) "\1c")
 (data $1258.1 (i32.const 115768) "\e6\00\00\00\08\00\00\00\10")
 (data $1259 (i32.const 115788) "L")
 (data $1259.1 (i32.const 115800) "\02\00\00\00:\00\00\00G\00r\00a\00d\00i\00e\00n\00t\00 \00x\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00 \002")
 (data $1260 (i32.const 115868) "L")
 (data $1260.1 (i32.const 115880) "\02\00\00\00:\00\00\00G\00r\00a\00d\00i\00e\00n\00t\00 \00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00a\00p\00p\00r\00o\00x\00 \004")
 (data $1261 (i32.const 115948) "|")
 (data $1261.1 (i32.const 115960) "\02\00\00\00l\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00E\00v\00o\00l\00u\00t\00i\00o\00n\00T\00r\00a\00c\00k\00e\00r\00G\00e\00t\00E\00n\00t\00r\00o\00p\00y\00G\00r\00a\00d\00i\00e\00n\00t\00 \00p\00a\00s\00s\00e\00d")
 (data $1262 (i32.const 116076) "\1c")
 (data $1262.1 (i32.const 116088) "\e6\00\00\00\08\00\00\00\11")
 (data $1263 (i32.const 116108) "l")
 (data $1263.1 (i32.const 116120) "\02\00\00\00N\00\00\00S\00h\00o\00u\00l\00d\00 \00f\00i\00n\00d\00 \00a\00t\00 \00l\00e\00a\00s\00t\00 \00o\00n\00e\00 \00c\00r\00i\00t\00i\00c\00a\00l\00 \00p\00o\00i\00n\00t")
 (data $1264 (i32.const 116220) "|")
 (data $1264.1 (i32.const 116232) "\02\00\00\00l\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00E\00v\00o\00l\00u\00t\00i\00o\00n\00T\00r\00a\00c\00k\00e\00r\00F\00i\00n\00d\00C\00r\00i\00t\00i\00c\00a\00l\00P\00o\00i\00n\00t\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $1265 (i32.const 116348) ",")
 (data $1265.1 (i32.const 116360) "\02\00\00\00\12\00\00\00{\00\"\00i\00n\00d\00e\00x\00\"\00:")
 (data $1266 (i32.const 116396) ",")
 (data $1266.1 (i32.const 116408) "\02\00\00\00\16\00\00\00{\00\"\00i\00n\00d\00e\00x\00\"\00:\000\00}")
 (data $1267 (i32.const 116444) "\\")
 (data $1267.1 (i32.const 116456) "\02\00\00\00J\00\00\00E\00x\00p\00o\00r\00t\00e\00d\00 \00h\00i\00s\00t\00o\00r\00y\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00i\00n\00d\00e\00x")
 (data $1268 (i32.const 116540) "|")
 (data $1268.1 (i32.const 116552) "\02\00\00\00b\00\00\00\13\' \00t\00e\00s\00t\00E\00n\00t\00r\00o\00p\00y\00E\00v\00o\00l\00u\00t\00i\00o\00n\00T\00r\00a\00c\00k\00e\00r\00E\00x\00p\00o\00r\00t\00H\00i\00s\00t\00o\00r\00y\00 \00p\00a\00s\00s\00e\00d")
 (data $1269 (i32.const 116668) "L")
 (data $1269.1 (i32.const 116680) "\02\00\00\00.\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00e\00n\00t\00r\00o\00p\00y\00-\00v\00i\00z\00.\00t\00s")
 (data $1270 (i32.const 116748) ",")
 (data $1270.1 (i32.const 116760) "\02\00\00\00\1a\00\00\00\"\00t\00i\00m\00e\00s\00t\00a\00m\00p\00\"\00:\000")
 (data $1271 (i32.const 116796) "l")
 (data $1271.1 (i32.const 116808) "\02\00\00\00\\\00\00\00E\00x\00p\00o\00r\00t\00e\00d\00 \00s\00a\00m\00p\00l\00e\00r\00 \00d\00a\00t\00a\00 \00s\00h\00o\00u\00l\00d\00 \00c\00o\00n\00t\00a\00i\00n\00 \00t\00i\00m\00e\00s\00t\00a\00m\00p")
 (data $1272 (i32.const 116908) "\1c")
 (data $1272.1 (i32.const 116920) "\02\00\00\00\04\00\00\00[\00]")
 (data $1273 (i32.const 116940) "|")
 (data $1273.1 (i32.const 116952) "\02\00\00\00d\00\00\00E\00x\00p\00o\00r\00t\00e\00d\00 \00t\00r\00a\00c\00k\00e\00r\00 \00h\00i\00s\00t\00o\00r\00y\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00m\00p\00t\00y\00 \00i\00n\00i\00t\00i\00a\00l\00l\00y")
 (data $1274 (i32.const 117068) "L")
 (data $1274.1 (i32.const 117080) "\02\00\00\008\00\00\00\13\' \00t\00e\00s\00t\00G\00l\00o\00b\00a\00l\00F\00u\00n\00c\00t\00i\00o\00n\00s\00 \00p\00a\00s\00s\00e\00d")
 (data $1275 (i32.const 117148) "l")
 (data $1275.1 (i32.const 117160) "\02\00\00\00T\00\00\00\n\00A\00l\00l\00 \00e\00n\00t\00r\00o\00p\00y\00 \00v\00i\00s\00u\00a\00l\00i\00z\00a\00t\00i\00o\00n\00 \00t\00e\00s\00t\00s\00 \00p\00a\00s\00s\00e\00d\00!\00 \00(\'")
 (data $1276 (i32.const 117260) "l")
 (data $1276.1 (i32.const 117272) "\02\00\00\00P\00\00\00\05\' \00E\00n\00t\00r\00o\00p\00y\00 \00V\00i\00s\00u\00a\00l\00i\00z\00a\00t\00i\00o\00n\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00\n")
 (data $1277 (i32.const 117372) "<")
 (data $1277.1 (i32.const 117384) "\02\00\00\00(\00\00\00=\00=\00=\00 \00T\00e\00s\00t\00 \00S\00u\00m\00m\00a\00r\00y\00 \00=\00=\00=")
 (data $1278 (i32.const 117436) "<")
 (data $1278.1 (i32.const 117448) "\02\00\00\00,\00\00\00\05\' \00A\00l\00l\00 \00t\00e\00s\00t\00s\00 \00c\00o\00m\00p\00l\00e\00t\00e\00d\00!")
 (data $1279 (i32.const 117500) "<")
 (data $1279.1 (i32.const 117512) "\02\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d")
 (data $1280 (i32.const 117564) "<")
 (data $1280.1 (i32.const 117576) "\02\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d")
 (data $1281 (i32.const 117628) "<")
 (data $1281.1 (i32.const 117640) "\02\00\00\00&\00\00\00C\00O\00H\00E\00R\00E\00N\00C\00E\00_\00T\00I\00M\00E\00S\00T\00A\00M\00P")
 (data $1282 (i32.const 117692) "\1c")
 (data $1282.1 (i32.const 117704) "\02\00\00\00\n\00\00\00c\00a\00l\00l\00-")
 (data $1283 (i32.const 117724) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\10\00\00\00\d0\cb\01\00\00\00\00\00\90o")
 (data $1284 (i32.const 117772) ",")
 (data $1284.1 (i32.const 117784) "\02\00\00\00\16\00\00\00s\00c\00o\00p\00e\00-\00c\00a\00l\00l\00-")
 (data $1285 (i32.const 117820) ",")
 (data $1285.1 (i32.const 117832) "\02\00\00\00\10\00\00\00f\00u\00n\00c\00t\00i\00o\00n")
 (data $1286 (i32.const 117868) "\1c")
 (data $1286.1 (i32.const 117880) "\02\00\00\00\04\00\00\00E\00Q")
 (data $1287 (i32.const 117900) "\1c")
 (data $1287.1 (i32.const 117912) "\02\00\00\00\04\00\00\00=\00=")
 (data $1288 (i32.const 117932) "\1c")
 (data $1288.1 (i32.const 117944) "\02\00\00\00\04\00\00\00N\00E")
 (data $1289 (i32.const 117964) "\1c")
 (data $1289.1 (i32.const 117976) "\02\00\00\00\04\00\00\00!\00=")
 (data $1290 (i32.const 117996) "\1c")
 (data $1290.1 (i32.const 118008) "\02\00\00\00\04\00\00\00L\00T")
 (data $1291 (i32.const 118028) "\1c")
 (data $1291.1 (i32.const 118040) "\02\00\00\00\02\00\00\00<")
 (data $1292 (i32.const 118060) "\1c")
 (data $1292.1 (i32.const 118072) "\02\00\00\00\04\00\00\00L\00E")
 (data $1293 (i32.const 118092) "\1c")
 (data $1293.1 (i32.const 118104) "\02\00\00\00\04\00\00\00<\00=")
 (data $1294 (i32.const 118124) "\1c")
 (data $1294.1 (i32.const 118136) "\02\00\00\00\04\00\00\00G\00T")
 (data $1295 (i32.const 118156) "\1c")
 (data $1295.1 (i32.const 118168) "\02\00\00\00\02\00\00\00>")
 (data $1296 (i32.const 118188) "\1c")
 (data $1296.1 (i32.const 118200) "\02\00\00\00\04\00\00\00G\00E")
 (data $1297 (i32.const 118220) "\1c")
 (data $1297.1 (i32.const 118232) "\02\00\00\00\04\00\00\00>\00=")
 (data $1298 (i32.const 118252) "\1c")
 (data $1298.1 (i32.const 118264) "\02\00\00\00\n\00\00\00c\00o\00n\00d\00-")
 (data $1299 (i32.const 118284) ",\00\00\00\03\00\00\00\00\00\00\00\a9\00\00\00\10\00\00\00\00\ce\01\00\00\00\00\00\90o")
 (data $1300 (i32.const 118332) "<")
 (data $1300.1 (i32.const 118344) "\02\00\00\00 \00\00\00s\00c\00o\00p\00e\00-\00c\00o\00n\00d\00i\00t\00i\00o\00n\00-")
 (data $1301 (i32.const 118396) ",")
 (data $1301.1 (i32.const 118408) "\02\00\00\00\12\00\00\00c\00o\00n\00d\00i\00t\00i\00o\00n")
 (data $1302 (i32.const 118444) "\1c")
 (data $1302.1 (i32.const 118456) "\01")
 (data $1303 (i32.const 118476) "\1c")
 (data $1303.1 (i32.const 118488) "\ab\00\00\00\08\00\00\00\12")
 (data $1304 (i32.const 118508) "\1c")
 (data $1304.1 (i32.const 118520) "\02\00\00\00\08\00\00\00_\00a\00m\00p")
 (data $1305 (i32.const 118540) "\1c")
 (data $1305.1 (i32.const 118552) "\02\00\00\00\0c\00\00\00_\00p\00h\00a\00s\00e")
 (data $1306 (i32.const 118572) "\1c")
 (data $1306.1 (i32.const 118584) "\01")
 (data $1307 (i32.const 118604) ",")
 (data $1307.1 (i32.const 118616) "\02\00\00\00\1c\00\00\00E\00V\00O\00L\00U\00T\00I\00O\00N\00_\00R\00A\00T\00E")
 (data $1308 (i32.const 118652) "\1c")
 (data $1308.1 (i32.const 118664) "\01")
 (data $1309 (i32.const 118688) "\ed\00\00\00 \00\00\00 \00\00\00 ")
 (data $1309.1 (i32.const 118712) " \00\00\00$\01\00\00\02\1a
 (data $1309.2 (i32.const 118936) "\10A\82\00\02A\00\00\00\00\00\00 \00\00\00\02A\00\00 \00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\10A\82\00\10A\82\00\00\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\02A\00\00\10A\82\00\02A\00\00\02\t\00\00\00\00\00\00 \00\00\00 \00\00\00 \00\00\00\10A\82\00\10A\82")
 (data $1309.3 (i32.const 119056) "\02A\00\00\10A\82\00\00\00\00\00\10A\82\00\00\00\00\00\08A\00\00\10A\82\00\02A\00\00\10A\82\00 \00\00\00\00\00\00\00\10A\82\00 \00\00\00 \00\00\00 \00\00\00 \00\00\00 ")
 (data $1309.4 (i32.const 119136) "\10\1a\82\00\10\1a\02\00\00\00\00\00\02A\00\00 \00\00\00A")
 (data $1309.5 (i32.const 119172) "\02A\00\00\02A\00\00\00\00\00\00 \00\00\00 \00\00\00\00\00\00\00\10\t\82\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00 \00\00\00\00\00\00\00\10A\82\00\00\00\00\00 \00\00\00 \00\00\00\10A\12\00\10\1a\12\00\00\00\00\00 \00\00\00\00\00\00\00\10A\82\00\10A\12\00\00\00\00\00 \00\00\00 \00\00\00 \00\00\00\02A\00\00\00\00\00\00$\t\00\00\10A\82\00\00\00\00\00 \00\00\00 \00\00\00\00\00\00\00 \00\00\00\10\t\12\00 \00\00\00\10A\12\00\00\00\00\00\02A\00\00\a4")
 (data $1309.6 (i32.const 119368) "\04A\00\00 \00\00\00\00\00\00\00\08\t")
 (data $1309.7 (i32.const 119396) "\02A\00\00\02A")
 (data $1309.8 (i32.const 119412) "\02A\00\00\10A\82")
 (data $1309.9 (i32.const 119440) "\02A")
 (data $1309.10 (i32.const 119476) "\02A\00\00\00\00\00\00\02A")
 (data $1309.11 (i32.const 119496) "\02A")
 (data $1309.12 (i32.const 119508) "\02A\00\00\00\00\00\00\10A\82\00\10A\82\00\00\00\00\00$\1a")
 (data $1309.13 (i32.const 119540) "\02A")
 (data $1309.14 (i32.const 119568) " \00\00\00\02A\00\00 \00\00\00\00\00\00\00\01\1a\00\00\02A\00\00\00\00\00\00\10A\02\00 \00\00\00 ")
 (data $1309.15 (i32.const 119616) "\10A\82\00\10A\82\00\02A\00\00 \00\00\00\00\00\00\00\02A")
 (table $0 19 19 funcref)
 (elem $0 (i32.const 1) $start:assembly/tests/runtime.test~anonymous|0 $assembly/runtime/state/globalState/GlobalState#calculateGlobalCoherence~anonymous|0 $assembly/runtime/state/globalState/GlobalState#calculateGlobalCoherence~anonymous|1 $assembly/runtime/state/globalState/GlobalState#calculateGlobalCoherence~anonymous|2 $assembly/tests/core-arrays.test/testPartition~anonymous|0 $assembly/tests/core-arrays.test/testFindIndex~anonymous|0 $assembly/tests/core-arrays.test/testFindIndex~anonymous|1 $assembly/tests/core-arrays.test/testPartition~anonymous|0 $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable $assembly/tests/core-arrays.test/testBinarySearch~anonymous|0 $assembly/tests/core-arrays.test/testBinarySearch~anonymous|0 $assembly/tests/core-arrays.test/testBinarySearch~anonymous|0 $assembly/tests/core-builders.test/testProtocolMessageBuilder~anonymous|0 $assembly/operators/route~anonymous|0 $assembly/tests/entropy-viz.test/testEntropyFieldSamplerSampleField2D~anonymous|0 $assembly/tests/entropy-viz.test/testEntropyEvolutionTrackerGetEntropyGradient~anonymous|0 $assembly/tests/entropy-viz.test/testEntropyEvolutionTrackerFindCriticalPoints~anonymous|0 $assembly/runtime/instructions/quantum/collapse/CollapseInstruction#execute~anonymous|0)
 (export "runAllTests" (func $assembly/test-index/runAllTests))
 (export "default" (func $assembly/test-index/runAllTests))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (start $~start)
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 1456
     i32.const 160
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#unlink (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  i32.const -4
  i32.and
  local.tee $1
  i32.eqz
  if
   local.get $0
   i32.load offset=8
   i32.eqz
   local.get $0
   i32.const 152408
   i32.lt_u
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 1456
    i32.const 128
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $0
  i32.load offset=8
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 1456
   i32.const 132
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1456
    i32.const 148
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  local.get $0
  call $~lib/rt/itcms/Object#unlink
  global.get $~lib/rt/itcms/toSpace
  local.set $1
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $2
   i32.const 118688
   i32.load
   i32.gt_u
   if
    i32.const 1584
    i32.const 1648
    i32.const 21
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   i32.const 2
   i32.shl
   i32.const 118692
   i32.add
   i32.load
   i32.const 32
   i32.and
  end
  local.set $3
  local.get $1
  i32.load offset=8
  local.set $2
  local.get $0
  global.get $~lib/rt/itcms/white
  i32.eqz
  i32.const 2
  local.get $3
  select
  local.get $1
  i32.or
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $0
  local.get $2
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=8
 )
 (func $~lib/rt/itcms/__visit (param $0 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1728
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const -4
  i32.and
  local.tee $3
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 1728
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $3
   local.get $3
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $3
   i32.clz
   i32.sub
   local.tee $4
   i32.const 7
   i32.sub
   local.set $2
   local.get $3
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $3
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1728
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=8
  local.set $5
  local.get $1
  i32.load offset=4
  local.tee $4
  if
   local.get $4
   local.get $5
   i32.store offset=8
  end
  local.get $5
  if
   local.get $5
   local.get $4
   i32.store offset=4
  end
  local.get $1
  local.get $0
  local.get $2
  i32.const 4
  i32.shl
  local.get $3
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.tee $1
  i32.load offset=96
  i32.eq
  if
   local.get $1
   local.get $5
   i32.store offset=96
   local.get $5
   i32.eqz
   if
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.tee $1
    i32.load offset=4
    i32.const -2
    local.get $3
    i32.rotl
    i32.and
    local.set $3
    local.get $1
    local.get $3
    i32.store offset=4
    local.get $3
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const -2
     local.get $2
     i32.rotl
     i32.and
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 1728
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1728
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $3
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   i32.load
   local.set $2
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load
   local.tee $1
   i32.load
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 1728
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store
  end
  local.get $4
  local.get $2
  i32.const 2
  i32.or
  i32.store
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 1728
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  i32.ne
  if
   i32.const 0
   i32.const 1728
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $5
   local.get $2
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $5
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1728
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $3
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  local.get $3
  if
   local.get $3
   local.get $1
   i32.store offset=4
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $5
  i32.shl
  i32.or
  i32.store
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load offset=4
  i32.const 1
  local.get $2
  i32.shl
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $2
  local.get $1
  i64.extend_i32_u
  i64.lt_u
  if
   i32.const 0
   i32.const 1728
   i32.const 382
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.load offset=1568
  local.tee $3
  if
   local.get $3
   i32.const 4
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 1728
    i32.const 389
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   local.get $1
   i32.const 16
   i32.sub
   local.tee $5
   i32.eq
   if
    local.get $3
    i32.load
    local.set $4
    local.get $5
    local.set $1
   end
  else
   local.get $0
   i32.const 1572
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 1728
    i32.const 402
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  i32.wrap_i64
  i32.const -16
  i32.and
  local.get $1
  i32.sub
  local.tee $3
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $4
  i32.const 2
  i32.and
  local.get $3
  i32.const 8
  i32.sub
  local.tee $3
  i32.const 1
  i32.or
  i32.or
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 4
  i32.add
  local.get $3
  i32.add
  local.tee $3
  i32.const 2
  i32.store
  local.get $0
  local.get $3
  i32.store offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size
  local.tee $1
  i32.const 3
  i32.lt_s
  if (result i32)
   i32.const 3
   local.get $1
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 152416
  i32.const 0
  i32.store
  i32.const 153984
  i32.const 0
  i32.store
  loop $for-loop|0
   local.get $0
   i32.const 23
   i32.lt_u
   if
    local.get $0
    i32.const 2
    i32.shl
    i32.const 152416
    i32.add
    i32.const 0
    i32.store offset=4
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 16
     i32.lt_u
     if
      local.get $0
      i32.const 4
      i32.shl
      local.get $1
      i32.add
      i32.const 2
      i32.shl
      i32.const 152416
      i32.add
      i32.const 0
      i32.store offset=96
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  i32.const 152416
  i32.const 153988
  memory.size
  i64.extend_i32_s
  i64.const 16
  i64.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 152416
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      br_table $case0|0 $case1|0 $case2|0 $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $1
      local.get $0
      i32.load offset=4
      local.tee $2
      i32.const 3
      i32.and
      i32.ne
      if
       local.get $0
       local.get $2
       i32.const -4
       i32.and
       local.get $1
       i32.or
       i32.store offset=4
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       return
      end
      local.get $0
      i32.load offset=4
      i32.const -4
      i32.and
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/iter
    i32.load offset=4
    i32.const -4
    i32.and
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.set $0
     loop $while-continue|0
      local.get $0
      i32.const 152408
      i32.lt_u
      if
       local.get $0
       i32.load
       call $~lib/rt/itcms/__visit
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       br $while-continue|0
      end
     end
     global.get $~lib/rt/itcms/iter
     i32.load offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $1
       local.get $0
       i32.load offset=4
       local.tee $2
       i32.const 3
       i32.and
       i32.ne
       if
        local.get $0
        local.get $2
        i32.const -4
        i32.and
        local.get $1
        i32.or
        i32.store offset=4
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
       end
       local.get $0
       i32.load offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $0
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $0
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $0
     i32.load offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    return
   end
   global.get $~lib/rt/itcms/iter
   local.tee $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    i32.load offset=4
    local.tee $1
    i32.const -4
    i32.and
    global.set $~lib/rt/itcms/iter
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.get $1
    i32.const 3
    i32.and
    i32.ne
    if
     i32.const 0
     i32.const 1456
     i32.const 229
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 152408
    i32.lt_u
    if
     local.get $0
     i32.const 0
     i32.store offset=4
     local.get $0
     i32.const 0
     i32.store offset=8
    else
     global.get $~lib/rt/itcms/total
     local.get $0
     i32.load
     i32.const -4
     i32.and
     i32.const 4
     i32.add
     i32.sub
     global.set $~lib/rt/itcms/total
     local.get $0
     i32.const 4
     i32.add
     local.tee $0
     i32.const 152408
     i32.ge_u
     if
      global.get $~lib/rt/tlsf/ROOT
      i32.eqz
      if
       call $~lib/rt/tlsf/initialize
      end
      global.get $~lib/rt/tlsf/ROOT
      local.set $1
      local.get $0
      i32.const 4
      i32.sub
      local.set $2
      local.get $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if (result i32)
       i32.const 1
      else
       local.get $2
       i32.load
       i32.const 1
       i32.and
      end
      if
       i32.const 0
       i32.const 1728
       i32.const 562
       i32.const 3
       call $~lib/builtins/abort
       unreachable
      end
      local.get $2
      local.get $2
      i32.load
      i32.const 1
      i32.or
      i32.store
      local.get $1
      local.get $2
      call $~lib/rt/tlsf/insertBlock
     end
    end
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   i32.store offset=4
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   i32.store offset=8
   i32.const 0
   global.set $~lib/rt/itcms/state
  end
  i32.const 0
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $1
  else
   local.get $1
   i32.const 536870910
   i32.lt_u
   if
    local.get $1
    i32.const 1
    i32.const 27
    local.get $1
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
    local.set $1
   end
   local.get $1
   i32.const 31
   local.get $1
   i32.clz
   i32.sub
   local.tee $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $1
   local.get $2
   i32.const 7
   i32.sub
   local.set $2
  end
  local.get $1
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1728
   i32.const 334
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
  else
   local.get $0
   i32.load
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 1728
     i32.const 347
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 1392
   i32.const 1456
   i32.const 261
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt$68
    i32.const 2048
    local.set $2
    loop $do-loop|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt$68
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-loop|0
    end
    global.get $~lib/rt/itcms/total
    global.get $~lib/rt/itcms/total
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.set $4
  local.get $0
  i32.const 16
  i32.add
  local.tee $2
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1392
   i32.const 1728
   i32.const 461
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $2
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $2
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
  end
  local.tee $5
  call $~lib/rt/tlsf/searchBlock
  local.tee $2
  i32.eqz
  if
   memory.size
   local.tee $2
   local.get $5
   i32.const 256
   i32.ge_u
   if (result i32)
    local.get $5
    i32.const 536870910
    i32.lt_u
    if (result i32)
     local.get $5
     i32.const 1
     i32.const 27
     local.get $5
     i32.clz
     i32.sub
     i32.shl
     i32.add
     i32.const 1
     i32.sub
    else
     local.get $5
    end
   else
    local.get $5
   end
   i32.const 4
   local.get $4
   i32.load offset=1568
   local.get $2
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   i32.ne
   i32.shl
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $3
   local.get $2
   local.get $3
   i32.gt_s
   select
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $3
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $4
   local.get $2
   i32.const 16
   i32.shl
   memory.size
   i64.extend_i32_s
   i64.const 16
   i64.shl
   call $~lib/rt/tlsf/addMemory
   local.get $4
   local.get $5
   call $~lib/rt/tlsf/searchBlock
   local.tee $2
   i32.eqz
   if
    i32.const 0
    i32.const 1728
    i32.const 499
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $5
  local.get $2
  i32.load
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 1728
   i32.const 501
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $2
  call $~lib/rt/tlsf/removeBlock
  local.get $2
  i32.load
  local.set $6
  local.get $5
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 1728
   i32.const 361
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $6
  i32.const -4
  i32.and
  local.get $5
  i32.sub
  local.tee $3
  i32.const 16
  i32.ge_u
  if
   local.get $2
   local.get $5
   local.get $6
   i32.const 2
   i32.and
   i32.or
   i32.store
   local.get $2
   i32.const 4
   i32.add
   local.get $5
   i32.add
   local.tee $5
   local.get $3
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store
   local.get $4
   local.get $5
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $2
   local.get $6
   i32.const -2
   i32.and
   i32.store
   local.get $2
   i32.const 4
   i32.add
   local.get $2
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   local.get $3
   i32.load
   i32.const -3
   i32.and
   i32.store
  end
  local.get $2
  local.get $1
  i32.store offset=12
  local.get $2
  local.get $0
  i32.store offset=16
  global.get $~lib/rt/itcms/fromSpace
  local.tee $1
  i32.load offset=8
  local.set $3
  local.get $2
  local.get $1
  global.get $~lib/rt/itcms/white
  i32.or
  i32.store offset=4
  local.get $2
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $2
  local.get $3
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=8
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  i32.const 0
  local.get $0
  memory.fill
  local.get $1
 )
 (func $~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  i32.eqz
  if
   return
  end
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 1456
   i32.const 295
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/white
  local.get $1
  i32.const 20
  i32.sub
  local.tee $1
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $0
   i32.load offset=4
   i32.const 3
   i32.and
   local.tee $3
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $0
    local.get $1
    local.get $2
    select
    call $~lib/rt/itcms/Object#makeGray
   else
    global.get $~lib/rt/itcms/state
    i32.const 1
    i32.eq
    local.get $3
    i32.const 3
    i32.eq
    i32.and
    if
     local.get $1
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/util/string/compareImpl (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $1
  local.get $3
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $1
   i32.const 7
   i32.and
   local.get $2
   i32.const 7
   i32.and
   i32.or
  else
   i32.const 1
  end
  i32.eqz
  if
   loop $do-loop|0
    local.get $1
    i64.load
    local.get $2
    i64.load
    i64.eq
    if
     local.get $1
     i32.const 8
     i32.add
     local.set $1
     local.get $2
     i32.const 8
     i32.add
     local.set $2
     local.get $3
     i32.const 4
     i32.sub
     local.tee $3
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $3
   local.tee $0
   i32.const 1
   i32.sub
   local.set $3
   local.get $0
   if
    local.get $1
    i32.load16_u
    local.tee $0
    local.get $2
    i32.load16_u
    local.tee $4
    i32.ne
    if
     local.get $0
     local.get $4
     i32.sub
     return
    end
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    local.get $2
    i32.const 2
    i32.add
    local.set $2
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $start:assembly/core/module-interfaces
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 72
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/validation/ValidationMetadata.metadata
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 73
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 79
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 78
   i32.const 5936
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 80
   i32.const 5968
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 100
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/event-system/globalEventBus
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 82
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 86
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 87
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/module-interfaces/moduleRegistry
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/core/plugin-system
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 88
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,assembly/core/plugin-system/PluginRegistration>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 93
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/object/Object#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 94
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.store
   local.get $2
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 95
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/object/Object#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,assembly/core/plugin-system/PluginRegistration>#constructor"
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 91
   i32.const 6000
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $~lib/set/Set<~lib/string/String>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $~lib/set/Set<~lib/string/String>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=12
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,~lib/set/Set<~lib/string/String>>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 99
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=16
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/plugin-system/pluginManager
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 101
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 102
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/plugin-system/serviceLocator
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/rt/itcms/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  local.tee $3
  i32.load
  i32.const -4
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $3
   local.get $1
   i32.store offset=16
   local.get $0
   return
  end
  local.get $1
  local.get $3
  i32.load offset=12
  call $~lib/rt/itcms/__new
  local.tee $2
  local.get $0
  local.get $1
  local.get $3
  i32.load offset=16
  local.tee $0
  local.get $0
  local.get $1
  i32.gt_u
  select
  memory.copy
  local.get $2
 )
 (func $start:assembly/test-index
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  call $start:assembly/runtime/instructions
  call $start:assembly/core/module-interfaces
  call $start:assembly/core/plugin-system
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#constructor"
   global.set $assembly/tests/runtime.test/mockInstructionHandlers
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/tests/runtime.test/mockInstructionHandlers
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 6032
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 103
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/object/Object#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   i32.const 6032
   local.get $2
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/tests/runtime.test/mockInstructionHandlers
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3888
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 104
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/object/Object#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   i32.const 3888
   local.get $2
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/tests/runtime.test/mockInstructionHandlers
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 6080
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 105
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/object/Object#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   i32.const 6080
   local.get $2
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/tests/runtime.test/mockInstructionHandlers
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 6112
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 106
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/object/Object#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   i32.const 6112
   local.get $2
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/tests/runtime.test/mockInstructionHandlers
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3792
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 107
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/object/Object#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   i32.const 3792
   local.get $2
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $1
   i32.store
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#clear"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/tests/runtime.test/mockInstructionHandlers
   local.tee $1
   i32.store offset=8
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#keys"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 6304
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.load offset=12
   local.set $2
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $0
    local.get $2
    local.get $1
    i32.load offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     i32.const 3
     global.set $~argumentsLength
     local.get $3
     local.get $0
     local.get $1
     i32.const 6304
     i32.load
     call_indirect (type $7)
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/core-math.test/testIsPrime
  (local $0 i32)
  (local $1 i32)
  i32.const 5
  local.set $0
  block $__inlined_func$assembly/core/math/isPrime$135
   loop $while-continue|02
    local.get $0
    local.get $0
    i32.mul
    i32.const 5
    i32.le_s
    if
     i32.const 5
     local.get $0
     i32.rem_s
     if (result i32)
      i32.const 5
      local.get $0
      i32.const 2
      i32.add
      i32.rem_s
     else
      i32.const 0
     end
     i32.eqz
     br_if $__inlined_func$assembly/core/math/isPrime$135
     local.get $0
     i32.const 6
     i32.add
     local.set $0
     br $while-continue|02
    end
   end
   i32.const 1
   local.set $1
  end
  local.get $1
  i32.eqz
  if
   i32.const 6800
   i32.const 6640
   i32.const 27
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 5
  local.set $0
  block $__inlined_func$assembly/core/math/isPrime$136
   loop $while-continue|03
    local.get $0
    local.get $0
    i32.mul
    i32.const 7
    i32.le_s
    if
     i32.const 0
     local.set $1
     i32.const 7
     local.get $0
     i32.rem_s
     if (result i32)
      i32.const 7
      local.get $0
      i32.const 2
      i32.add
      i32.rem_s
     else
      i32.const 0
     end
     i32.eqz
     br_if $__inlined_func$assembly/core/math/isPrime$136
     local.get $0
     i32.const 6
     i32.add
     local.set $0
     br $while-continue|03
    end
   end
   i32.const 1
   local.set $1
  end
  local.get $1
  i32.eqz
  if
   i32.const 6864
   i32.const 6640
   i32.const 28
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 5
  local.set $0
  block $__inlined_func$assembly/core/math/isPrime$137
   loop $while-continue|04
    local.get $0
    local.get $0
    i32.mul
    i32.const 11
    i32.le_s
    if
     i32.const 0
     local.set $1
     i32.const 11
     local.get $0
     i32.rem_s
     if (result i32)
      i32.const 11
      local.get $0
      i32.const 2
      i32.add
      i32.rem_s
     else
      i32.const 0
     end
     i32.eqz
     br_if $__inlined_func$assembly/core/math/isPrime$137
     local.get $0
     i32.const 6
     i32.add
     local.set $0
     br $while-continue|04
    end
   end
   i32.const 1
   local.set $1
  end
  local.get $1
  i32.eqz
  if
   i32.const 6928
   i32.const 6640
   i32.const 29
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 5
  local.set $0
  block $__inlined_func$assembly/core/math/isPrime$138
   loop $while-continue|05
    local.get $0
    local.get $0
    i32.mul
    i32.const 13
    i32.le_s
    if
     i32.const 0
     local.set $1
     i32.const 13
     local.get $0
     i32.rem_s
     if (result i32)
      i32.const 13
      local.get $0
      i32.const 2
      i32.add
      i32.rem_s
     else
      i32.const 0
     end
     i32.eqz
     br_if $__inlined_func$assembly/core/math/isPrime$138
     local.get $0
     i32.const 6
     i32.add
     local.set $0
     br $while-continue|05
    end
   end
   i32.const 1
   local.set $1
  end
  local.get $1
  i32.eqz
  if
   i32.const 6992
   i32.const 6640
   i32.const 30
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 5
  local.set $0
  block $__inlined_func$assembly/core/math/isPrime$146
   loop $while-continue|013
    local.get $0
    local.get $0
    i32.mul
    i32.const 97
    i32.le_s
    if
     i32.const 0
     local.set $1
     i32.const 97
     local.get $0
     i32.rem_s
     if (result i32)
      i32.const 97
      local.get $0
      i32.const 2
      i32.add
      i32.rem_s
     else
      i32.const 0
     end
     i32.eqz
     br_if $__inlined_func$assembly/core/math/isPrime$146
     local.get $0
     i32.const 6
     i32.add
     local.set $0
     br $while-continue|013
    end
   end
   i32.const 1
   local.set $1
  end
  local.get $1
  i32.eqz
  if
   i32.const 7504
   i32.const 6640
   i32.const 42
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 5
  local.set $0
  block $__inlined_func$assembly/core/math/isPrime$147
   loop $while-continue|014
    local.get $0
    local.get $0
    i32.mul
    i32.const 101
    i32.le_s
    if
     i32.const 0
     local.set $1
     i32.const 101
     local.get $0
     i32.rem_s
     if (result i32)
      i32.const 101
      local.get $0
      i32.const 2
      i32.add
      i32.rem_s
     else
      i32.const 0
     end
     i32.eqz
     br_if $__inlined_func$assembly/core/math/isPrime$147
     local.get $0
     i32.const 6
     i32.add
     local.set $0
     br $while-continue|014
    end
   end
   i32.const 1
   local.set $1
  end
  local.get $1
  i32.eqz
  if
   i32.const 7568
   i32.const 6640
   i32.const 43
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 5
  local.set $0
  block $__inlined_func$assembly/core/math/isPrime$148
   loop $while-continue|015
    local.get $0
    local.get $0
    i32.mul
    i32.const 103
    i32.le_s
    if
     i32.const 0
     local.set $1
     i32.const 103
     local.get $0
     i32.rem_s
     if (result i32)
      i32.const 103
      local.get $0
      i32.const 2
      i32.add
      i32.rem_s
     else
      i32.const 0
     end
     i32.eqz
     br_if $__inlined_func$assembly/core/math/isPrime$148
     local.get $0
     i32.const 6
     i32.add
     local.set $0
     br $while-continue|015
    end
   end
   i32.const 1
   local.set $1
  end
  local.get $1
  i32.eqz
  if
   i32.const 7632
   i32.const 6640
   i32.const 44
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/math/NativeMath.random (result f64)
  (local $0 i64)
  (local $1 i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   call $~lib/builtins/seed
   i64.reinterpret_f64
   local.tee $0
   i64.eqz
   if
    i64.const -7046029254386353131
    local.set $0
   end
   local.get $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $0
   i64.const 33
   i64.shr_u
   local.get $0
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $0
   i64.const 33
   i64.shr_u
   local.get $0
   i64.xor
   global.set $~lib/math/random_state0_64
   global.get $~lib/math/random_state0_64
   i64.const -1
   i64.xor
   local.tee $0
   i64.const 33
   i64.shr_u
   local.get $0
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $0
   i64.const 33
   i64.shr_u
   local.get $0
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $0
   i64.const 33
   i64.shr_u
   local.get $0
   i64.xor
   global.set $~lib/math/random_state1_64
   i32.const 1
   global.set $~lib/math/random_seeded
  end
  global.get $~lib/math/random_state0_64
  local.set $1
  global.get $~lib/math/random_state1_64
  local.tee $0
  global.set $~lib/math/random_state0_64
  local.get $0
  local.get $1
  local.get $1
  i64.const 23
  i64.shl
  i64.xor
  local.tee $1
  i64.const 17
  i64.shr_u
  local.get $1
  i64.xor
  i64.xor
  local.get $0
  i64.const 26
  i64.shr_u
  i64.xor
  global.set $~lib/math/random_state1_64
  local.get $0
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  f64.reinterpret_i64
  f64.const -1
  f64.add
 )
 (func $assembly/core/math/modExp (param $0 i64) (param $1 i64) (param $2 i64) (result i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  local.get $2
  i64.const 1
  i64.eq
  if
   i64.const 0
   return
  end
  i64.const 1
  local.set $5
  local.get $0
  local.get $2
  i64.rem_u
  local.set $0
  loop $while-continue|0
   local.get $1
   i64.const 0
   i64.ne
   if
    local.get $1
    i64.const 1
    i64.and
    i32.wrap_i64
    if
     block $__inlined_func$assembly/core/math/mulMod$155 (result i64)
      i64.const 0
      local.set $4
      local.get $0
      local.set $3
      local.get $0
      i64.const 1048576
      i64.lt_u
      local.get $5
      i64.const 1048576
      i64.lt_u
      i32.and
      if
       local.get $0
       local.get $5
       i64.mul
       local.get $2
       i64.rem_u
       br $__inlined_func$assembly/core/math/mulMod$155
      end
      local.get $5
      local.get $2
      i64.rem_u
      local.set $5
      loop $while-continue|01
       local.get $3
       i64.const 0
       i64.ne
       if
        local.get $3
        i64.const 1
        i64.and
        i32.wrap_i64
        if
         local.get $4
         local.get $5
         i64.add
         local.get $2
         i64.rem_u
         local.set $4
        end
        local.get $5
        i64.const 1
        i64.shl
        local.get $2
        i64.rem_u
        local.set $5
        local.get $3
        i64.const 1
        i64.shr_u
        local.set $3
        br $while-continue|01
       end
      end
      local.get $4
     end
     local.set $5
    end
    local.get $1
    i64.const 1
    i64.shr_u
    local.set $1
    block $__inlined_func$assembly/core/math/mulMod$156 (result i64)
     i64.const 0
     local.set $3
     local.get $0
     i64.const 1048576
     i64.lt_u
     if
      local.get $0
      local.get $0
      i64.mul
      local.get $2
      i64.rem_u
      br $__inlined_func$assembly/core/math/mulMod$156
     end
     local.get $0
     local.get $2
     i64.rem_u
     local.set $4
     loop $while-continue|02
      local.get $0
      i64.const 0
      i64.ne
      if
       local.get $0
       i64.const 1
       i64.and
       i32.wrap_i64
       if
        local.get $3
        local.get $4
        i64.add
        local.get $2
        i64.rem_u
        local.set $3
       end
       local.get $4
       i64.const 1
       i64.shl
       local.get $2
       i64.rem_u
       local.set $4
       local.get $0
       i64.const 1
       i64.shr_u
       local.set $0
       br $while-continue|02
      end
     end
     local.get $3
    end
    local.set $0
    br $while-continue|0
   end
  end
  local.get $5
 )
 (func $assembly/core/math/isPrimeLarge (param $0 i64) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i64.const 2
  i64.lt_u
  if
   i32.const 0
   return
  end
  local.get $0
  i64.const 3
  i64.eq
  local.get $0
  i64.const 2
  i64.eq
  i32.or
  if
   i32.const 1
   return
  end
  local.get $0
  i64.const 1
  i64.and
  i64.eqz
  if
   i32.const 0
   return
  end
  local.get $0
  i64.const 1
  i64.sub
  local.set $1
  loop $while-continue|0
   local.get $1
   i64.const 1
   i64.and
   i64.eqz
   if
    local.get $1
    i64.const 1
    i64.shr_u
    local.set $1
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $while-continue|0
   end
  end
  loop $for-loop|1
   local.get $5
   i32.const 5
   i32.lt_s
   if
    call $~lib/math/NativeMath.random
    local.get $0
    i64.const 4
    i64.sub
    f64.convert_i64_u
    f64.mul
    i64.trunc_sat_f64_u
    i64.const 2
    i64.add
    local.get $1
    local.get $0
    call $assembly/core/math/modExp
    local.tee $2
    local.get $0
    i64.const 1
    i64.sub
    i64.eq
    local.get $2
    i64.const 1
    i64.eq
    i32.or
    i32.eqz
    if
     i32.const 0
     local.set $6
     i32.const 0
     local.set $3
     loop $for-loop|2
      local.get $3
      local.get $4
      i32.const 1
      i32.sub
      i32.lt_s
      if
       block $for-break2
        local.get $2
        local.get $2
        i64.mul
        local.get $0
        i64.rem_u
        local.tee $2
        local.get $0
        i64.const 1
        i64.sub
        i64.eq
        if
         i32.const 1
         local.set $6
         br $for-break2
        end
        local.get $3
        i32.const 1
        i32.add
        local.set $3
        br $for-loop|2
       end
      end
     end
     local.get $6
     i32.eqz
     if
      i32.const 0
      return
     end
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  i32.const 1
 )
 (func $assembly/core/math/nextPrime (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 2
  i32.lt_s
  if
   i32.const 2
   return
  end
  local.get $0
  i32.const 1
  i32.add
  local.tee $0
  i32.const 1
  i32.and
  i32.eqz
  if
   local.get $0
   i32.const 1
   i32.add
   local.set $0
  end
  loop $while-continue|0
   i32.const 0
   local.set $2
   block $__inlined_func$assembly/core/math/isPrime$157
    local.get $0
    i32.const 1
    i32.le_s
    br_if $__inlined_func$assembly/core/math/isPrime$157
    i32.const 1
    local.set $2
    local.get $0
    i32.const 3
    i32.le_s
    br_if $__inlined_func$assembly/core/math/isPrime$157
    i32.const 0
    local.set $2
    local.get $0
    i32.const 1
    i32.and
    if (result i32)
     local.get $0
     i32.const 3
     i32.rem_s
    else
     i32.const 0
    end
    i32.eqz
    br_if $__inlined_func$assembly/core/math/isPrime$157
    i32.const 5
    local.set $1
    loop $while-continue|01
     local.get $1
     local.get $1
     i32.mul
     local.get $0
     i32.le_s
     if
      local.get $0
      local.get $1
      i32.rem_s
      if (result i32)
       local.get $0
       local.get $1
       i32.const 2
       i32.add
       i32.rem_s
      else
       i32.const 0
      end
      i32.eqz
      br_if $__inlined_func$assembly/core/math/isPrime$157
      local.get $1
      i32.const 6
      i32.add
      local.set $1
      br $while-continue|01
     end
    end
    i32.const 1
    local.set $2
   end
   local.get $2
   i32.eqz
   if
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    br $while-continue|0
   end
  end
  local.get $0
 )
 (func $assembly/core/math/factorial (param $0 i32) (result i64)
  (local $1 i32)
  (local $2 i64)
  local.get $0
  i32.const 0
  i32.lt_s
  if
   i32.const 12240
   i32.const 12352
   i32.const 717
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.eqz
  local.get $0
  i32.const 1
  i32.eq
  i32.or
  if
   i64.const 1
   return
  end
  i64.const 1
  local.set $2
  i32.const 2
  local.set $1
  loop $for-loop|0
   local.get $0
   local.get $1
   i32.ge_s
   if
    local.get $2
    local.get $1
    i64.extend_i32_s
    i64.mul
    local.set $2
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  local.get $2
 )
 (func $assembly/core/math/isqrt (param $0 i64) (result i64)
  (local $1 i64)
  (local $2 i64)
  local.get $0
  i64.const 0
  i64.lt_s
  if
   i32.const 13312
   i32.const 12352
   i32.const 681
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i64.eqz
  if
   i64.const 0
   return
  end
  local.get $0
  local.tee $1
  i64.const 1
  i64.add
  i64.const 2
  i64.div_s
  local.set $2
  loop $while-continue|0
   local.get $1
   local.get $2
   i64.gt_s
   if
    local.get $0
    local.get $2
    local.tee $1
    i64.div_s
    local.get $1
    i64.add
    i64.const 2
    i64.div_s
    local.set $2
    br $while-continue|0
   end
  end
  local.get $1
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   if
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $3
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $1
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 15228
    i32.add
    i64.load32_u
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 15228
    i32.add
    i64.load32_u
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 100
   i32.rem_u
   i32.const 2
   i32.shl
   i32.const 15228
   i32.add
   i32.load
   i32.store
   local.get $1
   i32.const 100
   i32.div_u
   local.set $1
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 2
   i32.shl
   i32.const 15228
   i32.add
   i32.load
   i32.store
  else
   local.get $0
   local.get $2
   i32.const 1
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 48
   i32.add
   i32.store16
  end
 )
 (func $~lib/util/number/utoa64_any_core (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i32)
  (local $4 i64)
  (local $5 i64)
  local.get $3
  i64.extend_i32_s
  local.set $5
  local.get $3
  local.get $3
  i32.const 1
  i32.sub
  i32.and
  if
   loop $do-loop|1
    local.get $0
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $1
    local.get $1
    local.get $5
    i64.div_u
    local.tee $1
    local.get $5
    i64.mul
    i64.sub
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.const 16704
    i32.add
    i32.load16_u
    i32.store16
    local.get $1
    i64.const 0
    i64.ne
    br_if $do-loop|1
   end
  else
   local.get $3
   i32.ctz
   i32.const 7
   i32.and
   i64.extend_i32_s
   local.set $4
   local.get $5
   i64.const 1
   i64.sub
   local.set $5
   loop $do-loop|0
    local.get $0
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $1
    local.get $5
    i64.and
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.const 16704
    i32.add
    i32.load16_u
    i32.store16
    local.get $1
    local.get $4
    i64.shr_u
    local.tee $1
    i64.const 0
    i64.ne
    br_if $do-loop|0
   end
  end
 )
 (func $~lib/util/number/genDigits (param $0 i64) (param $1 i64) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  local.get $1
  local.get $0
  i64.sub
  local.set $10
  i64.const 1
  i32.const 0
  local.get $2
  i32.sub
  local.tee $11
  i64.extend_i32_s
  local.tee $0
  i64.shl
  local.tee $7
  i64.const 1
  i64.sub
  local.tee $12
  local.get $1
  i64.and
  local.set $9
  local.get $1
  local.get $0
  i64.shr_u
  i32.wrap_i64
  local.tee $5
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $5
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $5
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $5
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $5
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $5
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $5
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $5
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $5
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $8
  loop $while-continue|0
   local.get $8
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $8
                i32.const 1
                i32.sub
                br_table $case9|1 $case8|1 $case7|1 $case6|1 $case5|1 $case4|1 $case3|1 $case2|1 $case1|1 $case0|1 $case10|1
               end
               local.get $5
               i32.const 1000000000
               i32.div_u
               local.set $6
               local.get $5
               i32.const 1000000000
               i32.rem_u
               local.set $5
               br $break|1
              end
              local.get $5
              i32.const 100000000
              i32.div_u
              local.set $6
              local.get $5
              i32.const 100000000
              i32.rem_u
              local.set $5
              br $break|1
             end
             local.get $5
             i32.const 10000000
             i32.div_u
             local.set $6
             local.get $5
             i32.const 10000000
             i32.rem_u
             local.set $5
             br $break|1
            end
            local.get $5
            i32.const 1000000
            i32.div_u
            local.set $6
            local.get $5
            i32.const 1000000
            i32.rem_u
            local.set $5
            br $break|1
           end
           local.get $5
           i32.const 100000
           i32.div_u
           local.set $6
           local.get $5
           i32.const 100000
           i32.rem_u
           local.set $5
           br $break|1
          end
          local.get $5
          i32.const 10000
          i32.div_u
          local.set $6
          local.get $5
          i32.const 10000
          i32.rem_u
          local.set $5
          br $break|1
         end
         local.get $5
         i32.const 1000
         i32.div_u
         local.set $6
         local.get $5
         i32.const 1000
         i32.rem_u
         local.set $5
         br $break|1
        end
        local.get $5
        i32.const 100
        i32.div_u
        local.set $6
        local.get $5
        i32.const 100
        i32.rem_u
        local.set $5
        br $break|1
       end
       local.get $5
       i32.const 10
       i32.div_u
       local.set $6
       local.get $5
       i32.const 10
       i32.rem_u
       local.set $5
       br $break|1
      end
      local.get $5
      local.set $6
      i32.const 0
      local.set $5
      br $break|1
     end
     i32.const 0
     local.set $6
    end
    local.get $4
    local.get $6
    i32.or
    if
     local.get $4
     local.tee $2
     i32.const 1
     i32.add
     local.set $4
     local.get $2
     i32.const 1
     i32.shl
     i32.const 26160
     i32.add
     local.get $6
     i32.const 65535
     i32.and
     i32.const 48
     i32.add
     i32.store16
    end
    local.get $8
    i32.const 1
    i32.sub
    local.set $8
    local.get $3
    local.get $5
    i64.extend_i32_u
    local.get $11
    i64.extend_i32_s
    local.tee $1
    i64.shl
    local.get $9
    i64.add
    local.tee $0
    i64.ge_u
    if
     global.get $~lib/util/number/_K
     local.get $8
     i32.add
     global.set $~lib/util/number/_K
     local.get $8
     i32.const 2
     i32.shl
     i32.const 27088
     i32.add
     i64.load32_u
     local.get $1
     i64.shl
     local.set $7
     local.get $4
     i32.const 1
     i32.shl
     i32.const 26158
     i32.add
     local.tee $2
     i32.load16_u
     local.set $6
     loop $while-continue|3
      local.get $0
      local.get $10
      i64.lt_u
      local.get $3
      local.get $0
      i64.sub
      local.get $7
      i64.ge_u
      i32.and
      if (result i32)
       local.get $10
       local.get $0
       local.get $7
       i64.add
       local.tee $1
       i64.gt_u
       local.get $10
       local.get $0
       i64.sub
       local.get $1
       local.get $10
       i64.sub
       i64.gt_u
       i32.or
      else
       i32.const 0
      end
      if
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       local.get $0
       local.get $7
       i64.add
       local.set $0
       br $while-continue|3
      end
     end
     local.get $2
     local.get $6
     i32.store16
     local.get $4
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   local.get $3
   i64.const 10
   i64.mul
   local.set $3
   local.get $9
   i64.const 10
   i64.mul
   local.tee $1
   local.get $11
   i64.extend_i32_s
   i64.shr_u
   local.tee $0
   local.get $4
   i64.extend_i32_s
   i64.or
   i64.const 0
   i64.ne
   if
    local.get $4
    local.tee $2
    i32.const 1
    i32.add
    local.set $4
    local.get $2
    i32.const 1
    i32.shl
    i32.const 26160
    i32.add
    local.get $0
    i32.wrap_i64
    i32.const 65535
    i32.and
    i32.const 48
    i32.add
    i32.store16
   end
   local.get $8
   i32.const 1
   i32.sub
   local.set $8
   local.get $1
   local.get $12
   i64.and
   local.tee $9
   local.get $3
   i64.ge_u
   br_if $while-continue|4
  end
  global.get $~lib/util/number/_K
  local.get $8
  i32.add
  global.set $~lib/util/number/_K
  local.get $10
  i32.const 0
  local.get $8
  i32.sub
  i32.const 2
  i32.shl
  i32.const 27088
  i32.add
  i64.load32_u
  i64.mul
  local.set $1
  local.get $4
  i32.const 1
  i32.shl
  i32.const 26158
  i32.add
  local.tee $2
  i32.load16_u
  local.set $6
  loop $while-continue|6
   local.get $1
   local.get $9
   i64.gt_u
   local.get $3
   local.get $9
   i64.sub
   local.get $7
   i64.ge_u
   i32.and
   if (result i32)
    local.get $1
    local.get $7
    local.get $9
    i64.add
    local.tee $0
    i64.gt_u
    local.get $1
    local.get $9
    i64.sub
    local.get $0
    local.get $1
    i64.sub
    i64.gt_u
    i32.or
   else
    i32.const 0
   end
   if
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    local.get $7
    local.get $9
    i64.add
    local.set $9
    br $while-continue|6
   end
  end
  local.get $2
  local.get $6
  i32.store16
  local.get $4
 )
 (func $~lib/util/number/prettify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store
   local.get $1
   i32.const 2
   i32.add
   return
  end
  local.get $1
  local.get $2
  i32.add
  local.tee $3
  i32.const 21
  i32.le_s
  local.get $1
  local.get $3
  i32.le_s
  i32.and
  if (result i32)
   loop $for-loop|0
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   local.get $0
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store
   local.get $3
   i32.const 2
   i32.add
  else
   local.get $3
   i32.const 21
   i32.le_s
   local.get $3
   i32.const 0
   i32.gt_s
   i32.and
   if (result i32)
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.tee $0
    i32.const 2
    i32.add
    local.get $0
    i32.const 0
    local.get $2
    i32.sub
    i32.const 1
    i32.shl
    memory.copy
    local.get $0
    i32.const 46
    i32.store16
    local.get $1
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 0
    i32.le_s
    local.get $3
    i32.const -6
    i32.gt_s
    i32.and
    if (result i32)
     local.get $0
     i32.const 2
     local.get $3
     i32.sub
     local.tee $3
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     memory.copy
     local.get $0
     i32.const 3014704
     i32.store
     i32.const 2
     local.set $2
     loop $for-loop|1
      local.get $2
      local.get $3
      i32.lt_s
      if
       local.get $0
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $1
     local.get $3
     i32.add
    else
     local.get $1
     i32.const 1
     i32.eq
     if
      local.get $0
      i32.const 101
      i32.store16 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $2
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $3
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $1
      call $~lib/util/number/utoa32_dec_lut
      local.get $2
      i32.const 45
      i32.const 43
      local.get $3
      select
      i32.store16
     else
      local.get $0
      i32.const 4
      i32.add
      local.get $0
      i32.const 2
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      local.tee $2
      i32.const 2
      i32.sub
      memory.copy
      local.get $0
      i32.const 46
      i32.store16 offset=2
      local.get $0
      local.get $2
      i32.add
      local.tee $0
      i32.const 101
      i32.store16 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $4
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $2
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $0
      call $~lib/util/number/utoa32_dec_lut
      local.get $4
      i32.const 45
      i32.const 43
      local.get $2
      select
      i32.store16
      local.get $0
      local.get $1
      i32.add
      local.set $1
     end
     local.get $1
     i32.const 2
     i32.add
    end
   end
  end
 )
 (func $~lib/util/number/dtoa_core (param $0 f64) (result i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  local.get $0
  f64.const 0
  f64.lt
  local.tee $2
  if (result f64)
   i32.const 26160
   i32.const 45
   i32.store16
   local.get $0
   f64.neg
  else
   local.get $0
  end
  i64.reinterpret_f64
  local.tee $1
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.tee $4
  i32.const 1
  local.get $4
  select
  i32.const 1075
  i32.sub
  local.tee $8
  i32.const 1
  i32.sub
  local.get $1
  i64.const 4503599627370495
  i64.and
  local.get $4
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  i64.add
  local.tee $1
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.tee $3
  i64.clz
  i32.wrap_i64
  local.tee $9
  i32.sub
  local.set $4
  local.get $3
  local.get $9
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_plus
  local.get $1
  local.get $1
  i64.const 4503599627370496
  i64.eq
  i32.const 1
  i32.add
  local.tee $9
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $8
  local.get $9
  i32.sub
  local.get $4
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $4
  global.set $~lib/util/number/_exp
  i32.const 348
  i32.const -61
  global.get $~lib/util/number/_exp
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.tee $0
  i32.trunc_sat_f64_s
  local.tee $4
  local.get $4
  f64.convert_i32_s
  local.get $0
  f64.ne
  i32.add
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.tee $4
  i32.const 3
  i32.shl
  local.tee $8
  i32.sub
  global.set $~lib/util/number/_K
  local.get $8
  i32.const 26216
  i32.add
  i64.load
  global.set $~lib/util/number/_frc_pow
  local.get $4
  i32.const 1
  i32.shl
  i32.const 26912
  i32.add
  i32.load16_s
  global.set $~lib/util/number/_exp_pow
  local.get $1
  local.get $1
  i64.clz
  i64.shl
  local.tee $1
  i64.const 4294967295
  i64.and
  local.set $5
  global.get $~lib/util/number/_frc_pow
  local.tee $10
  i64.const 4294967295
  i64.and
  local.tee $11
  local.get $1
  i64.const 32
  i64.shr_u
  local.tee $1
  i64.mul
  local.get $5
  local.get $11
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $6
  global.get $~lib/util/number/_frc_plus
  local.tee $3
  i64.const 4294967295
  i64.and
  local.set $12
  local.get $3
  i64.const 32
  i64.shr_u
  local.tee $3
  local.get $11
  i64.mul
  local.get $11
  local.get $12
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $7
  global.get $~lib/util/number/_frc_minus
  local.tee $13
  i64.const 4294967295
  i64.and
  local.set $14
  local.get $13
  i64.const 32
  i64.shr_u
  local.tee $13
  local.get $11
  i64.mul
  local.get $11
  local.get $14
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $11
  local.get $2
  i32.const 1
  i32.shl
  i32.const 26160
  i32.add
  local.get $1
  local.get $10
  i64.const 32
  i64.shr_u
  local.tee $1
  i64.mul
  local.get $6
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $5
  i64.mul
  local.get $6
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $3
  i64.mul
  local.get $7
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $12
  i64.mul
  local.get $7
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.sub
  local.tee $3
  global.get $~lib/util/number/_exp_pow
  global.get $~lib/util/number/_exp
  i32.add
  i32.const -64
  i32.sub
  local.get $3
  local.get $1
  local.get $13
  i64.mul
  local.get $11
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $14
  i64.mul
  local.get $11
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.add
  i64.sub
  local.get $2
  call $~lib/util/number/genDigits
  local.get $2
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.get $2
  i32.add
 )
 (func $~lib/number/F64#toString (param $0 f64) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 26016
  local.set $1
  block $~lib/util/number/dtoa_impl|inlined.0
   local.get $0
   f64.const 0
   f64.eq
   br_if $~lib/util/number/dtoa_impl|inlined.0
   local.get $0
   local.get $0
   f64.sub
   f64.const 0
   f64.ne
   if
    i32.const 26048
    local.set $1
    local.get $0
    local.get $0
    f64.ne
    br_if $~lib/util/number/dtoa_impl|inlined.0
    i32.const 26080
    i32.const 26128
    local.get $0
    f64.const 0
    f64.lt
    select
    local.set $1
    br $~lib/util/number/dtoa_impl|inlined.0
   end
   local.get $0
   call $~lib/util/number/dtoa_core
   i32.const 1
   i32.shl
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 26160
   local.get $2
   memory.copy
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/number/I32#toString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  block $__inlined_func$~lib/util/number/itoa32$185 (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   if
    i32.const 152432
    i32.const 152480
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $1
   i32.const 2
   i32.lt_s
   local.get $1
   i32.const 36
   i32.gt_s
   i32.or
   if
    i32.const 15024
    i32.const 15152
    i32.const 373
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 15216
    br $__inlined_func$~lib/util/number/itoa32$185
   end
   i32.const 0
   local.get $0
   i32.sub
   local.get $0
   local.get $0
   i32.const 31
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $3
   select
   local.set $2
   local.get $1
   i32.const 10
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.const 100000
    i32.lt_u
    if (result i32)
     local.get $2
     i32.const 100
     i32.lt_u
     if (result i32)
      local.get $2
      i32.const 10
      i32.ge_u
      i32.const 1
      i32.add
     else
      local.get $2
      i32.const 10000
      i32.ge_u
      i32.const 3
      i32.add
      local.get $2
      i32.const 1000
      i32.ge_u
      i32.add
     end
    else
     local.get $2
     i32.const 10000000
     i32.lt_u
     if (result i32)
      local.get $2
      i32.const 1000000
      i32.ge_u
      i32.const 6
      i32.add
     else
      local.get $2
      i32.const 1000000000
      i32.ge_u
      i32.const 8
      i32.add
      local.get $2
      i32.const 100000000
      i32.ge_u
      i32.add
     end
    end
    local.tee $1
    i32.const 1
    i32.shl
    local.get $3
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
    local.get $0
    local.get $3
    i32.add
    local.get $2
    local.get $1
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $1
    i32.const 16
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 31
     local.get $2
     i32.clz
     i32.sub
     i32.const 2
     i32.shr_s
     i32.const 1
     i32.add
     local.tee $1
     i32.const 1
     i32.shl
     local.get $3
     i32.add
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $0
     i32.store
     local.get $0
     local.get $3
     i32.add
     local.set $7
     local.get $2
     i64.extend_i32_u
     local.set $4
     loop $while-continue|0
      local.get $1
      i32.const 2
      i32.ge_u
      if
       local.get $7
       local.get $1
       i32.const 2
       i32.sub
       local.tee $1
       i32.const 1
       i32.shl
       i32.add
       local.get $4
       i32.wrap_i64
       i32.const 255
       i32.and
       i32.const 2
       i32.shl
       i32.const 15648
       i32.add
       i32.load
       i32.store
       local.get $4
       i64.const 8
       i64.shr_u
       local.set $4
       br $while-continue|0
      end
     end
     local.get $1
     i32.const 1
     i32.and
     if
      local.get $7
      local.get $4
      i32.wrap_i64
      i32.const 6
      i32.shl
      i32.const 15648
      i32.add
      i32.load16_u
      i32.store16
     end
    else
     global.get $~lib/memory/__stack_pointer
     block $__inlined_func$~lib/util/number/ulog_base$3373 (result i32)
      local.get $2
      i64.extend_i32_u
      local.set $4
      local.get $1
      i32.popcnt
      i32.const 1
      i32.eq
      if
       i32.const 63
       local.get $4
       i64.clz
       i32.wrap_i64
       i32.sub
       i32.const 31
       local.get $1
       i32.clz
       i32.sub
       i32.div_u
       i32.const 1
       i32.add
       br $__inlined_func$~lib/util/number/ulog_base$3373
      end
      local.get $1
      i64.extend_i32_s
      local.tee $6
      local.set $5
      i32.const 1
      local.set $0
      loop $while-continue|01
       local.get $4
       local.get $5
       i64.ge_u
       if
        local.get $4
        local.get $5
        i64.div_u
        local.set $4
        local.get $5
        local.get $5
        i64.mul
        local.set $5
        local.get $0
        i32.const 1
        i32.shl
        local.set $0
        br $while-continue|01
       end
      end
      loop $while-continue|1
       local.get $4
       i64.const 0
       i64.ne
       if
        local.get $4
        local.get $6
        i64.div_u
        local.set $4
        local.get $0
        i32.const 1
        i32.add
        local.set $0
        br $while-continue|1
       end
      end
      local.get $0
      i32.const 1
      i32.sub
     end
     local.tee $7
     i32.const 1
     i32.shl
     local.get $3
     i32.add
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $0
     i32.store
     local.get $0
     local.get $3
     i32.add
     local.get $2
     i64.extend_i32_u
     local.get $7
     local.get $1
     call $~lib/util/number/utoa64_any_core
    end
   end
   local.get $3
   if
    local.get $0
    i32.const 45
    i32.store16
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
  end
 )
 (func $~lib/math/ipow32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 5
  local.set $1
  i32.const 1
  local.set $2
  local.get $0
  i32.const 0
  i32.le_s
  if
   local.get $0
   i32.eqz
   return
  else
   local.get $0
   i32.const 1
   i32.eq
   if
    i32.const 5
    return
   else
    local.get $0
    i32.const 2
    i32.eq
    if
     i32.const 25
     return
    else
     local.get $0
     i32.const 32
     i32.lt_s
     if
      block $break|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            i32.const 31
            local.get $0
            i32.clz
            i32.sub
            br_table $case4|0 $case3|0 $case2|0 $case1|0 $case0|0 $break|0
           end
           i32.const 5
           i32.const 1
           local.get $0
           i32.const 1
           i32.and
           select
           local.set $2
           local.get $0
           i32.const 1
           i32.shr_u
           local.set $0
           i32.const 25
           local.set $1
          end
          local.get $1
          local.get $2
          i32.mul
          local.get $2
          local.get $0
          i32.const 1
          i32.and
          select
          local.set $2
          local.get $0
          i32.const 1
          i32.shr_u
          local.set $0
          local.get $1
          local.get $1
          i32.mul
          local.set $1
         end
         local.get $1
         local.get $2
         i32.mul
         local.get $2
         local.get $0
         i32.const 1
         i32.and
         select
         local.set $2
         local.get $0
         i32.const 1
         i32.shr_u
         local.set $0
         local.get $1
         local.get $1
         i32.mul
         local.set $1
        end
        local.get $1
        local.get $2
        i32.mul
        local.get $2
        local.get $0
        i32.const 1
        i32.and
        select
        local.set $2
        local.get $0
        i32.const 1
        i32.shr_u
        local.set $0
        local.get $1
        local.get $1
        i32.mul
        local.set $1
       end
       local.get $1
       local.get $2
       i32.mul
       local.get $2
       local.get $0
       i32.const 1
       i32.and
       select
       local.set $2
      end
      local.get $2
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $0
   if
    local.get $1
    local.get $2
    i32.mul
    local.get $2
    local.get $0
    i32.const 1
    i32.and
    select
    local.set $2
    local.get $0
    i32.const 1
    i32.shr_u
    local.set $0
    local.get $1
    local.get $1
    i32.mul
    local.set $1
    br $while-continue|1
   end
  end
  local.get $2
 )
 (func $~lib/math/NativeMath.scalbn (param $0 f64) (param $1 i32) (result f64)
  local.get $1
  i32.const 1023
  i32.gt_s
  if (result f64)
   local.get $0
   f64.const 8988465674311579538646525e283
   f64.mul
   local.set $0
   local.get $1
   i32.const 1023
   i32.sub
   local.tee $1
   i32.const 1023
   i32.gt_s
   if (result f64)
    i32.const 1023
    local.get $1
    i32.const 1023
    i32.sub
    local.tee $1
    local.get $1
    i32.const 1023
    i32.ge_s
    select
    local.set $1
    local.get $0
    f64.const 8988465674311579538646525e283
    f64.mul
   else
    local.get $0
   end
  else
   local.get $1
   i32.const -1022
   i32.lt_s
   if (result f64)
    local.get $0
    f64.const 2.004168360008973e-292
    f64.mul
    local.set $0
    local.get $1
    i32.const 969
    i32.add
    local.tee $1
    i32.const -1022
    i32.lt_s
    if (result f64)
     i32.const -1022
     local.get $1
     i32.const 969
     i32.add
     local.tee $1
     local.get $1
     i32.const -1022
     i32.le_s
     select
     local.set $1
     local.get $0
     f64.const 2.004168360008973e-292
     f64.mul
    else
     local.get $0
    end
   else
    local.get $0
   end
  end
  local.get $1
  i64.extend_i32_s
  i64.const 1023
  i64.add
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  f64.mul
 )
 (func $~lib/math/pio2_large_quot (param $0 i64) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  (local $5 f64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  local.get $0
  i64.const 9223372036854775807
  i64.and
  i64.const 52
  i64.shr_u
  i64.const 1045
  i64.sub
  local.tee $1
  i64.const 63
  i64.and
  local.set $6
  local.get $1
  i64.const 6
  i64.shr_s
  i32.wrap_i64
  i32.const 3
  i32.shl
  i32.const 28608
  i32.add
  local.tee $4
  i64.load
  local.set $3
  local.get $4
  i64.load offset=8
  local.set $2
  local.get $4
  i64.load offset=16
  local.set $1
  local.get $6
  i64.const 0
  i64.ne
  if
   local.get $3
   local.get $6
   i64.shl
   local.get $2
   i64.const 64
   local.get $6
   i64.sub
   local.tee $7
   i64.shr_u
   i64.or
   local.set $3
   local.get $2
   local.get $6
   i64.shl
   local.get $1
   local.get $7
   i64.shr_u
   i64.or
   local.set $2
   local.get $1
   local.get $6
   i64.shl
   local.get $4
   i64.load offset=24
   local.get $7
   i64.shr_u
   i64.or
   local.set $1
  end
  local.get $0
  i64.const 4503599627370495
  i64.and
  i64.const 4503599627370496
  i64.or
  local.tee $6
  i64.const 4294967295
  i64.and
  local.set $7
  local.get $2
  i64.const 4294967295
  i64.and
  local.tee $8
  local.get $6
  i64.const 32
  i64.shr_u
  local.tee $9
  i64.mul
  local.get $2
  i64.const 32
  i64.shr_u
  local.tee $2
  local.get $7
  i64.mul
  local.get $7
  local.get $8
  i64.mul
  local.tee $7
  i64.const 32
  i64.shr_u
  i64.add
  local.tee $8
  i64.const 4294967295
  i64.and
  i64.add
  local.set $10
  local.get $2
  local.get $9
  i64.mul
  local.get $8
  i64.const 32
  i64.shr_u
  i64.add
  local.get $10
  i64.const 32
  i64.shr_u
  i64.add
  global.set $~lib/math/res128_hi
  local.get $9
  local.get $1
  i64.const 32
  i64.shr_u
  i64.mul
  local.tee $1
  local.get $7
  i64.const 4294967295
  i64.and
  local.get $10
  i64.const 32
  i64.shl
  i64.add
  i64.add
  local.tee $2
  local.get $1
  i64.lt_u
  i64.extend_i32_u
  global.get $~lib/math/res128_hi
  local.get $3
  local.get $6
  i64.mul
  i64.add
  i64.add
  local.tee $3
  i64.const 2
  i64.shl
  local.get $2
  i64.const 62
  i64.shr_u
  i64.or
  local.tee $6
  i64.const 63
  i64.shr_s
  local.tee $7
  local.get $2
  i64.const 2
  i64.shl
  i64.xor
  local.set $2
  local.get $6
  local.get $7
  i64.const 1
  i64.shr_s
  i64.xor
  local.tee $1
  i64.clz
  local.set $8
  local.get $1
  local.get $8
  i64.shl
  local.get $2
  i64.const 64
  local.get $8
  i64.sub
  i64.shr_u
  i64.or
  local.tee $9
  i64.const 4294967295
  i64.and
  local.set $1
  local.get $9
  i64.const 32
  i64.shr_u
  local.tee $10
  i64.const 560513588
  i64.mul
  local.get $1
  i64.const 3373259426
  i64.mul
  local.get $1
  i64.const 560513588
  i64.mul
  local.tee $11
  i64.const 32
  i64.shr_u
  i64.add
  local.tee $12
  i64.const 4294967295
  i64.and
  i64.add
  local.set $1
  local.get $10
  i64.const 3373259426
  i64.mul
  local.get $12
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  i64.const 32
  i64.shr_u
  i64.add
  global.set $~lib/math/res128_hi
  local.get $9
  f64.convert_i64_u
  f64.const 3.753184150245214e-04
  f64.mul
  local.get $2
  local.get $8
  i64.shl
  f64.convert_i64_u
  f64.const 3.834951969714103e-04
  f64.mul
  f64.add
  i64.trunc_sat_f64_u
  local.tee $2
  local.get $11
  i64.const 4294967295
  i64.and
  local.get $1
  i64.const 32
  i64.shl
  i64.add
  local.tee $1
  i64.gt_u
  i64.extend_i32_u
  global.get $~lib/math/res128_hi
  local.tee $9
  i64.const 11
  i64.shr_u
  i64.add
  f64.convert_i64_u
  global.set $~lib/math/rempio2_y0
  local.get $9
  i64.const 53
  i64.shl
  local.get $1
  i64.const 11
  i64.shr_u
  i64.or
  local.get $2
  i64.add
  f64.convert_i64_u
  f64.const 5.421010862427522e-20
  f64.mul
  global.set $~lib/math/rempio2_y1
  global.get $~lib/math/rempio2_y0
  i64.const 4372995238176751616
  local.get $8
  i64.const 52
  i64.shl
  i64.sub
  local.get $0
  local.get $6
  i64.xor
  i64.const -9223372036854775808
  i64.and
  i64.or
  f64.reinterpret_i64
  local.tee $5
  f64.mul
  global.set $~lib/math/rempio2_y0
  global.get $~lib/math/rempio2_y1
  local.get $5
  f64.mul
  global.set $~lib/math/rempio2_y1
  local.get $3
  i64.const 62
  i64.shr_s
  local.get $7
  i64.sub
  i32.wrap_i64
 )
 (func $~lib/math/NativeMath.cos (param $0 f64) (result f64)
  (local $1 f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $0
  i64.reinterpret_f64
  local.tee $5
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.tee $3
  i32.const 31
  i32.shr_u
  local.set $6
  local.get $3
  i32.const 2147483647
  i32.and
  local.tee $3
  i32.const 1072243195
  i32.le_u
  if
   local.get $3
   i32.const 1044816030
   i32.lt_u
   if
    f64.const 1
    return
   end
   local.get $0
   local.get $0
   f64.mul
   local.tee $1
   local.get $1
   f64.mul
   local.set $2
   f64.const 1
   local.get $1
   f64.const 0.5
   f64.mul
   local.tee $7
   f64.sub
   local.tee $8
   f64.const 1
   local.get $8
   f64.sub
   local.get $7
   f64.sub
   local.get $1
   local.get $1
   local.get $1
   local.get $1
   f64.const 2.480158728947673e-05
   f64.mul
   f64.const -0.001388888888887411
   f64.add
   f64.mul
   f64.const 0.0416666666666666
   f64.add
   f64.mul
   local.get $2
   local.get $2
   f64.mul
   local.get $1
   local.get $1
   f64.const -1.1359647557788195e-11
   f64.mul
   f64.const 2.087572321298175e-09
   f64.add
   f64.mul
   f64.const -2.7557314351390663e-07
   f64.add
   f64.mul
   f64.add
   f64.mul
   local.get $0
   f64.const 0
   f64.mul
   f64.sub
   f64.add
   f64.add
   return
  end
  local.get $3
  i32.const 2146435072
  i32.ge_u
  if
   local.get $0
   local.get $0
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.0 (result i32)
   local.get $5
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.tee $4
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $3
    local.get $6
    if (result f64)
     local.get $0
     f64.const 1.5707963267341256
     f64.add
     local.set $0
     i32.const -1
     local.set $3
     local.get $4
     i32.const 1073291771
     i32.ne
     if (result f64)
      local.get $0
      local.get $0
      f64.const 6.077100506506192e-11
      f64.add
      local.tee $0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
     else
      local.get $0
      f64.const 6.077100506303966e-11
      f64.add
      local.tee $1
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $0
      local.get $1
      local.get $0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
     end
    else
     local.get $0
     f64.const -1.5707963267341256
     f64.add
     local.set $0
     local.get $4
     i32.const 1073291771
     i32.ne
     if (result f64)
      local.get $0
      local.get $0
      f64.const -6.077100506506192e-11
      f64.add
      local.tee $0
      f64.sub
      f64.const -6.077100506506192e-11
      f64.add
     else
      local.get $0
      f64.const -6.077100506303966e-11
      f64.add
      local.tee $1
      f64.const -2.0222662487959506e-21
      f64.add
      local.set $0
      local.get $1
      local.get $0
      f64.sub
      f64.const -2.0222662487959506e-21
      f64.add
     end
    end
    local.set $1
    local.get $0
    global.set $~lib/math/rempio2_y0
    local.get $1
    global.set $~lib/math/rempio2_y1
    local.get $3
    br $~lib/math/rempio2|inlined.0
   end
   local.get $4
   i32.const 1094263291
   i32.lt_u
   if
    local.get $4
    i32.const 20
    i32.shr_u
    local.tee $3
    local.get $0
    local.get $0
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.tee $7
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.tee $0
    local.get $7
    f64.const 6.077100506506192e-11
    f64.mul
    local.tee $2
    f64.sub
    local.tee $1
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    i32.const 16
    i32.gt_u
    if
     local.get $7
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $0
     local.get $0
     local.get $7
     f64.const 6.077100506303966e-11
     f64.mul
     local.tee $1
     f64.sub
     local.tee $0
     f64.sub
     local.get $1
     f64.sub
     f64.sub
     local.set $2
     local.get $3
     local.get $0
     local.get $2
     f64.sub
     local.tee $1
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     i32.const 49
     i32.gt_u
     if
      local.get $7
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $0
      local.get $0
      local.get $7
      f64.const 2.0222662487111665e-21
      f64.mul
      local.tee $1
      f64.sub
      local.tee $0
      f64.sub
      local.get $1
      f64.sub
      f64.sub
      local.set $2
      local.get $0
      local.get $2
      f64.sub
      local.set $1
     end
    end
    local.get $1
    global.set $~lib/math/rempio2_y0
    local.get $0
    local.get $1
    f64.sub
    local.get $2
    f64.sub
    global.set $~lib/math/rempio2_y1
    local.get $7
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2|inlined.0
   end
   i32.const 0
   local.get $5
   call $~lib/math/pio2_large_quot
   local.tee $3
   i32.sub
   local.get $3
   local.get $6
   select
  end
  local.set $3
  global.get $~lib/math/rempio2_y0
  local.set $1
  global.get $~lib/math/rempio2_y1
  local.set $2
  local.get $3
  i32.const 1
  i32.and
  if (result f64)
   local.get $1
   local.get $1
   f64.mul
   local.tee $0
   local.get $1
   f64.mul
   local.set $7
   local.get $1
   local.get $0
   local.get $2
   f64.const 0.5
   f64.mul
   local.get $7
   local.get $0
   local.get $0
   f64.const 2.7557313707070068e-06
   f64.mul
   f64.const -1.984126982985795e-04
   f64.add
   f64.mul
   f64.const 0.00833333333332249
   f64.add
   local.get $0
   local.get $0
   local.get $0
   f64.mul
   f64.mul
   local.get $0
   f64.const 1.58969099521155e-10
   f64.mul
   f64.const -2.5050760253406863e-08
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.sub
   f64.mul
   local.get $2
   f64.sub
   local.get $7
   f64.const -0.16666666666666632
   f64.mul
   f64.sub
   f64.sub
  else
   local.get $1
   local.get $1
   f64.mul
   local.tee $7
   local.get $7
   f64.mul
   local.set $8
   f64.const 1
   local.get $7
   f64.const 0.5
   f64.mul
   local.tee $0
   f64.sub
   local.tee $9
   f64.const 1
   local.get $9
   f64.sub
   local.get $0
   f64.sub
   local.get $7
   local.get $7
   local.get $7
   local.get $7
   f64.const 2.480158728947673e-05
   f64.mul
   f64.const -0.001388888888887411
   f64.add
   f64.mul
   f64.const 0.0416666666666666
   f64.add
   f64.mul
   local.get $8
   local.get $8
   f64.mul
   local.get $7
   local.get $7
   f64.const -1.1359647557788195e-11
   f64.mul
   f64.const 2.087572321298175e-09
   f64.add
   f64.mul
   f64.const -2.7557314351390663e-07
   f64.add
   f64.mul
   f64.add
   f64.mul
   local.get $1
   local.get $2
   f64.mul
   f64.sub
   f64.add
   f64.add
  end
  local.tee $0
  f64.neg
  local.get $0
  local.get $3
  i32.const 1
  i32.add
  i32.const 2
  i32.and
  select
 )
 (func $assembly/runtime/state/globalState/GlobalState#calculateGlobalCoherence~anonymous|0 (param $0 f64) (param $1 f64) (param $2 i32) (param $3 i32) (result f64)
  local.get $0
  local.get $1
  f64.add
 )
 (func $assembly/runtime/state/globalState/GlobalState#calculateGlobalCoherence~anonymous|1 (param $0 f64) (param $1 f64) (param $2 i32) (param $3 i32) (result f64)
  local.get $0
  local.get $1
  f64.max
 )
 (func $assembly/runtime/state/globalState/GlobalState#calculateGlobalCoherence~anonymous|2 (param $0 f64) (param $1 f64) (param $2 i32) (param $3 i32) (result f64)
  local.get $0
  local.get $1
  f64.min
 )
 (func $~lib/math/NativeMath.pow (param $0 f64) (param $1 f64) (result f64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 i64)
  (local $12 i64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 i32)
  local.get $1
  f64.abs
  f64.const 2
  f64.le
  if
   local.get $1
   f64.const 2
   f64.eq
   if
    local.get $0
    local.get $0
    f64.mul
    return
   end
   local.get $1
   f64.const 0.5
   f64.eq
   if
    local.get $0
    f64.sqrt
    f64.abs
    f64.const inf
    local.get $0
    f64.const -inf
    f64.ne
    select
    return
   end
   local.get $1
   f64.const -1
   f64.eq
   if
    f64.const 1
    local.get $0
    f64.div
    return
   end
   local.get $1
   f64.const 1
   f64.eq
   if
    local.get $0
    return
   end
   local.get $1
   f64.const 0
   f64.eq
   if
    f64.const 1
    return
   end
  end
  block $~lib/util/math/pow_lut|inlined.0 (result f64)
   local.get $1
   i64.reinterpret_f64
   local.tee $11
   i64.const 52
   i64.shr_u
   local.set $6
   local.get $0
   i64.reinterpret_f64
   local.tee $2
   i64.const 52
   i64.shr_u
   local.tee $5
   i64.const 1
   i64.sub
   i64.const 2046
   i64.ge_u
   if (result i32)
    i32.const 1
   else
    local.get $6
    i64.const 2047
    i64.and
    i64.const 958
    i64.sub
    i64.const 128
    i64.ge_u
   end
   if
    local.get $11
    i64.const 1
    i64.shl
    local.tee $12
    i64.const 1
    i64.sub
    i64.const -9007199254740993
    i64.ge_u
    if
     f64.const 1
     local.get $12
     i64.eqz
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const nan:0x8000000000000
     local.get $2
     i64.const 4607182418800017408
     i64.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     local.get $0
     local.get $1
     f64.add
     local.get $12
     i64.const -9007199254740992
     i64.gt_u
     local.get $2
     i64.const 1
     i64.shl
     local.tee $2
     i64.const -9007199254740992
     i64.gt_u
     i32.or
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const nan:0x8000000000000
     local.get $2
     i64.const 9214364837600034816
     i64.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const 0
     local.get $11
     i64.const 63
     i64.shr_u
     i64.eqz
     local.get $2
     i64.const 9214364837600034816
     i64.lt_u
     i32.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     local.get $1
     local.get $1
     f64.mul
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $2
    i64.const 1
    i64.shl
    i64.const 1
    i64.sub
    i64.const -9007199254740993
    i64.ge_u
    if
     f64.const 1
     local.get $0
     local.get $0
     f64.mul
     local.tee $0
     f64.neg
     local.get $0
     local.get $2
     i64.const 63
     i64.shr_u
     i32.wrap_i64
     if (result i32)
      block $~lib/util/math/checkint|inlined.0 (result i32)
       i32.const 0
       local.get $11
       i64.const 52
       i64.shr_u
       i64.const 2047
       i64.and
       local.tee $2
       i64.const 1023
       i64.lt_u
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 2
       local.get $2
       i64.const 1075
       i64.gt_u
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 0
       local.get $11
       i64.const 1
       i64.const 1075
       local.get $2
       i64.sub
       i64.shl
       local.tee $2
       i64.const 1
       i64.sub
       i64.and
       i64.const 0
       i64.ne
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 1
       local.get $2
       local.get $11
       i64.and
       i64.const 0
       i64.ne
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 2
      end
      i32.const 1
      i32.eq
     else
      i32.const 0
     end
     select
     local.tee $0
     f64.div
     local.get $0
     local.get $11
     i64.const 0
     i64.lt_s
     select
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $2
    i64.const 0
    i64.lt_s
    if
     block $~lib/util/math/checkint|inlined.1 (result i32)
      i32.const 0
      local.get $11
      i64.const 52
      i64.shr_u
      i64.const 2047
      i64.and
      local.tee $12
      i64.const 1023
      i64.lt_u
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 2
      local.get $12
      i64.const 1075
      i64.gt_u
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 0
      local.get $11
      i64.const 1
      i64.const 1075
      local.get $12
      i64.sub
      i64.shl
      local.tee $12
      i64.const 1
      i64.sub
      i64.and
      i64.const 0
      i64.ne
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 1
      local.get $11
      local.get $12
      i64.and
      i64.const 0
      i64.ne
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 2
     end
     local.tee $3
     i32.eqz
     if
      local.get $0
      local.get $0
      f64.sub
      local.tee $0
      local.get $0
      f64.div
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $5
     i64.const 2047
     i64.and
     local.set $5
     i32.const 262144
     i32.const 0
     local.get $3
     i32.const 1
     i32.eq
     select
     local.set $4
     local.get $2
     i64.const 9223372036854775807
     i64.and
     local.set $2
    end
    local.get $6
    i64.const 2047
    i64.and
    local.tee $12
    i64.const 958
    i64.sub
    i64.const 128
    i64.ge_u
    if
     f64.const 1
     local.get $2
     i64.const 4607182418800017408
     i64.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const 1
     local.get $12
     i64.const 958
     i64.lt_u
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const inf
     f64.const 0
     local.get $6
     i64.const 2048
     i64.lt_u
     local.get $2
     i64.const 4607182418800017408
     i64.gt_u
     i32.eq
     select
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $5
    i64.eqz
    if
     local.get $0
     f64.const 4503599627370496
     f64.mul
     i64.reinterpret_f64
     i64.const 9223372036854775807
     i64.and
     i64.const 234187180623265792
     i64.sub
     local.set $2
    end
   end
   local.get $2
   local.get $2
   i64.const 4604531861337669632
   i64.sub
   local.tee $2
   i64.const -4503599627370496
   i64.and
   i64.sub
   local.tee $5
   i64.const 2147483648
   i64.add
   i64.const -4294967296
   i64.and
   f64.reinterpret_i64
   local.tee $7
   local.get $2
   i64.const 45
   i64.shr_u
   i64.const 127
   i64.and
   i32.wrap_i64
   i32.const 5
   i32.shl
   i32.const 29792
   i32.add
   local.tee $3
   f64.load
   local.tee $8
   f64.mul
   f64.const -1
   f64.add
   local.set $9
   local.get $2
   i64.const 52
   i64.shr_s
   f64.convert_i64_s
   local.tee $13
   f64.const 0.6931471805598903
   f64.mul
   local.get $3
   f64.load offset=16
   f64.add
   local.tee $0
   local.get $9
   local.get $5
   f64.reinterpret_i64
   local.get $7
   f64.sub
   local.get $8
   f64.mul
   local.tee $7
   f64.add
   local.tee $14
   f64.add
   local.set $15
   local.get $14
   local.get $14
   f64.const -0.5
   f64.mul
   local.tee $8
   f64.mul
   local.set $16
   local.get $15
   local.get $9
   local.get $9
   f64.const -0.5
   f64.mul
   local.tee $17
   f64.mul
   local.tee $9
   f64.add
   local.tee $10
   local.get $10
   local.get $13
   f64.const 5.497923018708371e-14
   f64.mul
   local.get $3
   f64.load offset=24
   f64.add
   local.get $0
   local.get $15
   f64.sub
   local.get $14
   f64.add
   f64.add
   local.get $7
   local.get $8
   local.get $17
   f64.add
   f64.mul
   f64.add
   local.get $15
   local.get $10
   f64.sub
   local.get $9
   f64.add
   f64.add
   local.get $14
   local.get $16
   f64.mul
   local.get $14
   f64.const 0.5000000000000007
   f64.mul
   f64.const -0.6666666666666679
   f64.add
   local.get $16
   local.get $14
   f64.const -0.6666666663487739
   f64.mul
   f64.const 0.7999999995323976
   f64.add
   local.get $16
   local.get $14
   f64.const 1.0000415263675542
   f64.mul
   f64.const -1.142909628459501
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.tee $0
   f64.add
   local.tee $7
   f64.sub
   local.get $0
   f64.add
   global.set $~lib/util/math/log_tail
   block $~lib/util/math/exp_inline|inlined.0 (result f64)
    local.get $11
    i64.const -134217728
    i64.and
    f64.reinterpret_i64
    local.tee $0
    local.get $7
    i64.reinterpret_f64
    i64.const -134217728
    i64.and
    f64.reinterpret_i64
    local.tee $8
    f64.mul
    local.tee $9
    i64.reinterpret_f64
    local.tee $2
    i64.const 52
    i64.shr_u
    i32.wrap_i64
    i32.const 2047
    i32.and
    local.tee $3
    i32.const 969
    i32.sub
    local.tee $18
    i32.const 63
    i32.ge_u
    if
     f64.const -1
     f64.const 1
     local.get $4
     select
     local.get $18
     i32.const -2147483648
     i32.ge_u
     br_if $~lib/util/math/exp_inline|inlined.0
     drop
     f64.const -0
     f64.const 0
     local.get $4
     select
     f64.const -inf
     f64.const inf
     local.get $4
     select
     local.get $2
     i64.const 0
     i64.lt_s
     select
     local.get $3
     i32.const 1033
     i32.ge_u
     br_if $~lib/util/math/exp_inline|inlined.0
     drop
     i32.const 0
     local.set $3
    end
    local.get $9
    f64.const 184.6649652337873
    f64.mul
    f64.const 6755399441055744
    f64.add
    local.tee $10
    i64.reinterpret_f64
    local.tee $2
    i64.const 127
    i64.and
    i64.const 1
    i64.shl
    i32.wrap_i64
    i32.const 3
    i32.shl
    i32.const 33888
    i32.add
    local.tee $18
    i64.load offset=8
    local.get $2
    local.get $4
    i64.extend_i32_u
    i64.add
    i64.const 45
    i64.shl
    i64.add
    local.set $5
    local.get $9
    local.get $10
    f64.const -6755399441055744
    f64.add
    local.tee $9
    f64.const -0.005415212348111709
    f64.mul
    f64.add
    local.get $9
    f64.const -1.2864023111638346e-14
    f64.mul
    f64.add
    local.get $1
    local.get $0
    f64.sub
    local.get $8
    f64.mul
    local.get $1
    local.get $7
    local.get $8
    f64.sub
    global.get $~lib/util/math/log_tail
    f64.add
    f64.mul
    f64.add
    f64.add
    local.tee $0
    local.get $0
    f64.mul
    local.set $1
    local.get $18
    f64.load
    local.get $0
    f64.add
    local.get $1
    local.get $0
    f64.const 0.16666666666665886
    f64.mul
    f64.const 0.49999999999996786
    f64.add
    f64.mul
    f64.add
    local.get $1
    local.get $1
    f64.mul
    local.get $0
    f64.const 0.008333335853059549
    f64.mul
    f64.const 0.0416666808410674
    f64.add
    f64.mul
    f64.add
    local.set $0
    local.get $3
    i32.eqz
    if
     block $~lib/util/math/specialcase|inlined.0 (result f64)
      local.get $2
      i64.const 2147483648
      i64.and
      i64.eqz
      if
       local.get $5
       i64.const 4544132024016830464
       i64.sub
       f64.reinterpret_i64
       local.tee $1
       local.get $1
       local.get $0
       f64.mul
       f64.add
       f64.const 5486124068793688683255936e279
       f64.mul
       br $~lib/util/math/specialcase|inlined.0
      end
      local.get $5
      i64.const 4602678819172646912
      i64.add
      local.tee $2
      f64.reinterpret_i64
      local.tee $1
      local.get $0
      f64.mul
      local.set $0
      local.get $1
      local.get $0
      f64.add
      local.tee $7
      f64.abs
      f64.const 1
      f64.lt
      if (result f64)
       f64.const 1
       local.get $7
       f64.copysign
       local.tee $8
       local.get $7
       f64.add
       local.tee $9
       local.get $8
       local.get $9
       f64.sub
       local.get $7
       f64.add
       local.get $1
       local.get $7
       f64.sub
       local.get $0
       f64.add
       f64.add
       f64.add
       local.get $8
       f64.sub
       local.tee $0
       f64.const 0
       f64.eq
       if (result f64)
        local.get $2
        i64.const -9223372036854775808
        i64.and
        f64.reinterpret_i64
       else
        local.get $0
       end
      else
       local.get $7
      end
      f64.const 2.2250738585072014e-308
      f64.mul
     end
     br $~lib/util/math/exp_inline|inlined.0
    end
    local.get $5
    f64.reinterpret_i64
    local.tee $1
    local.get $1
    local.get $0
    f64.mul
    f64.add
   end
  end
 )
 (func $assembly/tests/core-arrays.test/testPartition~anonymous|0 (param $0 i32) (result i32)
  local.get $0
  i32.const 1
  i32.and
  i32.eqz
 )
 (func $assembly/tests/core-arrays.test/testFindIndex~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 25
  i32.gt_s
 )
 (func $assembly/tests/core-arrays.test/testFindIndex~anonymous|1 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 100
  i32.gt_s
 )
 (func $assembly/tests/core-arrays.test/testBinarySearch~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.sub
 )
 (func $assembly/core/builders/networkTopology (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 195
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1000
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 10000
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 196
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 198
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/math/NativeMath.log (param $0 f64) (result f64)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 i32)
  block $~lib/util/math/log_lut|inlined.0 (result f64)
   local.get $0
   i64.reinterpret_f64
   local.tee $1
   i64.const 4606619468846596096
   i64.sub
   i64.const 854320534781952
   i64.lt_u
   if
    local.get $0
    f64.const -1
    f64.add
    local.tee $0
    local.get $0
    f64.mul
    local.tee $4
    local.get $0
    f64.mul
    local.tee $5
    local.get $0
    f64.const -0.24999999999998432
    f64.mul
    f64.const 0.3333333333333352
    f64.add
    local.get $4
    f64.const 0.19999999999320328
    f64.mul
    f64.add
    local.get $5
    local.get $0
    f64.const 0.14285715076560868
    f64.mul
    f64.const -0.16666666669929706
    f64.add
    local.get $4
    f64.const -0.12499997863982555
    f64.mul
    f64.add
    local.get $5
    local.get $0
    f64.const -0.10000486757818193
    f64.mul
    f64.const 0.11110712032936046
    f64.add
    local.get $4
    f64.const 0.09181994006195467
    f64.mul
    f64.add
    local.get $5
    f64.const -0.08328363062289341
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.get $0
    local.get $0
    local.get $0
    local.get $0
    f64.const 134217728
    f64.mul
    local.tee $4
    f64.add
    local.get $4
    f64.sub
    local.tee $4
    local.get $4
    f64.mul
    f64.const -0.5
    f64.mul
    local.tee $5
    f64.add
    local.tee $6
    f64.sub
    local.get $5
    f64.add
    local.get $0
    local.get $4
    f64.sub
    f64.const -0.5
    f64.mul
    local.get $4
    local.get $0
    f64.add
    f64.mul
    f64.add
    f64.add
    local.get $6
    f64.add
    br $~lib/util/math/log_lut|inlined.0
   end
   local.get $1
   i64.const 48
   i64.shr_u
   i32.wrap_i64
   local.tee $2
   i32.const 16
   i32.sub
   i32.const 32736
   i32.ge_u
   if
    f64.const -1
    local.get $0
    local.get $0
    f64.mul
    f64.div
    local.get $1
    i64.const 1
    i64.shl
    i64.eqz
    br_if $~lib/util/math/log_lut|inlined.0
    drop
    local.get $0
    local.get $1
    i64.const 9218868437227405312
    i64.eq
    br_if $~lib/util/math/log_lut|inlined.0
    drop
    i32.const 1
    local.get $2
    i32.const 32752
    i32.and
    i32.const 32752
    i32.eq
    local.get $2
    i32.const 32768
    i32.and
    select
    if
     local.get $0
     local.get $0
     f64.sub
     local.tee $0
     local.get $0
     f64.div
     br $~lib/util/math/log_lut|inlined.0
    end
    local.get $0
    f64.const 4503599627370496
    f64.mul
    i64.reinterpret_f64
    i64.const 234187180623265792
    i64.sub
    local.set $1
   end
   local.get $1
   i64.const 4604367669032910848
   i64.sub
   local.tee $3
   i64.const 45
   i64.shr_u
   i64.const 127
   i64.and
   i32.wrap_i64
   i32.const 4
   i32.shl
   local.tee $2
   i32.const 65952
   i32.add
   local.set $7
   local.get $3
   i64.const 52
   i64.shr_s
   f64.convert_i64_s
   local.tee $0
   f64.const 0.6931471805598903
   f64.mul
   local.get $7
   f64.load offset=8
   f64.add
   local.tee $4
   local.get $1
   local.get $3
   i64.const -4503599627370496
   i64.and
   i64.sub
   f64.reinterpret_i64
   local.get $2
   i32.const 68000
   i32.add
   local.tee $2
   f64.load
   f64.sub
   local.get $2
   f64.load offset=8
   f64.sub
   local.get $7
   f64.load
   f64.mul
   local.tee $5
   f64.add
   local.set $6
   local.get $4
   local.get $6
   f64.sub
   local.get $5
   f64.add
   local.get $0
   f64.const 5.497923018708371e-14
   f64.mul
   f64.add
   local.get $5
   local.get $5
   f64.mul
   local.tee $0
   f64.const -0.5000000000000001
   f64.mul
   f64.add
   local.get $5
   local.get $0
   f64.mul
   local.get $5
   f64.const -0.2499999999622955
   f64.mul
   f64.const 0.33333333331825593
   f64.add
   local.get $0
   local.get $5
   f64.const -0.16667054827627667
   f64.mul
   f64.const 0.20000304511814496
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.get $6
   f64.add
  end
 )
 (func $~lib/math/NativeMath.mod (param $0 f64) (param $1 f64) (result f64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  local.get $1
  f64.abs
  f64.const 1
  f64.eq
  if
   local.get $0
   local.get $0
   f64.trunc
   f64.sub
   local.get $0
   f64.copysign
   return
  end
  local.get $1
  i64.reinterpret_f64
  local.tee $6
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.set $7
  local.get $6
  i64.const 1
  i64.shl
  local.tee $4
  i64.eqz
  local.get $0
  i64.reinterpret_f64
  local.tee $3
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.tee $8
  i64.const 2047
  i64.eq
  i32.or
  local.get $1
  local.get $1
  f64.ne
  i32.or
  if
   local.get $0
   local.get $1
   f64.mul
   local.tee $0
   local.get $0
   f64.div
   return
  end
  local.get $3
  i64.const 1
  i64.shl
  local.tee $2
  local.get $4
  i64.le_u
  if
   local.get $0
   local.get $2
   local.get $4
   i64.ne
   f64.convert_i32_u
   f64.mul
   return
  end
  local.get $3
  i64.const 63
  i64.shr_u
  local.set $5
  local.get $8
  i64.eqz
  if (result i64)
   local.get $3
   i64.const 1
   local.get $8
   local.get $3
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.tee $8
   i64.sub
   i64.shl
  else
   local.get $3
   i64.const 4503599627370495
   i64.and
   i64.const 4503599627370496
   i64.or
  end
  local.set $2
  local.get $7
  i64.eqz
  if (result i64)
   local.get $6
   i64.const 1
   local.get $7
   local.get $6
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.tee $7
   i64.sub
   i64.shl
  else
   local.get $6
   i64.const 4503599627370495
   i64.and
   i64.const 4503599627370496
   i64.or
  end
  local.set $3
  loop $while-continue|0
   local.get $7
   local.get $8
   i64.lt_s
   if
    local.get $2
    local.get $3
    i64.ge_u
    if (result i64)
     local.get $2
     local.get $3
     i64.eq
     if
      local.get $0
      f64.const 0
      f64.mul
      return
     end
     local.get $2
     local.get $3
     i64.sub
    else
     local.get $2
    end
    i64.const 1
    i64.shl
    local.set $2
    local.get $8
    i64.const 1
    i64.sub
    local.set $8
    br $while-continue|0
   end
  end
  local.get $2
  local.get $3
  i64.ge_u
  if
   local.get $2
   local.get $3
   i64.eq
   if
    local.get $0
    f64.const 0
    f64.mul
    return
   end
   local.get $2
   local.get $3
   i64.sub
   local.set $2
  end
  local.get $8
  local.get $2
  i64.const 11
  i64.shl
  i64.clz
  local.tee $4
  i64.sub
  local.set $3
  local.get $2
  local.get $4
  i64.shl
  local.set $2
  local.get $3
  i64.const 0
  i64.gt_s
  if (result i64)
   local.get $2
   i64.const 4503599627370496
   i64.sub
   local.get $3
   i64.const 52
   i64.shl
   i64.or
  else
   local.get $2
   i64.const 1
   local.get $3
   i64.sub
   i64.shr_u
  end
  local.get $5
  i64.const 63
  i64.shl
  i64.or
  f64.reinterpret_i64
 )
 (func $~lib/math/NativeMath.exp (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 i64)
  (local $3 f64)
  (local $4 f64)
  (local $5 i32)
  (local $6 i64)
  (local $7 f64)
  (local $8 f64)
  block $~lib/util/math/exp_lut|inlined.0 (result f64)
   local.get $0
   i64.reinterpret_f64
   local.tee $2
   i64.const 52
   i64.shr_u
   i32.wrap_i64
   i32.const 2047
   i32.and
   local.tee $1
   i32.const 969
   i32.sub
   local.tee $5
   i32.const 63
   i32.ge_u
   if
    f64.const 1
    local.get $5
    i32.const -2147483648
    i32.ge_u
    br_if $~lib/util/math/exp_lut|inlined.0
    drop
    local.get $1
    i32.const 1033
    i32.ge_u
    if
     f64.const 0
     local.get $2
     i64.const -4503599627370496
     i64.eq
     br_if $~lib/util/math/exp_lut|inlined.0
     drop
     local.get $0
     f64.const 1
     f64.add
     local.get $1
     i32.const 2047
     i32.ge_u
     br_if $~lib/util/math/exp_lut|inlined.0
     drop
     f64.const 0
     f64.const inf
     local.get $2
     i64.const 0
     i64.lt_s
     select
     br $~lib/util/math/exp_lut|inlined.0
    end
    i32.const 0
    local.set $1
   end
   local.get $0
   f64.const 184.6649652337873
   f64.mul
   f64.const 6755399441055744
   f64.add
   local.tee $3
   i64.reinterpret_f64
   local.tee $6
   i64.const 127
   i64.and
   i64.const 1
   i64.shl
   i32.wrap_i64
   i32.const 3
   i32.shl
   i32.const 33888
   i32.add
   local.tee $5
   i64.load offset=8
   local.get $6
   i64.const 45
   i64.shl
   i64.add
   local.set $2
   local.get $0
   local.get $3
   f64.const -6755399441055744
   f64.add
   local.tee $0
   f64.const -0.005415212348111709
   f64.mul
   f64.add
   local.get $0
   f64.const -1.2864023111638346e-14
   f64.mul
   f64.add
   local.tee $0
   local.get $0
   f64.mul
   local.set $3
   local.get $5
   f64.load
   local.get $0
   f64.add
   local.get $3
   local.get $0
   f64.const 0.16666666666665886
   f64.mul
   f64.const 0.49999999999996786
   f64.add
   f64.mul
   f64.add
   local.get $3
   local.get $3
   f64.mul
   local.get $0
   f64.const 0.008333335853059549
   f64.mul
   f64.const 0.0416666808410674
   f64.add
   f64.mul
   f64.add
   local.set $0
   local.get $1
   i32.eqz
   if
    block $~lib/util/math/specialcase|inlined.1 (result f64)
     local.get $6
     i64.const 2147483648
     i64.and
     i64.eqz
     if
      local.get $2
      i64.const 4544132024016830464
      i64.sub
      f64.reinterpret_i64
      local.tee $3
      local.get $3
      local.get $0
      f64.mul
      f64.add
      f64.const 5486124068793688683255936e279
      f64.mul
      br $~lib/util/math/specialcase|inlined.1
     end
     local.get $2
     i64.const 4602678819172646912
     i64.add
     local.tee $2
     f64.reinterpret_i64
     local.tee $3
     local.get $0
     f64.mul
     local.set $7
     local.get $3
     local.get $7
     f64.add
     local.tee $4
     f64.abs
     f64.const 1
     f64.lt
     if (result f64)
      f64.const 1
      local.get $4
      f64.copysign
      local.tee $8
      local.get $4
      f64.add
      local.tee $0
      local.get $8
      local.get $0
      f64.sub
      local.get $4
      f64.add
      local.get $3
      local.get $4
      f64.sub
      local.get $7
      f64.add
      f64.add
      f64.add
      local.get $8
      f64.sub
      local.tee $0
      f64.const 0
      f64.eq
      if (result f64)
       local.get $2
       i64.const -9223372036854775808
       i64.and
       f64.reinterpret_i64
      else
       local.get $0
      end
     else
      local.get $4
     end
     f64.const 2.2250738585072014e-308
     f64.mul
    end
    br $~lib/util/math/exp_lut|inlined.0
   end
   local.get $2
   f64.reinterpret_i64
   local.tee $3
   local.get $3
   local.get $0
   f64.mul
   f64.add
  end
 )
 (func $~lib/math/NativeMath.atan (param $0 f64) (result f64)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  local.get $0
  local.set $1
  local.get $0
  i64.reinterpret_f64
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  i32.const 2147483647
  i32.and
  local.tee $2
  i32.const 1141899264
  i32.ge_u
  if
   local.get $0
   local.get $0
   f64.ne
   if
    local.get $0
    return
   end
   f64.const 1.5707963267948966
   local.get $1
   f64.copysign
   return
  end
  local.get $2
  i32.const 1071382528
  i32.lt_u
  if
   local.get $2
   i32.const 1044381696
   i32.lt_u
   if
    local.get $0
    return
   end
   i32.const -1
   local.set $3
  else
   local.get $0
   f64.abs
   local.set $0
   local.get $2
   i32.const 1072889856
   i32.lt_u
   if (result f64)
    local.get $2
    i32.const 1072037888
    i32.lt_u
    if (result f64)
     local.get $0
     local.get $0
     f64.add
     f64.const -1
     f64.add
     local.get $0
     f64.const 2
     f64.add
     f64.div
    else
     i32.const 1
     local.set $3
     local.get $0
     f64.const -1
     f64.add
     local.get $0
     f64.const 1
     f64.add
     f64.div
    end
   else
    local.get $2
    i32.const 1073971200
    i32.lt_u
    if (result f64)
     i32.const 2
     local.set $3
     local.get $0
     f64.const -1.5
     f64.add
     local.get $0
     f64.const 1.5
     f64.mul
     f64.const 1
     f64.add
     f64.div
    else
     i32.const 3
     local.set $3
     f64.const -1
     local.get $0
     f64.div
    end
   end
   local.set $0
  end
  local.get $0
  local.get $0
  f64.mul
  local.tee $5
  local.get $5
  f64.mul
  local.set $4
  local.get $0
  local.get $5
  local.get $4
  local.get $4
  local.get $4
  local.get $4
  local.get $4
  f64.const 0.016285820115365782
  f64.mul
  f64.const 0.049768779946159324
  f64.add
  f64.mul
  f64.const 0.06661073137387531
  f64.add
  f64.mul
  f64.const 0.09090887133436507
  f64.add
  f64.mul
  f64.const 0.14285714272503466
  f64.add
  f64.mul
  f64.const 0.3333333333333293
  f64.add
  f64.mul
  local.get $4
  local.get $4
  local.get $4
  local.get $4
  local.get $4
  f64.const -0.036531572744216916
  f64.mul
  f64.const -0.058335701337905735
  f64.add
  f64.mul
  f64.const -0.0769187620504483
  f64.add
  f64.mul
  f64.const -0.11111110405462356
  f64.add
  f64.mul
  f64.const -0.19999999999876483
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $4
  local.get $3
  i32.const 0
  i32.lt_s
  if
   local.get $0
   local.get $4
   f64.sub
   return
  end
  block $break|0
   block $case4|0
    block $case3|0
     block $case2|0
      block $case1|0
       block $case0|0
        local.get $3
        br_table $case0|0 $case1|0 $case2|0 $case3|0 $case4|0
       end
       f64.const 0.4636476090008061
       local.get $4
       f64.const -2.2698777452961687e-17
       f64.add
       local.get $0
       f64.sub
       f64.sub
       local.set $0
       br $break|0
      end
      f64.const 0.7853981633974483
      local.get $4
      f64.const -3.061616997868383e-17
      f64.add
      local.get $0
      f64.sub
      f64.sub
      local.set $0
      br $break|0
     end
     f64.const 0.982793723247329
     local.get $4
     f64.const -1.3903311031230998e-17
     f64.add
     local.get $0
     f64.sub
     f64.sub
     local.set $0
     br $break|0
    end
    f64.const 1.5707963267948966
    local.get $4
    f64.const -6.123233995736766e-17
    f64.add
    local.get $0
    f64.sub
    f64.sub
    local.set $0
    br $break|0
   end
   unreachable
  end
  local.get $0
  local.get $1
  f64.copysign
 )
 (func $~lib/math/NativeMath.atan2 (param $0 f64) (param $1 f64) (result f64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.get $0
  f64.ne
  local.get $1
  local.get $1
  f64.ne
  i32.or
  if
   local.get $1
   local.get $0
   f64.add
   return
  end
  local.get $0
  i64.reinterpret_f64
  local.tee $3
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $7
  local.get $1
  i64.reinterpret_f64
  local.tee $5
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $6
  local.get $5
  i32.wrap_i64
  local.tee $4
  local.get $6
  i32.const 1072693248
  i32.sub
  i32.or
  i32.eqz
  if
   local.get $0
   call $~lib/math/NativeMath.atan
   return
  end
  local.get $6
  i32.const 30
  i32.shr_u
  i32.const 2
  i32.and
  local.get $7
  i32.const 31
  i32.shr_u
  i32.or
  local.set $2
  local.get $7
  i32.const 2147483647
  i32.and
  local.tee $7
  local.get $3
  i32.wrap_i64
  i32.or
  i32.eqz
  if
   block $break|0
    block $case3|0
     block $case2|0
      block $case0|0
       local.get $2
       br_table $case0|0 $case0|0 $case2|0 $case3|0 $break|0
      end
      local.get $0
      return
     end
     f64.const 3.141592653589793
     return
    end
    f64.const -3.141592653589793
    return
   end
  end
  block $folding-inner0
   local.get $6
   i32.const 2147483647
   i32.and
   local.tee $6
   local.get $4
   i32.or
   i32.eqz
   br_if $folding-inner0
   local.get $6
   i32.const 2146435072
   i32.eq
   if
    local.get $7
    i32.const 2146435072
    i32.eq
    if (result f64)
     f64.const 2.356194490192345
     f64.const 0.7853981633974483
     local.get $2
     i32.const 2
     i32.and
     select
     local.tee $0
     f64.neg
     local.get $0
     local.get $2
     i32.const 1
     i32.and
     select
    else
     f64.const 3.141592653589793
     f64.const 0
     local.get $2
     i32.const 2
     i32.and
     select
     local.tee $0
     f64.neg
     local.get $0
     local.get $2
     i32.const 1
     i32.and
     select
    end
    return
   end
   local.get $7
   i32.const 2146435072
   i32.eq
   local.get $6
   i32.const 67108864
   i32.add
   local.get $7
   i32.lt_u
   i32.or
   br_if $folding-inner0
   local.get $7
   i32.const 67108864
   i32.add
   local.get $6
   i32.lt_u
   i32.const 0
   local.get $2
   i32.const 2
   i32.and
   select
   if (result f64)
    f64.const 0
   else
    local.get $0
    local.get $1
    f64.div
    f64.abs
    call $~lib/math/NativeMath.atan
   end
   local.set $0
   block $break|1
    block $case3|1
     block $case2|1
      block $case1|1
       block $case0|1
        local.get $2
        br_table $case0|1 $case1|1 $case2|1 $case3|1 $break|1
       end
       local.get $0
       return
      end
      local.get $0
      f64.neg
      return
     end
     f64.const 3.141592653589793
     local.get $0
     f64.const -1.2246467991473532e-16
     f64.add
     f64.sub
     return
    end
    local.get $0
    f64.const -1.2246467991473532e-16
    f64.add
    f64.const -3.141592653589793
    f64.add
    return
   end
   unreachable
  end
  f64.const -1.5707963267948966
  f64.const 1.5707963267948966
  local.get $2
  i32.const 1
  i32.and
  select
 )
 (func $~lib/math/NativeMath.sin (param $0 f64) (result f64)
  (local $1 f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $0
  i64.reinterpret_f64
  local.tee $5
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.tee $3
  i32.const 31
  i32.shr_u
  local.set $6
  local.get $3
  i32.const 2147483647
  i32.and
  local.tee $3
  i32.const 1072243195
  i32.le_u
  if
   local.get $3
   i32.const 1045430272
   i32.lt_u
   if
    local.get $0
    return
   end
   local.get $0
   local.get $0
   local.get $0
   f64.mul
   local.tee $1
   local.get $0
   f64.mul
   local.get $1
   local.get $1
   local.get $1
   f64.const 2.7557313707070068e-06
   f64.mul
   f64.const -1.984126982985795e-04
   f64.add
   f64.mul
   f64.const 0.00833333333332249
   f64.add
   local.get $1
   local.get $1
   local.get $1
   f64.mul
   f64.mul
   local.get $1
   f64.const 1.58969099521155e-10
   f64.mul
   f64.const -2.5050760253406863e-08
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.const -0.16666666666666632
   f64.add
   f64.mul
   f64.add
   return
  end
  local.get $3
  i32.const 2146435072
  i32.ge_u
  if
   local.get $0
   local.get $0
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.1 (result i32)
   local.get $5
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.tee $4
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $3
    local.get $6
    if (result f64)
     local.get $0
     f64.const 1.5707963267341256
     f64.add
     local.set $0
     i32.const -1
     local.set $3
     local.get $4
     i32.const 1073291771
     i32.ne
     if (result f64)
      local.get $0
      local.get $0
      f64.const 6.077100506506192e-11
      f64.add
      local.tee $0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
     else
      local.get $0
      f64.const 6.077100506303966e-11
      f64.add
      local.tee $1
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $0
      local.get $1
      local.get $0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
     end
    else
     local.get $0
     f64.const -1.5707963267341256
     f64.add
     local.set $0
     local.get $4
     i32.const 1073291771
     i32.ne
     if (result f64)
      local.get $0
      local.get $0
      f64.const -6.077100506506192e-11
      f64.add
      local.tee $0
      f64.sub
      f64.const -6.077100506506192e-11
      f64.add
     else
      local.get $0
      f64.const -6.077100506303966e-11
      f64.add
      local.tee $1
      f64.const -2.0222662487959506e-21
      f64.add
      local.set $0
      local.get $1
      local.get $0
      f64.sub
      f64.const -2.0222662487959506e-21
      f64.add
     end
    end
    local.set $1
    local.get $0
    global.set $~lib/math/rempio2_y0
    local.get $1
    global.set $~lib/math/rempio2_y1
    local.get $3
    br $~lib/math/rempio2|inlined.1
   end
   local.get $4
   i32.const 1094263291
   i32.lt_u
   if
    local.get $4
    i32.const 20
    i32.shr_u
    local.tee $3
    local.get $0
    local.get $0
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.tee $7
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.tee $0
    local.get $7
    f64.const 6.077100506506192e-11
    f64.mul
    local.tee $2
    f64.sub
    local.tee $1
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    i32.const 16
    i32.gt_u
    if
     local.get $7
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $0
     local.get $0
     local.get $7
     f64.const 6.077100506303966e-11
     f64.mul
     local.tee $1
     f64.sub
     local.tee $0
     f64.sub
     local.get $1
     f64.sub
     f64.sub
     local.set $2
     local.get $3
     local.get $0
     local.get $2
     f64.sub
     local.tee $1
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     i32.const 49
     i32.gt_u
     if
      local.get $7
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $0
      local.get $0
      local.get $7
      f64.const 2.0222662487111665e-21
      f64.mul
      local.tee $1
      f64.sub
      local.tee $0
      f64.sub
      local.get $1
      f64.sub
      f64.sub
      local.set $2
      local.get $0
      local.get $2
      f64.sub
      local.set $1
     end
    end
    local.get $1
    global.set $~lib/math/rempio2_y0
    local.get $0
    local.get $1
    f64.sub
    local.get $2
    f64.sub
    global.set $~lib/math/rempio2_y1
    local.get $7
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2|inlined.1
   end
   i32.const 0
   local.get $5
   call $~lib/math/pio2_large_quot
   local.tee $3
   i32.sub
   local.get $3
   local.get $6
   select
  end
  local.set $3
  global.get $~lib/math/rempio2_y0
  local.set $2
  global.get $~lib/math/rempio2_y1
  local.set $7
  local.get $3
  i32.const 1
  i32.and
  if (result f64)
   local.get $2
   local.get $2
   f64.mul
   local.tee $0
   local.get $0
   f64.mul
   local.set $1
   f64.const 1
   local.get $0
   f64.const 0.5
   f64.mul
   local.tee $8
   f64.sub
   local.tee $9
   f64.const 1
   local.get $9
   f64.sub
   local.get $8
   f64.sub
   local.get $0
   local.get $0
   local.get $0
   local.get $0
   f64.const 2.480158728947673e-05
   f64.mul
   f64.const -0.001388888888887411
   f64.add
   f64.mul
   f64.const 0.0416666666666666
   f64.add
   f64.mul
   local.get $1
   local.get $1
   f64.mul
   local.get $0
   local.get $0
   f64.const -1.1359647557788195e-11
   f64.mul
   f64.const 2.087572321298175e-09
   f64.add
   f64.mul
   f64.const -2.7557314351390663e-07
   f64.add
   f64.mul
   f64.add
   f64.mul
   local.get $2
   local.get $7
   f64.mul
   f64.sub
   f64.add
   f64.add
  else
   local.get $2
   local.get $2
   f64.mul
   local.tee $0
   local.get $2
   f64.mul
   local.set $1
   local.get $2
   local.get $0
   local.get $7
   f64.const 0.5
   f64.mul
   local.get $1
   local.get $0
   local.get $0
   f64.const 2.7557313707070068e-06
   f64.mul
   f64.const -1.984126982985795e-04
   f64.add
   f64.mul
   f64.const 0.00833333333332249
   f64.add
   local.get $0
   local.get $0
   local.get $0
   f64.mul
   f64.mul
   local.get $0
   f64.const 1.58969099521155e-10
   f64.mul
   f64.const -2.5050760253406863e-08
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.sub
   f64.mul
   local.get $7
   f64.sub
   local.get $1
   f64.const -0.16666666666666632
   f64.mul
   f64.sub
   f64.sub
  end
  local.tee $0
  f64.neg
  local.get $0
  local.get $3
  i32.const 2
  i32.and
  select
 )
 (func $assembly/tests/entropy-viz.test/testEntropyFieldSamplerSampleField2D~anonymous|0 (param $0 f64) (param $1 f64) (result f64)
  local.get $0
  local.get $1
  f64.add
 )
 (func $assembly/tests/entropy-viz.test/testEntropyEvolutionTrackerGetEntropyGradient~anonymous|0 (param $0 f64) (param $1 f64) (result f64)
  local.get $0
  local.get $0
  f64.mul
  local.get $1
  local.get $1
  f64.mul
  f64.add
 )
 (func $assembly/tests/entropy-viz.test/testEntropyEvolutionTrackerFindCriticalPoints~anonymous|0 (param $0 f64) (param $1 f64) (result f64)
  local.get $0
  f64.const -0.5
  f64.add
  local.tee $0
  local.get $0
  f64.mul
  local.get $1
  f64.const -0.5
  f64.add
  local.tee $0
  local.get $0
  f64.mul
  f64.add
 )
 (func $~lib/rt/itcms/__pin (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $1
   i32.load offset=4
   i32.const 3
   i32.and
   i32.const 3
   i32.eq
   if
    i32.const 117520
    i32.const 1456
    i32.const 338
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/pinSpace
   local.tee $3
   i32.load offset=8
   local.set $2
   local.get $1
   local.get $3
   i32.const 3
   i32.or
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store offset=4
   local.get $3
   local.get $1
   i32.store offset=8
  end
  local.get $0
 )
 (func $~lib/rt/itcms/__unpin (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  local.tee $1
  i32.load offset=4
  i32.const 3
  i32.and
  i32.const 3
  i32.ne
  if
   i32.const 117584
   i32.const 1456
   i32.const 352
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $1
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/fromSpace
   local.tee $0
   i32.load offset=8
   local.set $2
   local.get $1
   local.get $0
   global.get $~lib/rt/itcms/white
   i32.or
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store offset=4
   local.get $0
   local.get $1
   i32.store offset=8
  end
 )
 (func $~lib/rt/itcms/__collect
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i64.const 200
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
 )
 (func $assembly/runtime/instructions/quantum/collapse/CollapseInstruction#execute~anonymous|0 (param $0 f64) (param $1 f64) (param $2 i32) (param $3 i32) (result f64)
  local.get $0
  local.get $1
  local.get $1
  f64.mul
  f64.add
 )
 (func $assembly/runtime/instructions/types/IInstructionHandler#execute@override (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  (local $10 f64)
  block $folding-inner0
   block $folding-inner4
    block $folding-inner3
     block $folding-inner2
      block $folding-inner1
       block $default
        block $case52
         block $case51
          block $case50
           block $case49
            block $case48
             block $case47
              block $case46
               block $case45
                block $case44
                 block $case43
                  block $case42
                   block $case41
                    block $case40
                     block $case39
                      block $case38
                       block $case37
                        block $case36
                         block $case35
                          block $case34
                           block $case33
                            block $case32
                             block $case31
                              block $case30
                               block $case29
                                block $case28
                                 block $case27
                                  block $case26
                                   block $case25
                                    block $case24
                                     block $case23
                                      block $case22
                                       block $case21
                                        block $case20
                                         block $case19
                                          block $case18
                                           block $case17
                                            block $case16
                                             block $case12
                                              block $case10
                                               block $case9
                                                block $case7
                                                 block $case6
                                                  block $case5
                                                   block $case4
                                                    block $case2
                                                     block $case1
                                                      block $case0
                                                       local.get $0
                                                       i32.const 8
                                                       i32.sub
                                                       i32.load
                                                       i32.const 9
                                                       i32.sub
                                                       br_table $case5 $default $case6 $case7 $folding-inner2 $case9 $case10 $folding-inner4 $case12 $folding-inner2 $folding-inner2 $folding-inner2 $case16 $case17 $case18 $case19 $case20 $case21 $case22 $case23 $case24 $case25 $case26 $case27 $case28 $case29 $case30 $case31 $case32 $case33 $case34 $case35 $case36 $case37 $case38 $case39 $case40 $case41 $case42 $case43 $case44 $case45 $case46 $case47 $case48 $case49 $case50 $case51 $case52 $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $default $case0 $case1 $case2 $folding-inner4 $case4 $default
                                                      end
                                                      global.get $~lib/memory/__stack_pointer
                                                      i32.const 12
                                                      i32.sub
                                                      global.set $~lib/memory/__stack_pointer
                                                      global.get $~lib/memory/__stack_pointer
                                                      i32.const 119640
                                                      i32.lt_s
                                                      br_if $folding-inner3
                                                      global.get $~lib/memory/__stack_pointer
                                                      i64.const 0
                                                      i64.store
                                                      global.get $~lib/memory/__stack_pointer
                                                      i32.const 0
                                                      i32.store offset=8
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $1
                                                      i32.store
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $2
                                                      i32.store offset=8
                                                      local.get $2
                                                      i32.const 0
                                                      call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                      local.set $0
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $0
                                                      i32.store offset=4
                                                      local.get $1
                                                      local.get $0
                                                      call $assembly/runtime/RISAEngine#parseValue
                                                      local.set $4
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $1
                                                      i32.store
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $2
                                                      i32.store offset=8
                                                      local.get $2
                                                      i32.const 1
                                                      call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                      local.set $0
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $0
                                                      i32.store offset=4
                                                      local.get $1
                                                      local.get $0
                                                      call $assembly/runtime/RISAEngine#parseValue
                                                      local.set $5
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $1
                                                      i32.store offset=8
                                                      local.get $1
                                                      call $assembly/runtime/RISAEngine#getRegisterState
                                                      local.set $0
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $0
                                                      i32.store
                                                      global.get $~lib/memory/__stack_pointer
                                                      i32.const 93696
                                                      i32.store offset=4
                                                      i32.const 2
                                                      global.set $~argumentsLength
                                                      local.get $0
                                                      i32.const 93696
                                                      local.get $4
                                                      local.get $5
                                                      f64.add
                                                      call $assembly/runtime/state/registerState/RegisterState#setRegister@varargs
                                                      global.get $~lib/memory/__stack_pointer
                                                      i32.const 12
                                                      i32.add
                                                      global.set $~lib/memory/__stack_pointer
                                                      br $folding-inner4
                                                     end
                                                     global.get $~lib/memory/__stack_pointer
                                                     i32.const 12
                                                     i32.sub
                                                     global.set $~lib/memory/__stack_pointer
                                                     global.get $~lib/memory/__stack_pointer
                                                     i32.const 119640
                                                     i32.lt_s
                                                     br_if $folding-inner3
                                                     global.get $~lib/memory/__stack_pointer
                                                     i64.const 0
                                                     i64.store
                                                     global.get $~lib/memory/__stack_pointer
                                                     i32.const 0
                                                     i32.store offset=8
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $1
                                                     i32.store offset=8
                                                     local.get $1
                                                     call $assembly/core/builders/QuantumCircuitBuilder#getGates
                                                     local.set $0
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $0
                                                     i32.store offset=4
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $0
                                                     i32.load offset=4
                                                     local.tee $0
                                                     i32.store
                                                     local.get $0
                                                     i32.const 1
                                                     i32.store8 offset=1
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $1
                                                     i32.store offset=8
                                                     local.get $1
                                                     call $assembly/core/builders/QuantumCircuitBuilder#getGates
                                                     local.set $0
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $0
                                                     i32.store offset=4
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $0
                                                     i32.load offset=4
                                                     local.tee $0
                                                     i32.store
                                                     local.get $0
                                                     i32.const 0
                                                     i32.store8
                                                     br $folding-inner1
                                                    end
                                                    block $__inlined_func$assembly/tests/runtime.test/MockJumpHandler#execute$212 (result i32)
                                                     global.get $~lib/memory/__stack_pointer
                                                     i32.const 20
                                                     i32.sub
                                                     global.set $~lib/memory/__stack_pointer
                                                     global.get $~lib/memory/__stack_pointer
                                                     i32.const 119640
                                                     i32.lt_s
                                                     br_if $folding-inner3
                                                     global.get $~lib/memory/__stack_pointer
                                                     i32.const 0
                                                     i32.const 20
                                                     memory.fill
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.set $0
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $2
                                                     i32.store offset=4
                                                     local.get $2
                                                     i32.const 0
                                                     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                     local.set $2
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $2
                                                     i32.store
                                                     local.get $0
                                                     local.get $2
                                                     i32.load
                                                     local.tee $0
                                                     i32.store offset=8
                                                     local.get $0
                                                     if
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.set $2
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $1
                                                      i32.store offset=4
                                                      local.get $1
                                                      call $assembly/runtime/RISAEngine#getControlFlowManager
                                                      local.set $3
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $3
                                                      i32.store
                                                      local.get $2
                                                      local.get $3
                                                      call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable
                                                      local.tee $2
                                                      i32.store offset=12
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $2
                                                      i32.store
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $0
                                                      i32.store offset=4
                                                      local.get $2
                                                      local.get $0
                                                      call $"~lib/map/Map<~lib/string/String,i32>#has"
                                                      if
                                                       global.get $~lib/memory/__stack_pointer
                                                       local.get $1
                                                       i32.store offset=4
                                                       local.get $1
                                                       call $assembly/core/builders/QuantumCircuitBuilder#getGates
                                                       local.set $1
                                                       global.get $~lib/memory/__stack_pointer
                                                       local.get $1
                                                       i32.store
                                                       global.get $~lib/memory/__stack_pointer
                                                       local.get $2
                                                       i32.store offset=4
                                                       global.get $~lib/memory/__stack_pointer
                                                       local.get $0
                                                       i32.store offset=16
                                                       local.get $1
                                                       local.get $2
                                                       local.get $0
                                                       call $"~lib/map/Map<~lib/string/String,i32>#get"
                                                       i32.store
                                                       global.get $~lib/memory/__stack_pointer
                                                       i32.const 20
                                                       i32.add
                                                       global.set $~lib/memory/__stack_pointer
                                                       i32.const 1
                                                       br $__inlined_func$assembly/tests/runtime.test/MockJumpHandler#execute$212
                                                      end
                                                     end
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $1
                                                     i32.store offset=16
                                                     local.get $1
                                                     call $assembly/core/builders/QuantumCircuitBuilder#getGates
                                                     local.set $0
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $0
                                                     i32.store offset=4
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.get $0
                                                     i32.load offset=4
                                                     local.tee $0
                                                     i32.store
                                                     local.get $0
                                                     i32.const 1
                                                     i32.store8 offset=2
                                                     global.get $~lib/memory/__stack_pointer
                                                     i32.const 20
                                                     i32.add
                                                     global.set $~lib/memory/__stack_pointer
                                                     i32.const 0
                                                    end
                                                    return
                                                   end
                                                   global.get $~lib/memory/__stack_pointer
                                                   i32.const 16
                                                   i32.sub
                                                   global.set $~lib/memory/__stack_pointer
                                                   global.get $~lib/memory/__stack_pointer
                                                   i32.const 119640
                                                   i32.lt_s
                                                   br_if $folding-inner3
                                                   global.get $~lib/memory/__stack_pointer
                                                   i64.const 0
                                                   i64.store
                                                   global.get $~lib/memory/__stack_pointer
                                                   i64.const 0
                                                   i64.store offset=8
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.set $0
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $2
                                                   i32.store offset=4
                                                   local.get $2
                                                   i32.const 0
                                                   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                   local.set $3
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $3
                                                   i32.store
                                                   local.get $0
                                                   local.get $3
                                                   i32.load
                                                   local.tee $0
                                                   i32.store offset=8
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $1
                                                   i32.store
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $2
                                                   i32.store offset=12
                                                   local.get $2
                                                   i32.const 1
                                                   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                   local.set $2
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $2
                                                   i32.store offset=4
                                                   local.get $1
                                                   local.get $2
                                                   call $assembly/runtime/RISAEngine#parseValue
                                                   local.set $4
                                                   local.get $0
                                                   if
                                                    global.get $~lib/memory/__stack_pointer
                                                    local.get $1
                                                    i32.store offset=12
                                                    local.get $1
                                                    call $assembly/runtime/RISAEngine#getRegisterState
                                                    local.set $1
                                                    global.get $~lib/memory/__stack_pointer
                                                    local.get $1
                                                    i32.store
                                                    global.get $~lib/memory/__stack_pointer
                                                    local.get $0
                                                    i32.store offset=4
                                                    i32.const 2
                                                    global.set $~argumentsLength
                                                    local.get $1
                                                    local.get $0
                                                    local.get $4
                                                    call $assembly/runtime/state/registerState/RegisterState#setRegister@varargs
                                                   end
                                                   global.get $~lib/memory/__stack_pointer
                                                   i32.const 16
                                                   i32.add
                                                   global.set $~lib/memory/__stack_pointer
                                                   br $folding-inner4
                                                  end
                                                  block $__inlined_func$assembly/runtime/instructions/advanced/holographic/HoloStoreInstruction#execute$215 (result i32)
                                                   global.get $~lib/memory/__stack_pointer
                                                   i32.const 20
                                                   i32.sub
                                                   global.set $~lib/memory/__stack_pointer
                                                   global.get $~lib/memory/__stack_pointer
                                                   i32.const 119640
                                                   i32.lt_s
                                                   br_if $folding-inner3
                                                   global.get $~lib/memory/__stack_pointer
                                                   i32.const 0
                                                   i32.const 20
                                                   memory.fill
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $2
                                                   i32.store
                                                   local.get $2
                                                   call $~lib/array/Array<u32>#get:length
                                                   i32.const 2
                                                   i32.lt_s
                                                   if
                                                    global.get $~lib/memory/__stack_pointer
                                                    i32.const 20
                                                    i32.add
                                                    global.set $~lib/memory/__stack_pointer
                                                    i32.const 0
                                                    br $__inlined_func$assembly/runtime/instructions/advanced/holographic/HoloStoreInstruction#execute$215
                                                   end
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.set $0
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $2
                                                   i32.store offset=4
                                                   local.get $2
                                                   i32.const 0
                                                   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                   local.set $3
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $3
                                                   i32.store
                                                   local.get $0
                                                   local.get $3
                                                   call $assembly/runtime/argument/Argument#toString
                                                   local.tee $0
                                                   i32.store offset=8
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.set $3
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $2
                                                   i32.store offset=4
                                                   local.get $2
                                                   i32.const 1
                                                   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                   local.set $2
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $2
                                                   i32.store
                                                   local.get $3
                                                   local.get $2
                                                   call $assembly/runtime/argument/Argument#toString
                                                   local.tee $2
                                                   i32.store offset=12
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $1
                                                   i32.store offset=16
                                                   local.get $1
                                                   call $assembly/runtime/RISAEngine#getRegisterState
                                                   local.set $3
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $3
                                                   i32.store
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $0
                                                   i32.store offset=4
                                                   local.get $3
                                                   local.get $0
                                                   call $assembly/runtime/state/registerState/RegisterState#getRegister
                                                   drop
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $1
                                                   i32.store offset=16
                                                   local.get $1
                                                   call $assembly/runtime/RISAEngine#getRegisterState
                                                   local.set $0
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $0
                                                   i32.store
                                                   global.get $~lib/memory/__stack_pointer
                                                   local.get $2
                                                   i32.store offset=4
                                                   local.get $0
                                                   local.get $2
                                                   call $assembly/runtime/state/registerState/RegisterState#getRegister
                                                   drop
                                                   global.get $~lib/memory/__stack_pointer
                                                   i32.const 20
                                                   i32.add
                                                   global.set $~lib/memory/__stack_pointer
                                                   i32.const 1
                                                  end
                                                  return
                                                 end
                                                 block $__inlined_func$assembly/runtime/instructions/advanced/holographic/HoloRetrieveInstruction#execute$216 (result i32)
                                                  global.get $~lib/memory/__stack_pointer
                                                  i32.const 20
                                                  i32.sub
                                                  global.set $~lib/memory/__stack_pointer
                                                  global.get $~lib/memory/__stack_pointer
                                                  i32.const 119640
                                                  i32.lt_s
                                                  br_if $folding-inner3
                                                  global.get $~lib/memory/__stack_pointer
                                                  i32.const 0
                                                  i32.const 20
                                                  memory.fill
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.get $2
                                                  i32.store
                                                  local.get $2
                                                  call $~lib/array/Array<u32>#get:length
                                                  i32.const 3
                                                  i32.lt_s
                                                  if
                                                   global.get $~lib/memory/__stack_pointer
                                                   i32.const 20
                                                   i32.add
                                                   global.set $~lib/memory/__stack_pointer
                                                   i32.const 0
                                                   br $__inlined_func$assembly/runtime/instructions/advanced/holographic/HoloRetrieveInstruction#execute$216
                                                  end
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.set $0
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.get $2
                                                  i32.store offset=4
                                                  local.get $2
                                                  i32.const 0
                                                  call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                  local.set $3
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.get $3
                                                  i32.store
                                                  local.get $0
                                                  local.get $3
                                                  call $assembly/runtime/argument/Argument#toString
                                                  i32.store offset=8
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.get $1
                                                  i32.store
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.get $2
                                                  i32.store offset=12
                                                  local.get $2
                                                  i32.const 1
                                                  call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                  local.set $0
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.get $0
                                                  i32.store offset=4
                                                  local.get $1
                                                  local.get $0
                                                  call $assembly/runtime/RISAEngine#parseValue
                                                  drop
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.set $0
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.get $2
                                                  i32.store offset=4
                                                  local.get $2
                                                  i32.const 2
                                                  call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                  local.set $1
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.get $1
                                                  i32.store
                                                  local.get $0
                                                  local.get $1
                                                  call $assembly/runtime/argument/Argument#toString
                                                  i32.store offset=16
                                                  global.get $~lib/memory/__stack_pointer
                                                  i32.const 20
                                                  i32.add
                                                  global.set $~lib/memory/__stack_pointer
                                                  i32.const 1
                                                 end
                                                 return
                                                end
                                                block $__inlined_func$assembly/runtime/instructions/advanced/holographic/HoloFragmentInstruction#execute$217 (result i32)
                                                 global.get $~lib/memory/__stack_pointer
                                                 i32.const 20
                                                 i32.sub
                                                 global.set $~lib/memory/__stack_pointer
                                                 global.get $~lib/memory/__stack_pointer
                                                 i32.const 119640
                                                 i32.lt_s
                                                 br_if $folding-inner3
                                                 global.get $~lib/memory/__stack_pointer
                                                 i32.const 0
                                                 i32.const 20
                                                 memory.fill
                                                 global.get $~lib/memory/__stack_pointer
                                                 local.get $2
                                                 i32.store
                                                 local.get $2
                                                 call $~lib/array/Array<u32>#get:length
                                                 i32.const 3
                                                 i32.lt_s
                                                 if
                                                  global.get $~lib/memory/__stack_pointer
                                                  i32.const 20
                                                  i32.add
                                                  global.set $~lib/memory/__stack_pointer
                                                  i32.const 0
                                                  br $__inlined_func$assembly/runtime/instructions/advanced/holographic/HoloFragmentInstruction#execute$217
                                                 end
                                                 global.get $~lib/memory/__stack_pointer
                                                 local.set $0
                                                 global.get $~lib/memory/__stack_pointer
                                                 local.get $2
                                                 i32.store offset=4
                                                 local.get $2
                                                 i32.const 0
                                                 call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                 local.set $3
                                                 global.get $~lib/memory/__stack_pointer
                                                 local.get $3
                                                 i32.store
                                                 local.get $0
                                                 local.get $3
                                                 call $assembly/runtime/argument/Argument#toString
                                                 i32.store offset=8
                                                 global.get $~lib/memory/__stack_pointer
                                                 local.get $1
                                                 i32.store
                                                 global.get $~lib/memory/__stack_pointer
                                                 local.get $2
                                                 i32.store offset=12
                                                 local.get $2
                                                 i32.const 1
                                                 call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                 local.set $0
                                                 global.get $~lib/memory/__stack_pointer
                                                 local.get $0
                                                 i32.store offset=4
                                                 local.get $1
                                                 local.get $0
                                                 call $assembly/runtime/RISAEngine#parseValue
                                                 drop
                                                 global.get $~lib/memory/__stack_pointer
                                                 local.set $0
                                                 global.get $~lib/memory/__stack_pointer
                                                 local.get $2
                                                 i32.store offset=4
                                                 local.get $2
                                                 i32.const 2
                                                 call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                 local.set $1
                                                 global.get $~lib/memory/__stack_pointer
                                                 local.get $1
                                                 i32.store
                                                 local.get $0
                                                 local.get $1
                                                 call $assembly/runtime/argument/Argument#toString
                                                 i32.store offset=16
                                                 global.get $~lib/memory/__stack_pointer
                                                 i32.const 20
                                                 i32.add
                                                 global.set $~lib/memory/__stack_pointer
                                                 i32.const 1
                                                end
                                                return
                                               end
                                               block $__inlined_func$assembly/runtime/instructions/advanced/multiBasis/BasisCreateInstruction#execute$218 (result i32)
                                                global.get $~lib/memory/__stack_pointer
                                                i32.const 8
                                                i32.sub
                                                global.set $~lib/memory/__stack_pointer
                                                global.get $~lib/memory/__stack_pointer
                                                i32.const 119640
                                                i32.lt_s
                                                br_if $folding-inner3
                                                global.get $~lib/memory/__stack_pointer
                                                i64.const 0
                                                i64.store
                                                global.get $~lib/memory/__stack_pointer
                                                local.get $2
                                                i32.store
                                                local.get $2
                                                call $~lib/array/Array<u32>#get:length
                                                i32.const 0
                                                i32.le_s
                                                if
                                                 global.get $~lib/memory/__stack_pointer
                                                 i32.const 8
                                                 i32.add
                                                 global.set $~lib/memory/__stack_pointer
                                                 i32.const 0
                                                 br $__inlined_func$assembly/runtime/instructions/advanced/multiBasis/BasisCreateInstruction#execute$218
                                                end
                                                global.get $~lib/memory/__stack_pointer
                                                local.get $2
                                                i32.store offset=4
                                                local.get $2
                                                i32.const 0
                                                call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                                local.set $0
                                                global.get $~lib/memory/__stack_pointer
                                                local.get $0
                                                i32.store
                                                local.get $0
                                                i32.load offset=16
                                                drop
                                                global.get $~lib/memory/__stack_pointer
                                                i32.const 8
                                                i32.add
                                                global.set $~lib/memory/__stack_pointer
                                                i32.const 1
                                               end
                                               return
                                              end
                                              block $__inlined_func$assembly/runtime/instructions/advanced/multiBasis/BasisTransformInstruction#execute$219 (result i32)
                                               global.get $~lib/memory/__stack_pointer
                                               i32.const 8
                                               i32.sub
                                               global.set $~lib/memory/__stack_pointer
                                               global.get $~lib/memory/__stack_pointer
                                               i32.const 119640
                                               i32.lt_s
                                               br_if $folding-inner3
                                               global.get $~lib/memory/__stack_pointer
                                               i64.const 0
                                               i64.store
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $2
                                               i32.store
                                               local.get $2
                                               call $~lib/array/Array<u32>#get:length
                                               i32.const 2
                                               i32.lt_s
                                               if
                                                global.get $~lib/memory/__stack_pointer
                                                i32.const 8
                                                i32.add
                                                global.set $~lib/memory/__stack_pointer
                                                i32.const 0
                                                br $__inlined_func$assembly/runtime/instructions/advanced/multiBasis/BasisTransformInstruction#execute$219
                                               end
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $2
                                               i32.store offset=4
                                               local.get $2
                                               i32.const 0
                                               call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                               local.set $0
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $0
                                               i32.store
                                               local.get $0
                                               i32.load offset=16
                                               drop
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $2
                                               i32.store offset=4
                                               local.get $2
                                               i32.const 1
                                               call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                               local.set $0
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $0
                                               i32.store
                                               local.get $0
                                               i32.load offset=16
                                               drop
                                               global.get $~lib/memory/__stack_pointer
                                               i32.const 8
                                               i32.add
                                               global.set $~lib/memory/__stack_pointer
                                               i32.const 1
                                              end
                                              return
                                             end
                                             block $__inlined_func$assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherenceInstruction#execute$221 (result i32)
                                              global.get $~lib/memory/__stack_pointer
                                              i32.const 12
                                              i32.sub
                                              global.set $~lib/memory/__stack_pointer
                                              global.get $~lib/memory/__stack_pointer
                                              i32.const 119640
                                              i32.lt_s
                                              br_if $folding-inner3
                                              global.get $~lib/memory/__stack_pointer
                                              i64.const 0
                                              i64.store
                                              global.get $~lib/memory/__stack_pointer
                                              i32.const 0
                                              i32.store offset=8
                                              global.get $~lib/memory/__stack_pointer
                                              local.get $2
                                              i32.store
                                              local.get $2
                                              call $~lib/array/Array<u32>#get:length
                                              i32.const 3
                                              i32.lt_s
                                              if
                                               global.get $~lib/memory/__stack_pointer
                                               i32.const 12
                                               i32.add
                                               global.set $~lib/memory/__stack_pointer
                                               i32.const 0
                                               br $__inlined_func$assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherenceInstruction#execute$221
                                              end
                                              global.get $~lib/memory/__stack_pointer
                                              local.get $2
                                              i32.store offset=4
                                              local.get $2
                                              i32.const 0
                                              call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                              local.set $0
                                              global.get $~lib/memory/__stack_pointer
                                              local.get $0
                                              i32.store
                                              local.get $0
                                              i32.load offset=16
                                              drop
                                              global.get $~lib/memory/__stack_pointer
                                              local.get $2
                                              i32.store offset=4
                                              local.get $2
                                              i32.const 1
                                              call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                              local.set $0
                                              global.get $~lib/memory/__stack_pointer
                                              local.get $0
                                              i32.store
                                              local.get $0
                                              i32.load offset=16
                                              drop
                                              global.get $~lib/memory/__stack_pointer
                                              local.set $0
                                              global.get $~lib/memory/__stack_pointer
                                              local.get $2
                                              i32.store offset=4
                                              local.get $2
                                              i32.const 2
                                              call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                              local.set $1
                                              global.get $~lib/memory/__stack_pointer
                                              local.get $1
                                              i32.store
                                              local.get $0
                                              local.get $1
                                              call $assembly/runtime/argument/Argument#toString
                                              i32.store offset=8
                                              global.get $~lib/memory/__stack_pointer
                                              i32.const 12
                                              i32.add
                                              global.set $~lib/memory/__stack_pointer
                                              i32.const 1
                                             end
                                             return
                                            end
                                            block $__inlined_func$assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLockInstruction#execute$222 (result i32)
                                             global.get $~lib/memory/__stack_pointer
                                             i32.const 20
                                             i32.sub
                                             global.set $~lib/memory/__stack_pointer
                                             global.get $~lib/memory/__stack_pointer
                                             i32.const 119640
                                             i32.lt_s
                                             br_if $folding-inner3
                                             global.get $~lib/memory/__stack_pointer
                                             i32.const 0
                                             i32.const 20
                                             memory.fill
                                             global.get $~lib/memory/__stack_pointer
                                             local.get $2
                                             i32.store
                                             local.get $2
                                             call $~lib/array/Array<u32>#get:length
                                             i32.const 3
                                             i32.lt_s
                                             if
                                              global.get $~lib/memory/__stack_pointer
                                              i32.const 20
                                              i32.add
                                              global.set $~lib/memory/__stack_pointer
                                              i32.const 0
                                              br $__inlined_func$assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLockInstruction#execute$222
                                             end
                                             global.get $~lib/memory/__stack_pointer
                                             local.set $0
                                             global.get $~lib/memory/__stack_pointer
                                             local.get $2
                                             i32.store offset=4
                                             local.get $2
                                             i32.const 0
                                             call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                             local.set $1
                                             global.get $~lib/memory/__stack_pointer
                                             local.get $1
                                             i32.store
                                             local.get $0
                                             local.get $1
                                             call $assembly/runtime/argument/Argument#toString
                                             i32.store offset=8
                                             global.get $~lib/memory/__stack_pointer
                                             local.set $0
                                             global.get $~lib/memory/__stack_pointer
                                             local.get $2
                                             i32.store offset=4
                                             local.get $2
                                             i32.const 1
                                             call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                             local.set $1
                                             global.get $~lib/memory/__stack_pointer
                                             local.get $1
                                             i32.store
                                             local.get $0
                                             local.get $1
                                             call $assembly/runtime/argument/Argument#toString
                                             i32.store offset=12
                                             global.get $~lib/memory/__stack_pointer
                                             local.set $0
                                             global.get $~lib/memory/__stack_pointer
                                             local.get $2
                                             i32.store offset=4
                                             local.get $2
                                             i32.const 2
                                             call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                             local.set $1
                                             global.get $~lib/memory/__stack_pointer
                                             local.get $1
                                             i32.store
                                             local.get $0
                                             local.get $1
                                             call $assembly/runtime/argument/Argument#toString
                                             i32.store offset=16
                                             global.get $~lib/memory/__stack_pointer
                                             i32.const 20
                                             i32.add
                                             global.set $~lib/memory/__stack_pointer
                                             i32.const 1
                                            end
                                            return
                                           end
                                           block $__inlined_func$assembly/runtime/instructions/advanced/resonance/ResonanceInstruction#execute$223 (result i32)
                                            global.get $~lib/memory/__stack_pointer
                                            i32.const 28
                                            i32.sub
                                            global.set $~lib/memory/__stack_pointer
                                            global.get $~lib/memory/__stack_pointer
                                            i32.const 119640
                                            i32.lt_s
                                            br_if $folding-inner3
                                            global.get $~lib/memory/__stack_pointer
                                            i32.const 0
                                            i32.const 28
                                            memory.fill
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $2
                                            i32.store
                                            local.get $2
                                            call $~lib/array/Array<u32>#get:length
                                            i32.const 3
                                            i32.lt_s
                                            if
                                             global.get $~lib/memory/__stack_pointer
                                             i32.const 28
                                             i32.add
                                             global.set $~lib/memory/__stack_pointer
                                             i32.const 0
                                             br $__inlined_func$assembly/runtime/instructions/advanced/resonance/ResonanceInstruction#execute$223
                                            end
                                            global.get $~lib/memory/__stack_pointer
                                            local.set $0
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $2
                                            i32.store offset=4
                                            local.get $2
                                            i32.const 0
                                            call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                            local.set $3
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $3
                                            i32.store
                                            local.get $0
                                            local.get $3
                                            call $assembly/runtime/argument/Argument#toString
                                            local.tee $0
                                            i32.store offset=8
                                            global.get $~lib/memory/__stack_pointer
                                            local.set $3
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $2
                                            i32.store offset=4
                                            local.get $2
                                            i32.const 1
                                            call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                            local.set $6
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $6
                                            i32.store
                                            local.get $3
                                            local.get $6
                                            call $assembly/runtime/argument/Argument#toString
                                            local.tee $3
                                            i32.store offset=12
                                            global.get $~lib/memory/__stack_pointer
                                            local.set $6
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $2
                                            i32.store offset=4
                                            local.get $2
                                            i32.const 2
                                            call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                            local.set $2
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $2
                                            i32.store
                                            local.get $6
                                            local.get $2
                                            call $assembly/runtime/argument/Argument#toString
                                            i32.store offset=16
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $1
                                            i32.store offset=20
                                            local.get $1
                                            call $assembly/runtime/RISAEngine#getRegisterState
                                            local.set $2
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $2
                                            i32.store
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $0
                                            i32.store offset=4
                                            local.get $2
                                            local.get $0
                                            call $assembly/runtime/state/registerState/RegisterState#getRegister
                                            local.set $4
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $1
                                            i32.store offset=20
                                            local.get $1
                                            call $assembly/runtime/RISAEngine#getRegisterState
                                            local.set $0
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $0
                                            i32.store
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $3
                                            i32.store offset=4
                                            local.get $0
                                            local.get $3
                                            call $assembly/runtime/state/registerState/RegisterState#getRegister
                                            local.set $5
                                            global.get $~lib/memory/__stack_pointer
                                            local.set $0
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $1
                                            i32.store offset=4
                                            local.get $1
                                            call $assembly/runtime/RISAEngine#getPrimeEngine
                                            local.set $1
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $1
                                            i32.store
                                            global.get $~lib/memory/__stack_pointer
                                            i32.const 8
                                            i32.sub
                                            global.set $~lib/memory/__stack_pointer
                                            global.get $~lib/memory/__stack_pointer
                                            i32.const 119640
                                            i32.lt_s
                                            br_if $folding-inner3
                                            global.get $~lib/memory/__stack_pointer
                                            i64.const 0
                                            i64.store
                                            local.get $5
                                            i32.trunc_sat_f64_s
                                            f64.convert_i32_s
                                            call $~lib/math/NativeMath.log
                                            local.get $4
                                            i32.trunc_sat_f64_s
                                            f64.convert_i32_s
                                            call $~lib/math/NativeMath.log
                                            f64.div
                                            local.set $4
                                            global.get $~lib/memory/__stack_pointer
                                            f64.const 0
                                            local.get $4
                                            f64.const 6.283185307179586
                                            f64.mul
                                            call $assembly/types/Complex#constructor
                                            local.tee $1
                                            i32.store
                                            global.get $~lib/memory/__stack_pointer
                                            local.get $1
                                            i32.store offset=4
                                            local.get $1
                                            call $assembly/types/Complex#exp
                                            local.set $1
                                            global.get $~lib/memory/__stack_pointer
                                            i32.const 8
                                            i32.add
                                            global.set $~lib/memory/__stack_pointer
                                            local.get $0
                                            local.get $1
                                            i32.store offset=24
                                            global.get $~lib/memory/__stack_pointer
                                            i32.const 28
                                            i32.add
                                            global.set $~lib/memory/__stack_pointer
                                            i32.const 1
                                           end
                                           return
                                          end
                                          block $__inlined_func$assembly/runtime/instructions/advanced/resonance/FactorizeInstruction#execute$224 (result i32)
                                           global.get $~lib/memory/__stack_pointer
                                           i32.const 24
                                           i32.sub
                                           global.set $~lib/memory/__stack_pointer
                                           global.get $~lib/memory/__stack_pointer
                                           i32.const 119640
                                           i32.lt_s
                                           br_if $folding-inner3
                                           global.get $~lib/memory/__stack_pointer
                                           i32.const 0
                                           i32.const 24
                                           memory.fill
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $2
                                           i32.store
                                           local.get $2
                                           call $~lib/array/Array<u32>#get:length
                                           i32.const 2
                                           i32.lt_s
                                           if
                                            global.get $~lib/memory/__stack_pointer
                                            i32.const 24
                                            i32.add
                                            global.set $~lib/memory/__stack_pointer
                                            i32.const 0
                                            br $__inlined_func$assembly/runtime/instructions/advanced/resonance/FactorizeInstruction#execute$224
                                           end
                                           global.get $~lib/memory/__stack_pointer
                                           local.set $0
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $2
                                           i32.store offset=4
                                           local.get $2
                                           i32.const 0
                                           call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                           local.set $3
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $3
                                           i32.store
                                           local.get $0
                                           local.get $3
                                           call $assembly/runtime/argument/Argument#toString
                                           local.tee $0
                                           i32.store offset=8
                                           global.get $~lib/memory/__stack_pointer
                                           local.set $3
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $2
                                           i32.store offset=4
                                           local.get $2
                                           i32.const 1
                                           call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                           local.set $2
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $2
                                           i32.store
                                           local.get $3
                                           local.get $2
                                           call $assembly/runtime/argument/Argument#toString
                                           i32.store offset=12
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $1
                                           i32.store offset=16
                                           local.get $1
                                           call $assembly/runtime/RISAEngine#getRegisterState
                                           local.set $2
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $2
                                           i32.store
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $0
                                           i32.store offset=4
                                           local.get $2
                                           local.get $0
                                           call $assembly/runtime/state/registerState/RegisterState#getRegister
                                           local.set $4
                                           global.get $~lib/memory/__stack_pointer
                                           local.set $0
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $1
                                           i32.store offset=4
                                           local.get $1
                                           call $assembly/runtime/RISAEngine#getPrimeEngine
                                           local.set $1
                                           global.get $~lib/memory/__stack_pointer
                                           local.get $1
                                           i32.store
                                           local.get $0
                                           local.get $4
                                           i32.trunc_sat_f64_s
                                           call $assembly/runtime/state/primeState/PrimeStateEngine#createNumberState
                                           i32.store offset=20
                                           global.get $~lib/memory/__stack_pointer
                                           i32.const 24
                                           i32.add
                                           global.set $~lib/memory/__stack_pointer
                                           i32.const 1
                                          end
                                          return
                                         end
                                         block $__inlined_func$assembly/runtime/instructions/coherence/coherence/CoherenceInstruction#execute$225 (result i32)
                                          global.get $~lib/memory/__stack_pointer
                                          i32.const 24
                                          i32.sub
                                          global.set $~lib/memory/__stack_pointer
                                          global.get $~lib/memory/__stack_pointer
                                          i32.const 119640
                                          i32.lt_s
                                          br_if $folding-inner3
                                          global.get $~lib/memory/__stack_pointer
                                          i32.const 0
                                          i32.const 24
                                          memory.fill
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $2
                                          i32.store
                                          local.get $2
                                          call $~lib/array/Array<u32>#get:length
                                          i32.const 3
                                          i32.lt_s
                                          if
                                           global.get $~lib/memory/__stack_pointer
                                           i32.const 24
                                           i32.add
                                           global.set $~lib/memory/__stack_pointer
                                           i32.const 0
                                           br $__inlined_func$assembly/runtime/instructions/coherence/coherence/CoherenceInstruction#execute$225
                                          end
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $1
                                          i32.store
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $2
                                          i32.store offset=8
                                          local.get $2
                                          i32.const 0
                                          call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                          local.set $0
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $0
                                          i32.store offset=4
                                          local.get $1
                                          local.get $0
                                          call $assembly/runtime/RISAEngine#parsePrime
                                          local.set $0
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $1
                                          i32.store
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $2
                                          i32.store offset=8
                                          local.get $2
                                          i32.const 1
                                          call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                          local.set $3
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $3
                                          i32.store offset=4
                                          local.get $1
                                          local.get $3
                                          call $assembly/runtime/RISAEngine#parsePrime
                                          local.set $3
                                          global.get $~lib/memory/__stack_pointer
                                          local.set $6
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $2
                                          i32.store offset=4
                                          local.get $2
                                          i32.const 2
                                          call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                          local.set $2
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $2
                                          i32.store
                                          local.get $6
                                          local.get $2
                                          call $assembly/runtime/argument/Argument#toString
                                          local.tee $2
                                          i32.store offset=12
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $1
                                          i32.store
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $1
                                          call $assembly/runtime/RISAEngine#getGlobalState
                                          local.tee $6
                                          i32.store offset=16
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $6
                                          i32.store
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $6
                                          local.get $0
                                          local.get $3
                                          call $assembly/runtime/state/globalState/GlobalState#calculatePairwiseCoherence
                                          local.tee $0
                                          i32.store offset=20
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $1
                                          i32.store offset=8
                                          local.get $1
                                          call $assembly/runtime/RISAEngine#getRegisterState
                                          local.set $3
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $3
                                          i32.store
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $2
                                          i32.store offset=4
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $0
                                          i32.store offset=8
                                          local.get $3
                                          local.get $2
                                          local.get $0
                                          f64.load
                                          i32.const 1
                                          call $assembly/runtime/state/registerState/RegisterState#setRegister
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $1
                                          i32.store offset=8
                                          local.get $1
                                          call $assembly/runtime/RISAEngine#getRegisterState
                                          local.set $1
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $1
                                          i32.store
                                          global.get $~lib/memory/__stack_pointer
                                          i32.const 117648
                                          i32.store offset=4
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $0
                                          i32.store offset=8
                                          local.get $1
                                          i32.const 117648
                                          local.get $0
                                          f64.load offset=16
                                          i32.const 0
                                          call $assembly/runtime/state/registerState/RegisterState#setRegister
                                          global.get $~lib/memory/__stack_pointer
                                          i32.const 24
                                          i32.add
                                          global.set $~lib/memory/__stack_pointer
                                          i32.const 1
                                         end
                                         return
                                        end
                                        block $__inlined_func$assembly/runtime/instructions/coherence/coherenceall/CoherenceallInstruction#execute$226 (result i32)
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 20
                                         i32.sub
                                         global.set $~lib/memory/__stack_pointer
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 119640
                                         i32.lt_s
                                         br_if $folding-inner3
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 0
                                         i32.const 20
                                         memory.fill
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $2
                                         i32.store
                                         local.get $2
                                         call $~lib/array/Array<u32>#get:length
                                         i32.const 0
                                         i32.le_s
                                         if
                                          global.get $~lib/memory/__stack_pointer
                                          i32.const 20
                                          i32.add
                                          global.set $~lib/memory/__stack_pointer
                                          i32.const 0
                                          br $__inlined_func$assembly/runtime/instructions/coherence/coherenceall/CoherenceallInstruction#execute$226
                                         end
                                         global.get $~lib/memory/__stack_pointer
                                         local.set $0
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $2
                                         i32.store offset=4
                                         local.get $2
                                         i32.const 0
                                         call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                         local.set $2
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $2
                                         i32.store
                                         local.get $0
                                         local.get $2
                                         call $assembly/runtime/argument/Argument#toString
                                         local.tee $0
                                         i32.store offset=8
                                         global.get $~lib/memory/__stack_pointer
                                         local.set $2
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $1
                                         i32.store offset=4
                                         local.get $1
                                         call $assembly/runtime/RISAEngine#getGlobalState
                                         local.set $3
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $3
                                         i32.store
                                         local.get $2
                                         local.get $3
                                         call $assembly/runtime/state/globalState/GlobalState#calculateGlobalCoherence
                                         local.tee $2
                                         i32.store offset=12
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $1
                                         i32.store offset=16
                                         local.get $1
                                         call $assembly/runtime/RISAEngine#getRegisterState
                                         local.set $1
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $1
                                         i32.store
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $0
                                         i32.store offset=4
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $2
                                         i32.store offset=16
                                         local.get $1
                                         local.get $0
                                         local.get $2
                                         f64.load offset=8
                                         i32.const 1
                                         call $assembly/runtime/state/registerState/RegisterState#setRegister
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 20
                                         i32.add
                                         global.set $~lib/memory/__stack_pointer
                                         i32.const 1
                                        end
                                        return
                                       end
                                       block $__inlined_func$assembly/runtime/instructions/coherence/threshold/ThresholdInstruction#execute$227 (result i32)
                                        global.get $~lib/memory/__stack_pointer
                                        i32.const 16
                                        i32.sub
                                        global.set $~lib/memory/__stack_pointer
                                        global.get $~lib/memory/__stack_pointer
                                        i32.const 119640
                                        i32.lt_s
                                        br_if $folding-inner3
                                        global.get $~lib/memory/__stack_pointer
                                        i64.const 0
                                        i64.store
                                        global.get $~lib/memory/__stack_pointer
                                        i64.const 0
                                        i64.store offset=8
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $2
                                        i32.store
                                        local.get $2
                                        call $~lib/array/Array<u32>#get:length
                                        i32.const 2
                                        i32.lt_s
                                        if
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 16
                                         i32.add
                                         global.set $~lib/memory/__stack_pointer
                                         i32.const 0
                                         br $__inlined_func$assembly/runtime/instructions/coherence/threshold/ThresholdInstruction#execute$227
                                        end
                                        global.get $~lib/memory/__stack_pointer
                                        local.set $0
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $2
                                        i32.store offset=4
                                        local.get $2
                                        i32.const 0
                                        call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                        local.set $3
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $3
                                        i32.store
                                        local.get $0
                                        local.get $3
                                        call $assembly/runtime/argument/Argument#toString
                                        local.tee $0
                                        i32.store offset=8
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $1
                                        i32.store
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $2
                                        i32.store offset=12
                                        local.get $2
                                        i32.const 1
                                        call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                        local.set $2
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $2
                                        i32.store offset=4
                                        local.get $1
                                        local.get $2
                                        call $assembly/runtime/RISAEngine#parseValue
                                        local.set $4
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $1
                                        i32.store offset=12
                                        local.get $1
                                        call $assembly/runtime/RISAEngine#getRegisterState
                                        local.set $1
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $1
                                        i32.store
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $0
                                        i32.store offset=4
                                        local.get $1
                                        local.get $0
                                        call $assembly/runtime/state/registerState/RegisterState#getRegister
                                        local.get $4
                                        f64.lt
                                        if
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 16
                                         i32.add
                                         global.set $~lib/memory/__stack_pointer
                                         i32.const 0
                                         br $__inlined_func$assembly/runtime/instructions/coherence/threshold/ThresholdInstruction#execute$227
                                        end
                                        global.get $~lib/memory/__stack_pointer
                                        i32.const 16
                                        i32.add
                                        global.set $~lib/memory/__stack_pointer
                                        i32.const 1
                                       end
                                       return
                                      end
                                      block $__inlined_func$assembly/runtime/instructions/coherence/waitcoh/WaitcohInstruction#execute$228 (result i32)
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 16
                                       i32.sub
                                       global.set $~lib/memory/__stack_pointer
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 119640
                                       i32.lt_s
                                       br_if $folding-inner3
                                       global.get $~lib/memory/__stack_pointer
                                       i64.const 0
                                       i64.store
                                       global.get $~lib/memory/__stack_pointer
                                       i64.const 0
                                       i64.store offset=8
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $2
                                       i32.store
                                       local.get $2
                                       call $~lib/array/Array<u32>#get:length
                                       i32.const 0
                                       i32.le_s
                                       if
                                        global.get $~lib/memory/__stack_pointer
                                        i32.const 16
                                        i32.add
                                        global.set $~lib/memory/__stack_pointer
                                        i32.const 0
                                        br $__inlined_func$assembly/runtime/instructions/coherence/waitcoh/WaitcohInstruction#execute$228
                                       end
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $1
                                       i32.store
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $2
                                       i32.store offset=8
                                       local.get $2
                                       i32.const 0
                                       call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                       local.set $0
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.store offset=4
                                       local.get $1
                                       local.get $0
                                       call $assembly/runtime/RISAEngine#parseValue
                                       local.set $4
                                       global.get $~lib/memory/__stack_pointer
                                       local.set $0
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $1
                                       i32.store offset=4
                                       local.get $1
                                       call $assembly/runtime/RISAEngine#getGlobalState
                                       local.set $1
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $1
                                       i32.store
                                       local.get $0
                                       local.get $1
                                       call $assembly/runtime/state/globalState/GlobalState#calculateGlobalCoherence
                                       local.tee $0
                                       i32.store offset=12
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.store
                                       local.get $4
                                       local.get $0
                                       f64.load offset=8
                                       f64.gt
                                       if
                                        global.get $~lib/memory/__stack_pointer
                                        i32.const 16
                                        i32.add
                                        global.set $~lib/memory/__stack_pointer
                                        i32.const 0
                                        br $__inlined_func$assembly/runtime/instructions/coherence/waitcoh/WaitcohInstruction#execute$228
                                       end
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 16
                                       i32.add
                                       global.set $~lib/memory/__stack_pointer
                                       i32.const 1
                                      end
                                      return
                                     end
                                     global.get $~lib/memory/__stack_pointer
                                     i32.const 16
                                     i32.sub
                                     global.set $~lib/memory/__stack_pointer
                                     global.get $~lib/memory/__stack_pointer
                                     i32.const 119640
                                     i32.lt_s
                                     br_if $folding-inner3
                                     global.get $~lib/memory/__stack_pointer
                                     i64.const 0
                                     i64.store
                                     global.get $~lib/memory/__stack_pointer
                                     i64.const 0
                                     i64.store offset=8
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $1
                                     i32.store
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $1
                                     call $assembly/core/builders/QuantumCircuitBuilder#getGates
                                     local.tee $0
                                     i32.store offset=4
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $0
                                     i32.store offset=8
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $0
                                     i32.load offset=20
                                     local.tee $2
                                     i32.store
                                     local.get $2
                                     call $~lib/array/Array<u32>#get:length
                                     if
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $1
                                      i32.store offset=12
                                      local.get $1
                                      call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId
                                      local.set $2
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $2
                                      i32.store
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $0
                                      i32.store offset=8
                                      local.get $2
                                      local.get $0
                                      call $assembly/runtime/execution/stack/CallStackManager#popLoop
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $1
                                      i32.store
                                      global.get $~lib/memory/__stack_pointer
                                      i32.const 20
                                      i32.sub
                                      global.set $~lib/memory/__stack_pointer
                                      global.get $~lib/memory/__stack_pointer
                                      i32.const 119640
                                      i32.lt_s
                                      br_if $folding-inner3
                                      global.get $~lib/memory/__stack_pointer
                                      i32.const 0
                                      i32.const 20
                                      memory.fill
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $1
                                      i32.store offset=16
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $1
                                      i32.load offset=12
                                      local.tee $0
                                      i32.store
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $1
                                      i32.store offset=16
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $1
                                      i32.load offset=4
                                      local.tee $2
                                      i32.store offset=4
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $1
                                      i32.store offset=16
                                      global.get $~lib/memory/__stack_pointer
                                      local.get $1
                                      i32.load
                                      local.tee $3
                                      i32.store offset=8
                                      global.get $~lib/memory/__stack_pointer
                                      i32.const 3008
                                      i32.store offset=12
                                      local.get $0
                                      local.get $2
                                      local.get $3
                                      i32.const 3008
                                      call $assembly/runtime/execution/controlFlow/ControlFlowManager#skipToMatching
                                      local.tee $0
                                      i32.const -1
                                      i32.ne
                                      if
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $1
                                       i32.store offset=4
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $1
                                       i32.load offset=4
                                       local.tee $1
                                       i32.store
                                       local.get $1
                                       local.get $0
                                       i32.store
                                      end
                                      global.get $~lib/memory/__stack_pointer
                                      i32.const 20
                                      i32.add
                                      global.set $~lib/memory/__stack_pointer
                                     end
                                     global.get $~lib/memory/__stack_pointer
                                     i32.const 16
                                     i32.add
                                     global.set $~lib/memory/__stack_pointer
                                     i32.const 0
                                     return
                                    end
                                    block $__inlined_func$assembly/runtime/instructions/flow/call/CallInstruction#execute$230 (result i32)
                                     global.get $~lib/memory/__stack_pointer
                                     i32.const 28
                                     i32.sub
                                     global.set $~lib/memory/__stack_pointer
                                     global.get $~lib/memory/__stack_pointer
                                     i32.const 119640
                                     i32.lt_s
                                     br_if $folding-inner3
                                     global.get $~lib/memory/__stack_pointer
                                     i32.const 0
                                     i32.const 28
                                     memory.fill
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $2
                                     i32.store
                                     local.get $2
                                     call $~lib/array/Array<u32>#get:length
                                     i32.const 0
                                     i32.le_s
                                     if
                                      global.get $~lib/memory/__stack_pointer
                                      i32.const 28
                                      i32.add
                                      global.set $~lib/memory/__stack_pointer
                                      i32.const 0
                                      br $__inlined_func$assembly/runtime/instructions/flow/call/CallInstruction#execute$230
                                     end
                                     global.get $~lib/memory/__stack_pointer
                                     local.set $0
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $2
                                     i32.store offset=4
                                     local.get $2
                                     i32.const 0
                                     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                     local.set $2
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $2
                                     i32.store
                                     local.get $0
                                     local.get $2
                                     call $assembly/runtime/argument/Argument#toString
                                     local.tee $2
                                     i32.store offset=8
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $1
                                     i32.store
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $1
                                     call $assembly/core/builders/QuantumCircuitBuilder#getGates
                                     local.tee $3
                                     i32.store offset=12
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $1
                                     i32.store offset=16
                                     local.get $1
                                     call $assembly/runtime/RISAEngine#getControlFlowManager
                                     local.set $0
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $0
                                     i32.store
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $2
                                     i32.store offset=4
                                     local.get $0
                                     local.get $2
                                     call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTarget
                                     local.tee $6
                                     i32.const -1
                                     i32.eq
                                     if
                                      global.get $~lib/memory/__stack_pointer
                                      i32.const 28
                                      i32.add
                                      global.set $~lib/memory/__stack_pointer
                                      i32.const 0
                                      br $__inlined_func$assembly/runtime/instructions/flow/call/CallInstruction#execute$230
                                     end
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $1
                                     i32.store offset=24
                                     local.get $1
                                     call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId
                                     local.set $7
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $7
                                     i32.store
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $3
                                     i32.store offset=4
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $2
                                     i32.store offset=16
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $3
                                     i32.store offset=24
                                     local.get $3
                                     i32.load
                                     i32.const 1
                                     i32.add
                                     local.set $8
                                     call $"~lib/map/Map<~lib/string/String,f64>#constructor"
                                     local.set $0
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $0
                                     i32.store offset=20
                                     local.get $7
                                     local.get $3
                                     local.get $2
                                     local.get $8
                                     local.get $0
                                     call $assembly/runtime/execution/stack/CallStackManager#pushCall
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $3
                                     i32.store
                                     local.get $3
                                     local.get $6
                                     i32.store
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $1
                                     i32.store
                                     global.get $~lib/memory/__stack_pointer
                                     local.get $3
                                     i32.store offset=4
                                     local.get $1
                                     local.get $3
                                     call $assembly/runtime/RISAEngine#setContext
                                     global.get $~lib/memory/__stack_pointer
                                     i32.const 28
                                     i32.add
                                     global.set $~lib/memory/__stack_pointer
                                     i32.const 1
                                    end
                                    return
                                   end
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 20
                                   i32.sub
                                   global.set $~lib/memory/__stack_pointer
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 119640
                                   i32.lt_s
                                   br_if $folding-inner3
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 0
                                   i32.const 20
                                   memory.fill
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $1
                                   i32.store
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $1
                                   call $assembly/core/builders/QuantumCircuitBuilder#getGates
                                   local.tee $0
                                   i32.store offset=4
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store offset=8
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.load offset=20
                                   local.tee $1
                                   i32.store
                                   local.get $1
                                   call $~lib/array/Array<u32>#get:length
                                   if
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.store offset=8
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.load offset=20
                                    local.tee $1
                                    i32.store
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.store offset=12
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.load offset=20
                                    local.tee $2
                                    i32.store offset=8
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $1
                                    local.get $2
                                    call $~lib/array/Array<u32>#get:length
                                    i32.const 1
                                    i32.sub
                                    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                    local.tee $1
                                    i32.store offset=16
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.store
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $1
                                    i32.store offset=8
                                    local.get $0
                                    local.get $1
                                    i32.load offset=4
                                    i32.store
                                   end
                                   br $folding-inner0
                                  end
                                  block $__inlined_func$assembly/runtime/instructions/flow/else/ElseInstruction#execute$232 (result i32)
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 20
                                   i32.sub
                                   global.set $~lib/memory/__stack_pointer
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 119640
                                   i32.lt_s
                                   br_if $folding-inner3
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 0
                                   i32.const 20
                                   memory.fill
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $1
                                   i32.store
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $1
                                   call $assembly/core/builders/QuantumCircuitBuilder#getGates
                                   local.tee $0
                                   i32.store offset=4
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store offset=8
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.load offset=24
                                   local.tee $2
                                   i32.store
                                   local.get $2
                                   call $~lib/array/Array<u32>#get:length
                                   i32.eqz
                                   if
                                    global.get $~lib/memory/__stack_pointer
                                    i32.const 20
                                    i32.add
                                    global.set $~lib/memory/__stack_pointer
                                    i32.const 0
                                    br $__inlined_func$assembly/runtime/instructions/flow/else/ElseInstruction#execute$232
                                   end
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store offset=8
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.load offset=24
                                   local.tee $2
                                   i32.store
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store offset=12
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.load offset=24
                                   local.tee $3
                                   i32.store offset=8
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $2
                                   local.get $3
                                   call $~lib/array/Array<u32>#get:length
                                   i32.const 1
                                   i32.sub
                                   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                   local.tee $2
                                   i32.store offset=16
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $2
                                   i32.store
                                   local.get $2
                                   i32.const 1
                                   i32.store8 offset=5
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $1
                                   i32.store
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store offset=8
                                   local.get $1
                                   local.get $0
                                   call $assembly/runtime/RISAEngine#setContext
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $2
                                   i32.store
                                   local.get $2
                                   i32.load8_u offset=4
                                   if
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $1
                                    i32.store
                                    local.get $1
                                    call $assembly/runtime/RISAEngine#skipToEndIf
                                   end
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 20
                                   i32.add
                                   global.set $~lib/memory/__stack_pointer
                                   i32.const 1
                                  end
                                  return
                                 end
                                 block $__inlined_func$assembly/runtime/instructions/flow/endif/EndifInstruction#execute$233 (result i32)
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 16
                                  i32.sub
                                  global.set $~lib/memory/__stack_pointer
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 119640
                                  i32.lt_s
                                  br_if $folding-inner3
                                  global.get $~lib/memory/__stack_pointer
                                  i64.const 0
                                  i64.store
                                  global.get $~lib/memory/__stack_pointer
                                  i64.const 0
                                  i64.store offset=8
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $1
                                  i32.store
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $1
                                  call $assembly/core/builders/QuantumCircuitBuilder#getGates
                                  local.tee $0
                                  i32.store offset=4
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store offset=8
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.load offset=24
                                  local.tee $2
                                  i32.store
                                  local.get $2
                                  call $~lib/array/Array<u32>#get:length
                                  i32.eqz
                                  if
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 16
                                   i32.add
                                   global.set $~lib/memory/__stack_pointer
                                   i32.const 0
                                   br $__inlined_func$assembly/runtime/instructions/flow/endif/EndifInstruction#execute$233
                                  end
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $1
                                  i32.store offset=12
                                  local.get $1
                                  call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId
                                  local.set $2
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $2
                                  i32.store
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store offset=8
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 12
                                  i32.sub
                                  global.set $~lib/memory/__stack_pointer
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 119640
                                  i32.lt_s
                                  br_if $folding-inner3
                                  global.get $~lib/memory/__stack_pointer
                                  i64.const 0
                                  i64.store
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 0
                                  i32.store offset=8
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store offset=4
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.load offset=24
                                  local.tee $3
                                  i32.store
                                  local.get $3
                                  call $~lib/array/Array<u32>#get:length
                                  if
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store offset=4
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.load offset=24
                                   local.tee $3
                                   i32.store
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $3
                                   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#pop
                                   i32.store offset=8
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $2
                                   i32.store
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $2
                                   i32.store offset=4
                                   local.get $2
                                   local.get $2
                                   i32.load offset=8
                                   i32.const 1
                                   i32.add
                                   i32.store offset=8
                                  end
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 12
                                  i32.add
                                  global.set $~lib/memory/__stack_pointer
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $1
                                  i32.store
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store offset=8
                                  local.get $1
                                  local.get $0
                                  call $assembly/runtime/RISAEngine#setContext
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 16
                                  i32.add
                                  global.set $~lib/memory/__stack_pointer
                                  i32.const 1
                                 end
                                 return
                                end
                                block $__inlined_func$assembly/runtime/instructions/flow/endloop/EndloopInstruction#execute$2 (result i32)
                                 global.get $~lib/memory/__stack_pointer
                                 i32.const 20
                                 i32.sub
                                 global.set $~lib/memory/__stack_pointer
                                 global.get $~lib/memory/__stack_pointer
                                 i32.const 119640
                                 i32.lt_s
                                 br_if $folding-inner3
                                 global.get $~lib/memory/__stack_pointer
                                 i32.const 0
                                 i32.const 20
                                 memory.fill
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $1
                                 i32.store
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $1
                                 call $assembly/core/builders/QuantumCircuitBuilder#getGates
                                 local.tee $0
                                 i32.store offset=4
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $0
                                 i32.store offset=8
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $0
                                 i32.load offset=20
                                 local.tee $2
                                 i32.store
                                 local.get $2
                                 call $~lib/array/Array<u32>#get:length
                                 i32.eqz
                                 if
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 20
                                  i32.add
                                  global.set $~lib/memory/__stack_pointer
                                  i32.const 0
                                  br $__inlined_func$assembly/runtime/instructions/flow/endloop/EndloopInstruction#execute$2
                                 end
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $0
                                 i32.store offset=8
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $0
                                 i32.load offset=20
                                 local.tee $2
                                 i32.store
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $0
                                 i32.store offset=12
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $0
                                 i32.load offset=20
                                 local.tee $3
                                 i32.store offset=8
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 local.get $3
                                 call $~lib/array/Array<u32>#get:length
                                 i32.const 1
                                 i32.sub
                                 call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                 local.tee $2
                                 i32.store offset=16
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 i32.store
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 i32.store offset=8
                                 local.get $2
                                 local.get $2
                                 i32.load offset=12
                                 i32.const 1
                                 i32.add
                                 i32.store offset=12
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 i32.store
                                 local.get $2
                                 i32.load offset=12
                                 local.set $3
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $2
                                 i32.store
                                 local.get $3
                                 local.get $2
                                 i32.load offset=16
                                 i32.lt_s
                                 if
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $2
                                  i32.store offset=8
                                  local.get $0
                                  local.get $2
                                  i32.load offset=4
                                  i32.store
                                 else
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $1
                                  i32.store offset=12
                                  local.get $1
                                  call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId
                                  local.set $2
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $2
                                  i32.store
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store offset=8
                                  local.get $2
                                  local.get $0
                                  call $assembly/runtime/execution/stack/CallStackManager#popLoop
                                 end
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $1
                                 i32.store
                                 global.get $~lib/memory/__stack_pointer
                                 local.get $0
                                 i32.store offset=8
                                 local.get $1
                                 local.get $0
                                 call $assembly/runtime/RISAEngine#setContext
                                 global.get $~lib/memory/__stack_pointer
                                 i32.const 20
                                 i32.add
                                 global.set $~lib/memory/__stack_pointer
                                 i32.const 1
                                end
                                return
                               end
                               global.get $~lib/memory/__stack_pointer
                               i32.const 20
                               i32.sub
                               global.set $~lib/memory/__stack_pointer
                               global.get $~lib/memory/__stack_pointer
                               i32.const 119640
                               i32.lt_s
                               br_if $folding-inner3
                               global.get $~lib/memory/__stack_pointer
                               i32.const 0
                               i32.const 20
                               memory.fill
                               global.get $~lib/memory/__stack_pointer
                               local.get $1
                               i32.store
                               global.get $~lib/memory/__stack_pointer
                               local.get $1
                               call $assembly/core/builders/QuantumCircuitBuilder#getGates
                               local.tee $0
                               i32.store offset=4
                               global.get $~lib/memory/__stack_pointer
                               local.get $0
                               i32.store offset=8
                               global.get $~lib/memory/__stack_pointer
                               local.get $0
                               i32.load offset=20
                               local.tee $2
                               i32.store
                               local.get $2
                               call $~lib/array/Array<u32>#get:length
                               if
                                global.get $~lib/memory/__stack_pointer
                                local.get $0
                                i32.store offset=8
                                global.get $~lib/memory/__stack_pointer
                                local.get $0
                                i32.load offset=20
                                local.tee $2
                                i32.store
                                global.get $~lib/memory/__stack_pointer
                                local.get $0
                                i32.store offset=12
                                global.get $~lib/memory/__stack_pointer
                                local.get $0
                                i32.load offset=20
                                local.tee $3
                                i32.store offset=8
                                global.get $~lib/memory/__stack_pointer
                                local.get $2
                                local.get $3
                                call $~lib/array/Array<u32>#get:length
                                i32.const 1
                                i32.sub
                                call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                                local.tee $2
                                i32.store offset=16
                                global.get $~lib/memory/__stack_pointer
                                local.get $0
                                i32.store
                                global.get $~lib/memory/__stack_pointer
                                local.get $2
                                i32.store offset=8
                                local.get $0
                                local.get $2
                                i32.load offset=4
                                i32.store
                                global.get $~lib/memory/__stack_pointer
                                local.get $1
                                i32.store offset=12
                                local.get $1
                                call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId
                                local.set $1
                                global.get $~lib/memory/__stack_pointer
                                local.get $1
                                i32.store
                                global.get $~lib/memory/__stack_pointer
                                local.get $0
                                i32.store offset=8
                                local.get $1
                                local.get $0
                                call $assembly/runtime/execution/stack/CallStackManager#popLoop
                               end
                               br $folding-inner0
                              end
                              block $__inlined_func$assembly/runtime/instructions/flow/goto/GotoInstruction#execute$235 (result i32)
                               global.get $~lib/memory/__stack_pointer
                               i32.const 20
                               i32.sub
                               global.set $~lib/memory/__stack_pointer
                               global.get $~lib/memory/__stack_pointer
                               i32.const 119640
                               i32.lt_s
                               br_if $folding-inner3
                               global.get $~lib/memory/__stack_pointer
                               i32.const 0
                               i32.const 20
                               memory.fill
                               global.get $~lib/memory/__stack_pointer
                               local.get $2
                               i32.store
                               local.get $2
                               call $~lib/array/Array<u32>#get:length
                               i32.const 0
                               i32.le_s
                               if
                                global.get $~lib/memory/__stack_pointer
                                i32.const 20
                                i32.add
                                global.set $~lib/memory/__stack_pointer
                                i32.const 0
                                br $__inlined_func$assembly/runtime/instructions/flow/goto/GotoInstruction#execute$235
                               end
                               global.get $~lib/memory/__stack_pointer
                               local.set $0
                               global.get $~lib/memory/__stack_pointer
                               local.get $2
                               i32.store offset=4
                               local.get $2
                               i32.const 0
                               call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                               local.set $2
                               global.get $~lib/memory/__stack_pointer
                               local.get $2
                               i32.store
                               local.get $0
                               local.get $2
                               call $assembly/runtime/argument/Argument#toString
                               local.tee $0
                               i32.store offset=8
                               global.get $~lib/memory/__stack_pointer
                               local.get $1
                               i32.store
                               global.get $~lib/memory/__stack_pointer
                               local.get $1
                               call $assembly/core/builders/QuantumCircuitBuilder#getGates
                               local.tee $2
                               i32.store offset=12
                               global.get $~lib/memory/__stack_pointer
                               local.get $1
                               i32.store offset=16
                               local.get $1
                               call $assembly/runtime/RISAEngine#getControlFlowManager
                               local.set $3
                               global.get $~lib/memory/__stack_pointer
                               local.get $3
                               i32.store
                               global.get $~lib/memory/__stack_pointer
                               local.get $0
                               i32.store offset=4
                               local.get $3
                               local.get $0
                               call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTarget
                               local.tee $0
                               i32.const -1
                               i32.eq
                               if
                                global.get $~lib/memory/__stack_pointer
                                i32.const 20
                                i32.add
                                global.set $~lib/memory/__stack_pointer
                                i32.const 0
                                br $__inlined_func$assembly/runtime/instructions/flow/goto/GotoInstruction#execute$235
                               end
                               global.get $~lib/memory/__stack_pointer
                               local.get $2
                               i32.store
                               local.get $2
                               local.get $0
                               i32.store
                               global.get $~lib/memory/__stack_pointer
                               local.get $1
                               i32.store
                               global.get $~lib/memory/__stack_pointer
                               local.get $2
                               i32.store offset=4
                               local.get $1
                               local.get $2
                               call $assembly/runtime/RISAEngine#setContext
                               global.get $~lib/memory/__stack_pointer
                               i32.const 20
                               i32.add
                               global.set $~lib/memory/__stack_pointer
                               i32.const 1
                              end
                              return
                             end
                             local.get $1
                             local.get $2
                             call $assembly/runtime/instructions/flow/if/IfInstruction#execute
                             return
                            end
                            local.get $1
                            local.get $2
                            call $assembly/runtime/instructions/flow/ifcoh/IfcohInstruction#execute
                            return
                           end
                           block $__inlined_func$assembly/runtime/instructions/phase/setphase/SetphaseInstruction#execute$236 (result i32)
                            global.get $~lib/memory/__stack_pointer
                            i32.const 12
                            i32.sub
                            global.set $~lib/memory/__stack_pointer
                            global.get $~lib/memory/__stack_pointer
                            i32.const 119640
                            i32.lt_s
                            br_if $folding-inner3
                            global.get $~lib/memory/__stack_pointer
                            i64.const 0
                            i64.store
                            global.get $~lib/memory/__stack_pointer
                            i32.const 0
                            i32.store offset=8
                            global.get $~lib/memory/__stack_pointer
                            local.get $2
                            i32.store
                            local.get $2
                            call $~lib/array/Array<u32>#get:length
                            i32.const 2
                            i32.lt_s
                            if
                             global.get $~lib/memory/__stack_pointer
                             i32.const 12
                             i32.add
                             global.set $~lib/memory/__stack_pointer
                             i32.const 0
                             br $__inlined_func$assembly/runtime/instructions/phase/setphase/SetphaseInstruction#execute$236
                            end
                            global.get $~lib/memory/__stack_pointer
                            local.get $1
                            i32.store
                            global.get $~lib/memory/__stack_pointer
                            local.get $2
                            i32.store offset=8
                            local.get $2
                            i32.const 0
                            call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                            local.set $0
                            global.get $~lib/memory/__stack_pointer
                            local.get $0
                            i32.store offset=4
                            local.get $1
                            local.get $0
                            call $assembly/runtime/RISAEngine#parsePrime
                            local.set $0
                            global.get $~lib/memory/__stack_pointer
                            local.get $1
                            i32.store
                            global.get $~lib/memory/__stack_pointer
                            local.get $2
                            i32.store offset=8
                            local.get $2
                            i32.const 1
                            call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                            local.set $2
                            global.get $~lib/memory/__stack_pointer
                            local.get $2
                            i32.store offset=4
                            local.get $1
                            local.get $2
                            call $assembly/runtime/RISAEngine#parseValue
                            local.set $4
                            global.get $~lib/memory/__stack_pointer
                            local.get $1
                            i32.store offset=4
                            local.get $1
                            call $assembly/runtime/RISAEngine#getPrimeEngine
                            local.set $1
                            global.get $~lib/memory/__stack_pointer
                            local.get $1
                            i32.store
                            local.get $1
                            local.get $0
                            local.get $4
                            call $assembly/runtime/state/primeState/PrimeStateEngine#setPhase
                            global.get $~lib/memory/__stack_pointer
                            i32.const 12
                            i32.add
                            global.set $~lib/memory/__stack_pointer
                            i32.const 1
                           end
                           return
                          end
                          block $__inlined_func$assembly/runtime/instructions/phase/advphase/AdvphaseInstruction#execute$237 (result i32)
                           global.get $~lib/memory/__stack_pointer
                           i32.const 12
                           i32.sub
                           global.set $~lib/memory/__stack_pointer
                           global.get $~lib/memory/__stack_pointer
                           i32.const 119640
                           i32.lt_s
                           br_if $folding-inner3
                           global.get $~lib/memory/__stack_pointer
                           i64.const 0
                           i64.store
                           global.get $~lib/memory/__stack_pointer
                           i32.const 0
                           i32.store offset=8
                           global.get $~lib/memory/__stack_pointer
                           local.get $2
                           i32.store
                           local.get $2
                           call $~lib/array/Array<u32>#get:length
                           i32.const 2
                           i32.lt_s
                           if
                            global.get $~lib/memory/__stack_pointer
                            i32.const 12
                            i32.add
                            global.set $~lib/memory/__stack_pointer
                            i32.const 0
                            br $__inlined_func$assembly/runtime/instructions/phase/advphase/AdvphaseInstruction#execute$237
                           end
                           global.get $~lib/memory/__stack_pointer
                           local.get $1
                           i32.store
                           global.get $~lib/memory/__stack_pointer
                           local.get $2
                           i32.store offset=8
                           local.get $2
                           i32.const 0
                           call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                           local.set $0
                           global.get $~lib/memory/__stack_pointer
                           local.get $0
                           i32.store offset=4
                           local.get $1
                           local.get $0
                           call $assembly/runtime/RISAEngine#parsePrime
                           local.set $0
                           global.get $~lib/memory/__stack_pointer
                           local.get $1
                           i32.store
                           global.get $~lib/memory/__stack_pointer
                           local.get $2
                           i32.store offset=8
                           local.get $2
                           i32.const 1
                           call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                           local.set $2
                           global.get $~lib/memory/__stack_pointer
                           local.get $2
                           i32.store offset=4
                           local.get $1
                           local.get $2
                           call $assembly/runtime/RISAEngine#parseValue
                           local.set $4
                           global.get $~lib/memory/__stack_pointer
                           local.get $1
                           i32.store offset=4
                           local.get $1
                           call $assembly/runtime/RISAEngine#getPrimeEngine
                           local.set $2
                           global.get $~lib/memory/__stack_pointer
                           local.get $2
                           i32.store
                           local.get $2
                           local.get $0
                           call $assembly/runtime/state/primeState/PrimeStateEngine#getPhase
                           local.get $4
                           local.get $0
                           f64.convert_i32_s
                           f64.div
                           f64.add
                           f64.const 6.283185307179586
                           call $~lib/math/NativeMath.mod
                           local.set $4
                           global.get $~lib/memory/__stack_pointer
                           local.get $1
                           i32.store offset=4
                           local.get $1
                           call $assembly/runtime/RISAEngine#getPrimeEngine
                           local.set $1
                           global.get $~lib/memory/__stack_pointer
                           local.get $1
                           i32.store
                           local.get $1
                           local.get $0
                           local.get $4
                           call $assembly/runtime/state/primeState/PrimeStateEngine#setPhase
                           global.get $~lib/memory/__stack_pointer
                           i32.const 12
                           i32.add
                           global.set $~lib/memory/__stack_pointer
                           i32.const 1
                          end
                          return
                         end
                         block $__inlined_func$assembly/runtime/instructions/phase/decohere/DecohereInstruction#execute$238 (result i32)
                          global.get $~lib/memory/__stack_pointer
                          i32.const 12
                          i32.sub
                          global.set $~lib/memory/__stack_pointer
                          global.get $~lib/memory/__stack_pointer
                          i32.const 119640
                          i32.lt_s
                          br_if $folding-inner3
                          global.get $~lib/memory/__stack_pointer
                          i64.const 0
                          i64.store
                          global.get $~lib/memory/__stack_pointer
                          i32.const 0
                          i32.store offset=8
                          global.get $~lib/memory/__stack_pointer
                          local.get $2
                          i32.store
                          local.get $2
                          call $~lib/array/Array<u32>#get:length
                          i32.const 0
                          i32.le_s
                          if
                           global.get $~lib/memory/__stack_pointer
                           i32.const 12
                           i32.add
                           global.set $~lib/memory/__stack_pointer
                           i32.const 0
                           br $__inlined_func$assembly/runtime/instructions/phase/decohere/DecohereInstruction#execute$238
                          end
                          global.get $~lib/memory/__stack_pointer
                          local.get $1
                          i32.store
                          global.get $~lib/memory/__stack_pointer
                          local.get $2
                          i32.store offset=8
                          local.get $2
                          i32.const 0
                          call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                          local.set $0
                          global.get $~lib/memory/__stack_pointer
                          local.get $0
                          i32.store offset=4
                          local.get $1
                          local.get $0
                          call $assembly/runtime/RISAEngine#parsePrime
                          local.set $0
                          global.get $~lib/memory/__stack_pointer
                          local.get $1
                          i32.store offset=4
                          local.get $1
                          call $assembly/runtime/RISAEngine#getPrimeEngine
                          local.set $1
                          global.get $~lib/memory/__stack_pointer
                          local.get $1
                          i32.store
                          local.get $1
                          local.get $0
                          call $~lib/math/NativeMath.random
                          f64.const 2
                          f64.mul
                          f64.const 3.141592653589793
                          f64.mul
                          call $assembly/runtime/state/primeState/PrimeStateEngine#setPhase
                          global.get $~lib/memory/__stack_pointer
                          i32.const 12
                          i32.add
                          global.set $~lib/memory/__stack_pointer
                          i32.const 1
                         end
                         return
                        end
                        block $__inlined_func$assembly/runtime/instructions/phase/entangle/EntangleInstruction#execute$239 (result i32)
                         global.get $~lib/memory/__stack_pointer
                         i32.const 12
                         i32.sub
                         global.set $~lib/memory/__stack_pointer
                         global.get $~lib/memory/__stack_pointer
                         i32.const 119640
                         i32.lt_s
                         br_if $folding-inner3
                         global.get $~lib/memory/__stack_pointer
                         i64.const 0
                         i64.store
                         global.get $~lib/memory/__stack_pointer
                         i32.const 0
                         i32.store offset=8
                         global.get $~lib/memory/__stack_pointer
                         local.get $2
                         i32.store
                         local.get $2
                         call $~lib/array/Array<u32>#get:length
                         i32.const 2
                         i32.lt_s
                         if
                          global.get $~lib/memory/__stack_pointer
                          i32.const 12
                          i32.add
                          global.set $~lib/memory/__stack_pointer
                          i32.const 0
                          br $__inlined_func$assembly/runtime/instructions/phase/entangle/EntangleInstruction#execute$239
                         end
                         global.get $~lib/memory/__stack_pointer
                         local.get $1
                         i32.store
                         global.get $~lib/memory/__stack_pointer
                         local.get $2
                         i32.store offset=8
                         local.get $2
                         i32.const 0
                         call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                         local.set $0
                         global.get $~lib/memory/__stack_pointer
                         local.get $0
                         i32.store offset=4
                         local.get $1
                         local.get $0
                         call $assembly/runtime/RISAEngine#parsePrime
                         local.set $0
                         global.get $~lib/memory/__stack_pointer
                         local.get $1
                         i32.store
                         global.get $~lib/memory/__stack_pointer
                         local.get $2
                         i32.store offset=8
                         local.get $2
                         i32.const 1
                         call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                         local.set $2
                         global.get $~lib/memory/__stack_pointer
                         local.get $2
                         i32.store offset=4
                         local.get $1
                         local.get $2
                         call $assembly/runtime/RISAEngine#parsePrime
                         local.set $2
                         global.get $~lib/memory/__stack_pointer
                         local.get $1
                         i32.store offset=4
                         local.get $1
                         call $assembly/runtime/RISAEngine#getPrimeEngine
                         local.set $1
                         global.get $~lib/memory/__stack_pointer
                         local.get $1
                         i32.store
                         global.get $~lib/memory/__stack_pointer
                         i32.const 4
                         i32.sub
                         global.set $~lib/memory/__stack_pointer
                         global.get $~lib/memory/__stack_pointer
                         i32.const 119640
                         i32.lt_s
                         br_if $folding-inner3
                         global.get $~lib/memory/__stack_pointer
                         i32.const 0
                         i32.store
                         global.get $~lib/memory/__stack_pointer
                         local.get $1
                         i32.store
                         local.get $1
                         local.get $0
                         call $assembly/runtime/state/primeState/PrimeStateEngine#getPhase
                         local.set $4
                         global.get $~lib/memory/__stack_pointer
                         local.get $1
                         i32.store
                         local.get $1
                         local.get $2
                         local.get $4
                         call $assembly/runtime/state/primeState/PrimeStateEngine#setPhase
                         global.get $~lib/memory/__stack_pointer
                         i32.const 4
                         i32.add
                         global.set $~lib/memory/__stack_pointer
                         global.get $~lib/memory/__stack_pointer
                         i32.const 12
                         i32.add
                         global.set $~lib/memory/__stack_pointer
                         i32.const 1
                        end
                        return
                       end
                       i32.const 0
                       local.set $0
                       global.get $~lib/memory/__stack_pointer
                       i32.const 24
                       i32.sub
                       global.set $~lib/memory/__stack_pointer
                       global.get $~lib/memory/__stack_pointer
                       i32.const 119640
                       i32.lt_s
                       br_if $folding-inner3
                       global.get $~lib/memory/__stack_pointer
                       i32.const 0
                       i32.const 24
                       memory.fill
                       global.get $~lib/memory/__stack_pointer
                       local.get $1
                       i32.store
                       global.get $~lib/memory/__stack_pointer
                       local.get $1
                       call $assembly/runtime/RISAEngine#getPrimeEngine
                       local.tee $2
                       i32.store offset=4
                       global.get $~lib/memory/__stack_pointer
                       local.get $2
                       i32.store
                       global.get $~lib/memory/__stack_pointer
                       local.get $2
                       call $assembly/runtime/state/primeState/PrimeStateEngine#getActivePrimes
                       local.tee $6
                       i32.store offset=8
                       global.get $~lib/memory/__stack_pointer
                       i32.const 0
                       i32.const 3
                       i32.const 7
                       i32.const 118464
                       call $~lib/rt/__newArray
                       local.tee $7
                       i32.store offset=12
                       loop $for-loop|0
                        global.get $~lib/memory/__stack_pointer
                        local.get $6
                        i32.store
                        local.get $6
                        call $~lib/array/Array<u32>#get:length
                        local.get $0
                        i32.gt_s
                        if
                         global.get $~lib/memory/__stack_pointer
                         local.get $7
                         i32.store
                         global.get $~lib/memory/__stack_pointer
                         local.get $2
                         i32.store offset=16
                         global.get $~lib/memory/__stack_pointer
                         local.get $6
                         i32.store offset=20
                         local.get $7
                         local.get $2
                         local.get $6
                         local.get $0
                         call $~lib/array/Array<i32>#__get
                         call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
                         call $~lib/array/Array<f64>#push
                         local.get $0
                         i32.const 1
                         i32.add
                         local.set $0
                         br $for-loop|0
                        end
                       end
                       global.get $~lib/memory/__stack_pointer
                       local.get $7
                       i32.store
                       global.get $~lib/memory/__stack_pointer
                       i32.const 118496
                       i32.store offset=16
                       local.get $7
                       i32.const 118496
                       f64.const 0
                       call $~lib/array/Array<f64>#reduce<f64>
                       local.set $5
                       call $~lib/math/NativeMath.random
                       local.get $5
                       f64.mul
                       local.set $5
                       i32.const -1
                       local.set $0
                       loop $for-loop|1
                        global.get $~lib/memory/__stack_pointer
                        local.get $6
                        i32.store
                        local.get $6
                        call $~lib/array/Array<u32>#get:length
                        local.get $3
                        i32.gt_s
                        if
                         block $for-break1
                          global.get $~lib/memory/__stack_pointer
                          local.get $6
                          i32.store
                          local.get $6
                          local.get $3
                          call $~lib/array/Array<i32>#__get
                          local.set $1
                          global.get $~lib/memory/__stack_pointer
                          local.get $7
                          i32.store
                          local.get $7
                          local.get $3
                          call $~lib/array/Array<f64>#__get
                          local.set $9
                          global.get $~lib/memory/__stack_pointer
                          local.get $7
                          i32.store
                          local.get $5
                          local.get $4
                          local.get $9
                          local.get $7
                          local.get $3
                          call $~lib/array/Array<f64>#__get
                          f64.mul
                          f64.add
                          local.tee $4
                          f64.lt
                          if
                           local.get $1
                           local.set $0
                           br $for-break1
                          end
                          local.get $3
                          i32.const 1
                          i32.add
                          local.set $3
                          br $for-loop|1
                         end
                        end
                       end
                       local.get $0
                       i32.const -1
                       i32.ne
                       if
                        i32.const 0
                        local.set $1
                        loop $for-loop|2
                         global.get $~lib/memory/__stack_pointer
                         local.get $6
                         i32.store
                         local.get $6
                         call $~lib/array/Array<u32>#get:length
                         local.get $1
                         i32.gt_s
                         if
                          global.get $~lib/memory/__stack_pointer
                          local.get $6
                          i32.store
                          local.get $6
                          local.get $1
                          call $~lib/array/Array<i32>#__get
                          local.tee $3
                          local.get $0
                          i32.eq
                          if
                           global.get $~lib/memory/__stack_pointer
                           local.get $2
                           i32.store
                           local.get $2
                           local.get $3
                           f64.const 1
                           call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
                          else
                           global.get $~lib/memory/__stack_pointer
                           local.get $2
                           i32.store
                           local.get $2
                           local.get $3
                           f64.const 0
                           call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
                          end
                          local.get $1
                          i32.const 1
                          i32.add
                          local.set $1
                          br $for-loop|2
                         end
                        end
                       end
                       global.get $~lib/memory/__stack_pointer
                       i32.const 24
                       i32.add
                       global.set $~lib/memory/__stack_pointer
                       br $folding-inner4
                      end
                      block $__inlined_func$assembly/runtime/instructions/quantum/measure/MeasureInstruction#execute$3 (result i32)
                       global.get $~lib/memory/__stack_pointer
                       i32.const 24
                       i32.sub
                       global.set $~lib/memory/__stack_pointer
                       global.get $~lib/memory/__stack_pointer
                       i32.const 119640
                       i32.lt_s
                       br_if $folding-inner3
                       global.get $~lib/memory/__stack_pointer
                       i32.const 0
                       i32.const 24
                       memory.fill
                       global.get $~lib/memory/__stack_pointer
                       local.get $2
                       i32.store
                       local.get $2
                       call $~lib/array/Array<u32>#get:length
                       i32.const 2
                       i32.lt_s
                       if
                        global.get $~lib/memory/__stack_pointer
                        i32.const 24
                        i32.add
                        global.set $~lib/memory/__stack_pointer
                        i32.const 0
                        br $__inlined_func$assembly/runtime/instructions/quantum/measure/MeasureInstruction#execute$3
                       end
                       global.get $~lib/memory/__stack_pointer
                       local.get $1
                       i32.store
                       global.get $~lib/memory/__stack_pointer
                       local.get $2
                       i32.store offset=8
                       local.get $2
                       i32.const 0
                       call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                       local.set $0
                       global.get $~lib/memory/__stack_pointer
                       local.get $0
                       i32.store offset=4
                       local.get $1
                       local.get $0
                       call $assembly/runtime/RISAEngine#parsePrime
                       local.set $0
                       global.get $~lib/memory/__stack_pointer
                       local.set $3
                       global.get $~lib/memory/__stack_pointer
                       local.get $2
                       i32.store offset=4
                       local.get $2
                       i32.const 1
                       call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                       local.set $2
                       global.get $~lib/memory/__stack_pointer
                       local.get $2
                       i32.store
                       local.get $3
                       local.get $2
                       call $assembly/runtime/argument/Argument#toString
                       local.tee $2
                       i32.store offset=12
                       global.get $~lib/memory/__stack_pointer
                       local.get $1
                       i32.store
                       global.get $~lib/memory/__stack_pointer
                       local.get $1
                       call $assembly/runtime/RISAEngine#getPrimeEngine
                       local.tee $3
                       i32.store offset=16
                       global.get $~lib/memory/__stack_pointer
                       local.get $3
                       i32.store
                       local.get $3
                       local.get $0
                       call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
                       local.set $4
                       call $~lib/math/NativeMath.random
                       local.get $4
                       local.get $4
                       f64.mul
                       f64.lt
                       local.set $6
                       global.get $~lib/memory/__stack_pointer
                       local.get $1
                       i32.store offset=8
                       local.get $1
                       call $assembly/runtime/RISAEngine#getRegisterState
                       local.set $1
                       global.get $~lib/memory/__stack_pointer
                       local.get $1
                       i32.store
                       global.get $~lib/memory/__stack_pointer
                       local.get $2
                       i32.store offset=4
                       local.get $1
                       local.get $2
                       local.get $6
                       f64.convert_i32_s
                       i32.const 5
                       call $assembly/runtime/state/registerState/RegisterState#setRegister
                       local.get $6
                       if
                        global.get $~lib/memory/__stack_pointer
                        local.get $3
                        i32.store
                        global.get $~lib/memory/__stack_pointer
                        local.get $3
                        call $assembly/runtime/state/primeState/PrimeStateEngine#getActivePrimes
                        local.tee $2
                        i32.store offset=20
                        i32.const 0
                        local.set $1
                        loop $for-loop|00
                         global.get $~lib/memory/__stack_pointer
                         local.get $2
                         i32.store
                         local.get $2
                         call $~lib/array/Array<u32>#get:length
                         local.get $1
                         i32.gt_s
                         if
                          global.get $~lib/memory/__stack_pointer
                          local.get $2
                          i32.store
                          local.get $2
                          local.get $1
                          call $~lib/array/Array<i32>#__get
                          local.tee $6
                          local.get $0
                          i32.eq
                          if
                           global.get $~lib/memory/__stack_pointer
                           local.get $3
                           i32.store
                           local.get $3
                           local.get $6
                           f64.const 1
                           call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
                          else
                           global.get $~lib/memory/__stack_pointer
                           local.get $3
                           i32.store
                           local.get $3
                           local.get $6
                           f64.const 0
                           call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
                          end
                          local.get $1
                          i32.const 1
                          i32.add
                          local.set $1
                          br $for-loop|00
                         end
                        end
                       end
                       global.get $~lib/memory/__stack_pointer
                       i32.const 24
                       i32.add
                       global.set $~lib/memory/__stack_pointer
                       i32.const 1
                      end
                      return
                     end
                     local.get $1
                     local.get $2
                     call $assembly/runtime/instructions/quantum/observe/ObserveInstruction#execute
                     return
                    end
                    local.get $1
                    local.get $2
                    call $assembly/runtime/instructions/quantum/reconstruct/ReconstructInstruction#execute
                    return
                   end
                   block $__inlined_func$assembly/runtime/instructions/resonance/entropy/EntropyInstruction#execute$240 (result i32)
                    global.get $~lib/memory/__stack_pointer
                    i32.const 16
                    i32.sub
                    global.set $~lib/memory/__stack_pointer
                    global.get $~lib/memory/__stack_pointer
                    i32.const 119640
                    i32.lt_s
                    br_if $folding-inner3
                    global.get $~lib/memory/__stack_pointer
                    i64.const 0
                    i64.store
                    global.get $~lib/memory/__stack_pointer
                    i64.const 0
                    i64.store offset=8
                    global.get $~lib/memory/__stack_pointer
                    local.get $2
                    i32.store
                    local.get $2
                    call $~lib/array/Array<u32>#get:length
                    i32.const 0
                    i32.le_s
                    if
                     global.get $~lib/memory/__stack_pointer
                     i32.const 16
                     i32.add
                     global.set $~lib/memory/__stack_pointer
                     i32.const 0
                     br $__inlined_func$assembly/runtime/instructions/resonance/entropy/EntropyInstruction#execute$240
                    end
                    global.get $~lib/memory/__stack_pointer
                    local.set $0
                    global.get $~lib/memory/__stack_pointer
                    local.get $2
                    i32.store offset=4
                    local.get $2
                    i32.const 0
                    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                    local.set $2
                    global.get $~lib/memory/__stack_pointer
                    local.get $2
                    i32.store
                    local.get $0
                    local.get $2
                    call $assembly/runtime/argument/Argument#toString
                    local.tee $0
                    i32.store offset=8
                    global.get $~lib/memory/__stack_pointer
                    local.get $1
                    i32.store offset=4
                    local.get $1
                    call $assembly/runtime/RISAEngine#getGlobalState
                    local.set $2
                    global.get $~lib/memory/__stack_pointer
                    local.get $2
                    i32.store
                    local.get $2
                    call $assembly/runtime/state/globalState/GlobalState#getEntropy
                    local.set $4
                    global.get $~lib/memory/__stack_pointer
                    local.get $1
                    i32.store offset=12
                    local.get $1
                    call $assembly/runtime/RISAEngine#getRegisterState
                    local.set $1
                    global.get $~lib/memory/__stack_pointer
                    local.get $1
                    i32.store
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.store offset=4
                    local.get $1
                    local.get $0
                    local.get $4
                    i32.const 4
                    call $assembly/runtime/state/registerState/RegisterState#setRegister
                    global.get $~lib/memory/__stack_pointer
                    i32.const 16
                    i32.add
                    global.set $~lib/memory/__stack_pointer
                    i32.const 1
                   end
                   return
                  end
                  global.get $~lib/memory/__stack_pointer
                  i32.const 24
                  i32.sub
                  global.set $~lib/memory/__stack_pointer
                  global.get $~lib/memory/__stack_pointer
                  i32.const 119640
                  i32.lt_s
                  br_if $folding-inner3
                  global.get $~lib/memory/__stack_pointer
                  i32.const 0
                  i32.const 24
                  memory.fill
                  global.get $~lib/memory/__stack_pointer
                  local.get $2
                  i32.store
                  block $__inlined_func$assembly/runtime/instructions/resonance/evolve/EvolveInstruction#execute$4
                   local.get $2
                   call $~lib/array/Array<u32>#get:length
                   i32.const 0
                   i32.le_s
                   if
                    global.get $~lib/memory/__stack_pointer
                    i32.const 24
                    i32.add
                    global.set $~lib/memory/__stack_pointer
                    i32.const 0
                    local.set $0
                    br $__inlined_func$assembly/runtime/instructions/resonance/evolve/EvolveInstruction#execute$4
                   end
                   global.get $~lib/memory/__stack_pointer
                   local.get $1
                   i32.store
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store offset=8
                   local.get $2
                   i32.const 0
                   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                   local.set $0
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.store offset=4
                   local.get $1
                   local.get $0
                   call $assembly/runtime/RISAEngine#parseValue
                   local.set $5
                   global.get $~lib/memory/__stack_pointer
                   local.get $1
                   i32.store
                   global.get $~lib/memory/__stack_pointer
                   local.get $1
                   call $assembly/runtime/RISAEngine#getPrimeEngine
                   local.tee $0
                   i32.store offset=12
                   global.get $~lib/memory/__stack_pointer
                   local.get $1
                   i32.store
                   global.get $~lib/memory/__stack_pointer
                   local.get $1
                   call $assembly/runtime/RISAEngine#getGlobalState
                   local.tee $2
                   i32.store offset=16
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store
                   global.get $~lib/memory/__stack_pointer
                   i32.const 4
                   i32.sub
                   global.set $~lib/memory/__stack_pointer
                   global.get $~lib/memory/__stack_pointer
                   i32.const 119640
                   i32.lt_s
                   br_if $folding-inner3
                   global.get $~lib/memory/__stack_pointer
                   i32.const 0
                   i32.store
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store
                   local.get $2
                   local.get $5
                   call $assembly/runtime/state/globalState/GlobalState#updateEntropy
                   global.get $~lib/memory/__stack_pointer
                   i32.const 4
                   i32.add
                   global.set $~lib/memory/__stack_pointer
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.store
                   local.get $2
                   call $assembly/runtime/state/globalState/GlobalState#getEntropy
                   local.tee $9
                   f64.neg
                   local.get $5
                   f64.mul
                   call $~lib/math/NativeMath.exp
                   local.set $4
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.store
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   call $assembly/runtime/state/primeState/PrimeStateEngine#getActivePrimes
                   local.tee $2
                   i32.store offset=20
                   loop $for-loop|01
                    global.get $~lib/memory/__stack_pointer
                    local.get $2
                    i32.store
                    local.get $2
                    call $~lib/array/Array<u32>#get:length
                    local.get $3
                    i32.gt_s
                    if
                     global.get $~lib/memory/__stack_pointer
                     local.get $2
                     i32.store
                     local.get $2
                     local.get $3
                     call $~lib/array/Array<i32>#__get
                     local.set $6
                     global.get $~lib/memory/__stack_pointer
                     local.get $0
                     i32.store
                     local.get $0
                     local.get $6
                     call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
                     local.get $4
                     f64.mul
                     local.set $10
                     global.get $~lib/memory/__stack_pointer
                     local.get $0
                     i32.store
                     local.get $0
                     local.get $6
                     local.get $10
                     call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
                     local.get $3
                     i32.const 1
                     i32.add
                     local.set $3
                     br $for-loop|01
                    end
                   end
                   global.get $~lib/memory/__stack_pointer
                   local.get $1
                   i32.store offset=8
                   local.get $1
                   call $assembly/runtime/RISAEngine#getRegisterState
                   local.set $0
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.store
                   global.get $~lib/memory/__stack_pointer
                   i32.const 118624
                   i32.store offset=4
                   local.get $0
                   i32.const 118624
                   local.get $5
                   i32.const 0
                   call $assembly/runtime/state/registerState/RegisterState#setRegister
                   global.get $~lib/memory/__stack_pointer
                   local.get $1
                   i32.store offset=8
                   local.get $1
                   call $assembly/runtime/RISAEngine#getRegisterState
                   local.set $0
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.store
                   global.get $~lib/memory/__stack_pointer
                   i32.const 3584
                   i32.store offset=4
                   local.get $0
                   i32.const 3584
                   local.get $9
                   i32.const 4
                   call $assembly/runtime/state/registerState/RegisterState#setRegister
                   global.get $~lib/memory/__stack_pointer
                   i32.const 24
                   i32.add
                   global.set $~lib/memory/__stack_pointer
                   i32.const 1
                   local.set $0
                  end
                  local.get $0
                  return
                 end
                 local.get $1
                 local.get $2
                 call $assembly/runtime/instructions/resonance/factorize/FactorizeInstruction#execute
                 return
                end
                block $__inlined_func$assembly/runtime/instructions/resonance/resonance/ResonanceInstruction#execute$241 (result i32)
                 global.get $~lib/memory/__stack_pointer
                 i32.const 16
                 i32.sub
                 global.set $~lib/memory/__stack_pointer
                 global.get $~lib/memory/__stack_pointer
                 i32.const 119640
                 i32.lt_s
                 br_if $folding-inner3
                 global.get $~lib/memory/__stack_pointer
                 i64.const 0
                 i64.store
                 global.get $~lib/memory/__stack_pointer
                 i64.const 0
                 i64.store offset=8
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.store
                 local.get $2
                 call $~lib/array/Array<u32>#get:length
                 i32.const 2
                 i32.lt_s
                 if
                  global.get $~lib/memory/__stack_pointer
                  i32.const 16
                  i32.add
                  global.set $~lib/memory/__stack_pointer
                  i32.const 0
                  br $__inlined_func$assembly/runtime/instructions/resonance/resonance/ResonanceInstruction#execute$241
                 end
                 global.get $~lib/memory/__stack_pointer
                 local.get $1
                 i32.store
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.store offset=8
                 local.get $2
                 i32.const 0
                 call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                 local.set $0
                 global.get $~lib/memory/__stack_pointer
                 local.get $0
                 i32.store offset=4
                 local.get $1
                 local.get $0
                 call $assembly/runtime/RISAEngine#parsePrime
                 local.set $0
                 global.get $~lib/memory/__stack_pointer
                 local.get $1
                 i32.store
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.store offset=8
                 local.get $2
                 i32.const 1
                 call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                 local.set $2
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.store offset=4
                 local.get $1
                 local.get $2
                 call $assembly/runtime/RISAEngine#parseValue
                 local.set $4
                 global.get $~lib/memory/__stack_pointer
                 local.get $1
                 i32.store
                 global.get $~lib/memory/__stack_pointer
                 local.get $1
                 call $assembly/runtime/RISAEngine#getPrimeEngine
                 local.tee $1
                 i32.store offset=12
                 global.get $~lib/memory/__stack_pointer
                 local.get $1
                 i32.store
                 local.get $1
                 local.get $0
                 call $assembly/runtime/state/primeState/PrimeStateEngine#getPhase
                 local.set $5
                 local.get $4
                 call $~lib/math/NativeMath.log
                 f64.const 6.283185307179586
                 f64.mul
                 local.get $0
                 f64.convert_i32_s
                 call $~lib/math/NativeMath.log
                 f64.div
                 local.set $4
                 global.get $~lib/memory/__stack_pointer
                 local.get $1
                 i32.store
                 local.get $1
                 local.get $0
                 local.get $5
                 local.get $4
                 f64.add
                 call $assembly/runtime/state/primeState/PrimeStateEngine#setPhase
                 global.get $~lib/memory/__stack_pointer
                 i32.const 16
                 i32.add
                 global.set $~lib/memory/__stack_pointer
                 i32.const 1
                end
                return
               end
               block $__inlined_func$assembly/runtime/instructions/symbolic/add/AddInstruction#execute$242 (result i32)
                global.get $~lib/memory/__stack_pointer
                i32.const 12
                i32.sub
                global.set $~lib/memory/__stack_pointer
                global.get $~lib/memory/__stack_pointer
                i32.const 119640
                i32.lt_s
                br_if $folding-inner3
                global.get $~lib/memory/__stack_pointer
                i64.const 0
                i64.store
                global.get $~lib/memory/__stack_pointer
                i32.const 0
                i32.store offset=8
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.store
                local.get $2
                call $~lib/array/Array<u32>#get:length
                i32.const 2
                i32.lt_s
                if
                 global.get $~lib/memory/__stack_pointer
                 i32.const 12
                 i32.add
                 global.set $~lib/memory/__stack_pointer
                 i32.const 0
                 br $__inlined_func$assembly/runtime/instructions/symbolic/add/AddInstruction#execute$242
                end
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.store offset=8
                local.get $2
                i32.const 0
                call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                local.set $0
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store offset=4
                local.get $1
                local.get $0
                call $assembly/runtime/RISAEngine#parsePrime
                local.set $0
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.store offset=8
                local.get $2
                i32.const 1
                call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                local.set $2
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.store offset=4
                local.get $1
                local.get $2
                call $assembly/runtime/RISAEngine#parseValue
                local.set $4
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store offset=4
                local.get $1
                call $assembly/runtime/RISAEngine#getPrimeEngine
                local.set $2
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.store
                local.get $2
                local.get $0
                call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
                local.get $4
                f64.add
                f64.const 1
                f64.min
                f64.const 0
                f64.max
                local.set $4
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store offset=4
                local.get $1
                call $assembly/runtime/RISAEngine#getPrimeEngine
                local.set $1
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store
                local.get $1
                local.get $0
                local.get $4
                call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
                global.get $~lib/memory/__stack_pointer
                i32.const 12
                i32.add
                global.set $~lib/memory/__stack_pointer
                i32.const 1
               end
               return
              end
              block $__inlined_func$assembly/runtime/instructions/symbolic/load/LoadInstruction#execute$243 (result i32)
               global.get $~lib/memory/__stack_pointer
               i32.const 12
               i32.sub
               global.set $~lib/memory/__stack_pointer
               global.get $~lib/memory/__stack_pointer
               i32.const 119640
               i32.lt_s
               br_if $folding-inner3
               global.get $~lib/memory/__stack_pointer
               i64.const 0
               i64.store
               global.get $~lib/memory/__stack_pointer
               i32.const 0
               i32.store offset=8
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store
               local.get $2
               call $~lib/array/Array<u32>#get:length
               i32.const 2
               i32.lt_s
               if
                global.get $~lib/memory/__stack_pointer
                i32.const 12
                i32.add
                global.set $~lib/memory/__stack_pointer
                i32.const 0
                br $__inlined_func$assembly/runtime/instructions/symbolic/load/LoadInstruction#execute$243
               end
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store offset=8
               local.get $2
               i32.const 0
               call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
               local.set $0
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store offset=4
               local.get $1
               local.get $0
               call $assembly/runtime/RISAEngine#parsePrime
               local.set $0
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store offset=8
               local.get $2
               i32.const 1
               call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
               local.set $2
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store offset=4
               local.get $1
               local.get $2
               call $assembly/runtime/RISAEngine#parseValue
               local.tee $4
               f64.const 0
               f64.lt
               local.get $4
               f64.const 1
               f64.gt
               i32.or
               if
                global.get $~lib/memory/__stack_pointer
                i32.const 12
                i32.add
                global.set $~lib/memory/__stack_pointer
                i32.const 0
                br $__inlined_func$assembly/runtime/instructions/symbolic/load/LoadInstruction#execute$243
               end
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store offset=4
               local.get $1
               call $assembly/runtime/RISAEngine#getPrimeEngine
               local.set $1
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store
               local.get $1
               local.get $0
               local.get $4
               call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
               global.get $~lib/memory/__stack_pointer
               i32.const 12
               i32.add
               global.set $~lib/memory/__stack_pointer
               i32.const 1
              end
              return
             end
             block $__inlined_func$assembly/runtime/instructions/symbolic/mix/MixInstruction#execute$5 (result i32)
              global.get $~lib/memory/__stack_pointer
              i32.const 12
              i32.sub
              global.set $~lib/memory/__stack_pointer
              global.get $~lib/memory/__stack_pointer
              i32.const 119640
              i32.lt_s
              br_if $folding-inner3
              global.get $~lib/memory/__stack_pointer
              i64.const 0
              i64.store
              global.get $~lib/memory/__stack_pointer
              i32.const 0
              i32.store offset=8
              global.get $~lib/memory/__stack_pointer
              local.get $2
              i32.store
              block $folding-inner01
               local.get $2
               call $~lib/array/Array<u32>#get:length
               i32.const 3
               i32.lt_s
               br_if $folding-inner01
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store offset=8
               local.get $2
               i32.const 0
               call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
               local.set $0
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store offset=4
               local.get $1
               local.get $0
               call $assembly/runtime/RISAEngine#parsePrime
               local.set $0
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store offset=8
               local.get $2
               i32.const 1
               call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
               local.set $3
               global.get $~lib/memory/__stack_pointer
               local.get $3
               i32.store offset=4
               local.get $1
               local.get $3
               call $assembly/runtime/RISAEngine#parsePrime
               local.set $3
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store offset=8
               local.get $2
               i32.const 2
               call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
               local.set $2
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store offset=4
               local.get $1
               local.get $2
               call $assembly/runtime/RISAEngine#parseValue
               local.tee $4
               f64.const 0
               f64.lt
               local.get $4
               f64.const 1
               f64.gt
               i32.or
               br_if $folding-inner01
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store offset=4
               local.get $1
               call $assembly/runtime/RISAEngine#getPrimeEngine
               local.set $2
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store
               local.get $2
               local.get $0
               call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
               f64.const 1
               local.get $4
               f64.sub
               f64.mul
               local.set $5
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store offset=4
               local.get $1
               call $assembly/runtime/RISAEngine#getPrimeEngine
               local.set $2
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store
               local.get $5
               local.get $2
               local.get $3
               call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
               local.get $4
               f64.mul
               f64.add
               local.set $4
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store offset=4
               local.get $1
               call $assembly/runtime/RISAEngine#getPrimeEngine
               local.set $1
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store
               local.get $1
               local.get $0
               local.get $4
               f64.const 1
               f64.min
               f64.const 0
               f64.max
               call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
               global.get $~lib/memory/__stack_pointer
               i32.const 12
               i32.add
               global.set $~lib/memory/__stack_pointer
               i32.const 1
               br $__inlined_func$assembly/runtime/instructions/symbolic/mix/MixInstruction#execute$5
              end
              global.get $~lib/memory/__stack_pointer
              i32.const 12
              i32.add
              global.set $~lib/memory/__stack_pointer
              i32.const 0
             end
             return
            end
            block $__inlined_func$assembly/runtime/instructions/symbolic/scale/ScaleInstruction#execute$244 (result i32)
             global.get $~lib/memory/__stack_pointer
             i32.const 12
             i32.sub
             global.set $~lib/memory/__stack_pointer
             global.get $~lib/memory/__stack_pointer
             i32.const 119640
             i32.lt_s
             br_if $folding-inner3
             global.get $~lib/memory/__stack_pointer
             i64.const 0
             i64.store
             global.get $~lib/memory/__stack_pointer
             i32.const 0
             i32.store offset=8
             global.get $~lib/memory/__stack_pointer
             local.get $2
             i32.store
             local.get $2
             call $~lib/array/Array<u32>#get:length
             i32.const 2
             i32.lt_s
             if
              global.get $~lib/memory/__stack_pointer
              i32.const 12
              i32.add
              global.set $~lib/memory/__stack_pointer
              i32.const 0
              br $__inlined_func$assembly/runtime/instructions/symbolic/scale/ScaleInstruction#execute$244
             end
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store
             global.get $~lib/memory/__stack_pointer
             local.get $2
             i32.store offset=8
             local.get $2
             i32.const 0
             call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
             local.set $0
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store offset=4
             local.get $1
             local.get $0
             call $assembly/runtime/RISAEngine#parsePrime
             local.set $0
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store
             global.get $~lib/memory/__stack_pointer
             local.get $2
             i32.store offset=8
             local.get $2
             i32.const 1
             call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
             local.set $2
             global.get $~lib/memory/__stack_pointer
             local.get $2
             i32.store offset=4
             local.get $1
             local.get $2
             call $assembly/runtime/RISAEngine#parseValue
             local.set $4
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=4
             local.get $1
             call $assembly/runtime/RISAEngine#getPrimeEngine
             local.set $2
             global.get $~lib/memory/__stack_pointer
             local.get $2
             i32.store
             local.get $2
             local.get $0
             call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
             local.get $4
             f64.mul
             f64.const 1
             f64.min
             f64.const 0
             f64.max
             local.set $4
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=4
             local.get $1
             call $assembly/runtime/RISAEngine#getPrimeEngine
             local.set $1
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store
             local.get $1
             local.get $0
             local.get $4
             call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
             global.get $~lib/memory/__stack_pointer
             i32.const 12
             i32.add
             global.set $~lib/memory/__stack_pointer
             i32.const 1
            end
            return
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 12
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 119640
           i32.lt_s
           br_if $folding-inner3
           global.get $~lib/memory/__stack_pointer
           i64.const 0
           i64.store
           global.get $~lib/memory/__stack_pointer
           i32.const 0
           i32.store offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store
           global.get $~lib/memory/__stack_pointer
           local.get $1
           call $assembly/core/builders/QuantumCircuitBuilder#getGates
           local.tee $0
           i32.store offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load offset=4
           local.tee $2
           i32.store
           local.get $2
           i32.const 1
           i32.store8 offset=1
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load offset=4
           local.tee $2
           i32.store
           local.get $2
           i32.const 0
           i32.store8
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store offset=8
           local.get $1
           local.get $0
           call $assembly/runtime/RISAEngine#setContext
           br $folding-inner1
          end
          block $__inlined_func$assembly/runtime/instructions/system/output/OutputInstruction#execute$246 (result i32)
           global.get $~lib/memory/__stack_pointer
           i32.const 12
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 119640
           i32.lt_s
           br_if $folding-inner3
           global.get $~lib/memory/__stack_pointer
           i64.const 0
           i64.store
           global.get $~lib/memory/__stack_pointer
           i32.const 0
           i32.store offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store
           local.get $2
           call $~lib/array/Array<u32>#get:length
           i32.const 0
           i32.le_s
           if
            global.get $~lib/memory/__stack_pointer
            i32.const 12
            i32.add
            global.set $~lib/memory/__stack_pointer
            i32.const 0
            br $__inlined_func$assembly/runtime/instructions/system/output/OutputInstruction#execute$246
           end
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store offset=8
           local.get $2
           i32.const 0
           call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
           local.set $0
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store offset=4
           local.get $1
           local.get $0
           call $assembly/runtime/RISAEngine#parseValue
           drop
           global.get $~lib/memory/__stack_pointer
           i32.const 12
           i32.add
           global.set $~lib/memory/__stack_pointer
           i32.const 1
          end
          return
         end
         block $__inlined_func$assembly/runtime/instructions/system/random/RandomInstruction#execute$247 (result i32)
          global.get $~lib/memory/__stack_pointer
          i32.const 16
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 119640
          i32.lt_s
          br_if $folding-inner3
          global.get $~lib/memory/__stack_pointer
          i64.const 0
          i64.store
          global.get $~lib/memory/__stack_pointer
          i64.const 0
          i64.store offset=8
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store
          local.get $2
          call $~lib/array/Array<u32>#get:length
          i32.const 0
          i32.le_s
          if
           global.get $~lib/memory/__stack_pointer
           i32.const 16
           i32.add
           global.set $~lib/memory/__stack_pointer
           i32.const 0
           br $__inlined_func$assembly/runtime/instructions/system/random/RandomInstruction#execute$247
          end
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store offset=8
          local.get $2
          i32.const 0
          call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
          local.set $0
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store offset=4
          local.get $1
          local.get $0
          call $assembly/runtime/RISAEngine#parsePrime
          local.set $0
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store
          global.get $~lib/memory/__stack_pointer
          local.get $1
          call $assembly/runtime/RISAEngine#getPrimeEngine
          local.tee $1
          i32.store offset=12
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store
          local.get $1
          local.get $0
          call $~lib/math/NativeMath.random
          call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store
          local.get $1
          local.get $0
          call $~lib/math/NativeMath.random
          f64.const 2
          f64.mul
          f64.const 3.141592653589793
          f64.mul
          call $assembly/runtime/state/primeState/PrimeStateEngine#setPhase
          global.get $~lib/memory/__stack_pointer
          i32.const 16
          i32.add
          global.set $~lib/memory/__stack_pointer
          i32.const 1
         end
         return
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 119640
        i32.lt_s
        br_if $folding-inner3
        global.get $~lib/memory/__stack_pointer
        i64.const 0
        i64.store
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=4
        local.get $1
        call $assembly/runtime/RISAEngine#getGlobalState
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 119640
        i32.lt_s
        br_if $folding-inner3
        global.get $~lib/memory/__stack_pointer
        i32.const 0
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store
        local.get $0
        f64.const 0.01
        call $assembly/runtime/state/globalState/GlobalState#updateEntropy
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        br $folding-inner4
       end
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      return
     end
     block $__inlined_func$assembly/runtime/instructions/advanced/holographic/HoloReconstructInstruction#execute$6 (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 119640
      i32.lt_s
      br_if $folding-inner3
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store
      local.get $2
      call $~lib/array/Array<u32>#get:length
      i32.const 2
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 16
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$assembly/runtime/instructions/advanced/holographic/HoloReconstructInstruction#execute$6
      end
      global.get $~lib/memory/__stack_pointer
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      local.get $2
      i32.const 0
      call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      local.get $0
      local.get $1
      call $assembly/runtime/argument/Argument#toString
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      local.get $2
      i32.const 1
      call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      local.get $0
      local.get $1
      call $assembly/runtime/argument/Argument#toString
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1
     end
     return
    end
    i32.const 152432
    i32.const 152480
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/runtime/state/primeState/IPrimeStateEngine#getOscillator@override (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 i32)
  block $folding-inner0
   local.get $0
   i32.const 8
   i32.sub
   i32.load
   i32.const 138
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 119640
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $4
    i32.store
    local.get $4
    local.get $1
    call $"~lib/map/Map<i32,assembly/types/Complex>#has"
    if (result f64)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $4
     i32.store offset=4
     local.get $4
     local.get $1
     call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#get"
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     local.get $4
     call $assembly/types/Complex#abs
    else
     f64.const 0
    end
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $0
    i32.store
    local.get $0
    local.get $1
    call $"~lib/map/Map<i32,f64>#get"
    local.tee $2
    i64.reinterpret_f64
    i64.const 1
    i64.shl
    i64.const 2
    i64.sub
    i64.const -9007199254740994
    i64.gt_u
    if
     f64.const 0
     local.set $2
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 119640
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.const 170
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $3
    f64.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $2
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   unreachable
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/rt/__visit_globals
  (local $0 i32)
  i32.const 1584
  call $~lib/rt/itcms/__visit
  i32.const 1792
  call $~lib/rt/itcms/__visit
  i32.const 27312
  call $~lib/rt/itcms/__visit
  i32.const 20144
  call $~lib/rt/itcms/__visit
  i32.const 6192
  call $~lib/rt/itcms/__visit
  i32.const 1392
  call $~lib/rt/itcms/__visit
  i32.const 117520
  call $~lib/rt/itcms/__visit
  i32.const 117584
  call $~lib/rt/itcms/__visit
  i32.const 15648
  call $~lib/rt/itcms/__visit
  i32.const 16704
  call $~lib/rt/itcms/__visit
  i32.const 20272
  call $~lib/rt/itcms/__visit
  global.get $assembly/tests/runtime.test/mockInstructionHandlers
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 1344
  call $~lib/rt/itcms/__visit
  global.get $assembly/resolang/currentNode
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 4080
  call $~lib/rt/itcms/__visit
  i32.const 4416
  call $~lib/rt/itcms/__visit
  global.get $assembly/runtime/instructions/instructionHandlers
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/entropy-viz/globalSampler
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/entropy-viz/globalTracker
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 4496
  call $~lib/rt/itcms/__visit
  global.get $assembly/core/module-interfaces/moduleRegistry
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/core/validation/ValidationMetadata.metadata
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 4544
  call $~lib/rt/itcms/__visit
  i32.const 4608
  call $~lib/rt/itcms/__visit
  i32.const 4688
  call $~lib/rt/itcms/__visit
  i32.const 4736
  call $~lib/rt/itcms/__visit
  i32.const 4800
  call $~lib/rt/itcms/__visit
  i32.const 4912
  call $~lib/rt/itcms/__visit
  i32.const 4992
  call $~lib/rt/itcms/__visit
  i32.const 5136
  call $~lib/rt/itcms/__visit
  i32.const 5216
  call $~lib/rt/itcms/__visit
  i32.const 5328
  call $~lib/rt/itcms/__visit
  i32.const 5440
  call $~lib/rt/itcms/__visit
  i32.const 5552
  call $~lib/rt/itcms/__visit
  i32.const 5648
  call $~lib/rt/itcms/__visit
  i32.const 5728
  call $~lib/rt/itcms/__visit
  i32.const 5792
  call $~lib/rt/itcms/__visit
  i32.const 5872
  call $~lib/rt/itcms/__visit
  global.get $assembly/core/event-system/globalEventBus
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/core/plugin-system/pluginManager
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/core/plugin-system/serviceLocator
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/holographic/HoloStore
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/holographic/HoloRetrieve
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/holographic/HoloFragment
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/holographic/HoloReconstruct
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/multiBasis/BasisCreate
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/multiBasis/BasisTransform
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAll
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherence
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/quaternionic/QuatCreate
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/quaternionic/QuatSend
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/quaternionic/QuatReceive
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLock
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/resonance/Resonance
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/resonance/Factorize
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/coherence/coherence/coherence
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/coherence/coherenceall/coherenceall
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/coherence/threshold/threshold
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/coherence/waitcoh/waitcoh
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/break/breakInstruction
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/call/call
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/continue/continueInstruction
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/else/elseInstruction
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/endif/endif
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/endloop/endloop
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/endwhile/endwhile
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/goto/gotoInstruction
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/if/ifInstruction
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/ifcoh/ifcoh
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/phase/setphase/setphase
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/phase/advphase/advphase
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/phase/decohere/decohere
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/phase/entangle/entangle
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/quantum/collapse/collapse
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/quantum/measure/measure
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/quantum/observe/observe
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/quantum/reconstruct/reconstruct
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/resonance/entropy/entropy
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/resonance/evolve/evolve
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/resonance/factorize/factorize
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/resonance/resonance/resonance
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/symbolic/add/add
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/symbolic/load/load
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/symbolic/mix/mix
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/symbolic/scale/scale
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/system/halt/halt
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/system/output/output
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/system/random/random
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/system/tick/tick
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/resolang/EntangledNode~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/runtime/RISAEngine~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=12
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=16
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/runtime/execution/context/ExecutionFrame~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=12
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=16
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/core/network-base/QuantumNode~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=24
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=32
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=36
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/tests/core-builders.test/MockProtocolMessage~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=24
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=28
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/resolang/TeleportationChannel~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=16
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner29
   block $folding-inner28
    block $folding-inner27
     block $folding-inner26
      block $folding-inner25
       block $folding-inner24
        block $folding-inner23
         block $folding-inner22
          block $folding-inner20
           block $folding-inner17
            block $folding-inner16
             block $folding-inner15
              block $folding-inner14
               block $folding-inner13
                block $folding-inner12
                 block $folding-inner11
                  block $folding-inner10
                   block $folding-inner9
                    block $folding-inner8
                     block $folding-inner7
                      block $folding-inner6
                       block $folding-inner4
                        block $folding-inner3
                         block $folding-inner2
                          block $folding-inner1
                           block $invalid
                            block $assembly/runtime/state/primeState/IQuantumNumberState
                             block $assembly/quaternion/QuaternionicProjector
                              block $assembly/quaternion/TwistDynamics
                               block $assembly/quaternion-entanglement/EntangledQuaternionPair
                                block $assembly/quaternion/Quaternion
                                 block $assembly/types/PrimeFieldElement
                                  block $assembly/types/ResonantFragment
                                   block $assembly/resolang/TeleportationChannel
                                    block $~lib/staticarray/StaticArray<f64>
                                     block $assembly/core/config-loader/ModuleConfig
                                      block $assembly/core/builders/QuantumCircuitBuilder
                                       block $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>
                                        block $assembly/tests/core-builders.test/MockProtocolMessage
                                         block $assembly/tests/mocks/MockQuantumNode
                                          block $assembly/core/network-base/EntanglableNode
                                           block $assembly/core/network-base/QuantumNode
                                            block $assembly/core/builders/NetworkNodeBuilder
                                             block $assembly/runtime/state/primeState/OscillatorState
                                              block $~lib/staticarray/StaticArray<~lib/string/String>
                                               block $~lib/staticarray/StaticArray<u16>
                                                block $assembly/runtime/execution/controlFlow/ConditionBlock
                                                 block $assembly/runtime/execution/controlFlow/IControlFlowManager
                                                  block $assembly/runtime/execution/stack/IStackLimits
                                                   block $assembly/runtime/execution/stack/ICallStackManager
                                                    block $~lib/staticarray/StaticArray<i32>
                                                     block $assembly/runtime/state/globalState/IGlobalCoherence
                                                      block $assembly/runtime/state/globalState/IEntropyState
                                                       block $assembly/runtime/state/globalState/IGlobalState
                                                        block $assembly/runtime/state/globalState/GlobalState
                                                         block $assembly/runtime/memory/holographic/IHolographicMemory
                                                          block $assembly/types/Complex
                                                           block $assembly/runtime/state/primeState/IPrimeStateEngine
                                                            block $assembly/runtime/state/registerState/IRegisterState
                                                             block $assembly/runtime/execution/context/LoopFrame
                                                              block $assembly/runtime/execution/context/ExecutionFrame
                                                               block $"~lib/map/Map<~lib/string/String,i32>"
                                                                block $assembly/runtime/execution/context/ExecutionMetrics
                                                                 block $assembly/runtime/execution/context/ExecutionFlags
                                                                  block $assembly/runtime/execution/context/ExtendedExecutionContext
                                                                   block $assembly/runtime/IRISAInstruction
                                                                    block $assembly/runtime/RISAEngine
                                                                     block $assembly/core/math/ExtendedGCDResult
                                                                      block $"~lib/map/Map<~lib/string/String,f64>"
                                                                       block $assembly/tests/runtime.test/MockLoadHandler
                                                                        block $assembly/tests/runtime.test/MockLabelHandler
                                                                         block $assembly/tests/runtime.test/MockJumpHandler
                                                                          block $assembly/tests/runtime.test/MockHaltHandler
                                                                           block $assembly/tests/runtime.test/MockAddHandler
                                                                            block $assembly/core/base-interfaces/PluginContext
                                                                             block $~lib/set/Set<~lib/string/String>
                                                                              block $assembly/core/base-interfaces/PluginMetadata
                                                                               block $assembly/core/plugin-system/PluginManager
                                                                                block $assembly/core/base-interfaces/Lifecycle
                                                                                 block $assembly/core/base-interfaces/Plugin
                                                                                  block $assembly/core/module-interfaces/Module
                                                                                   block $assembly/core/event-system/EventPropagation
                                                                                    block $assembly/core/event-system/Event
                                                                                     block $assembly/core/event-system/EventEmitter
                                                                                      block $assembly/core/event-system/EventBus
                                                                                       block $assembly/core/error-handling/ErrorDetails
                                                                                        block $assembly/core/error-handling/RecoveryStrategy
                                                                                         block $assembly/core/error-handling/ErrorHandler
                                                                                          block $assembly/core/errors/PRNError
                                                                                           block $assembly/runtime/instructions/system/tick/TickInstruction
                                                                                            block $assembly/runtime/instructions/system/random/RandomInstruction
                                                                                             block $assembly/runtime/instructions/system/output/OutputInstruction
                                                                                              block $assembly/runtime/instructions/system/halt/HaltInstruction
                                                                                               block $assembly/runtime/instructions/symbolic/scale/ScaleInstruction
                                                                                                block $assembly/runtime/instructions/symbolic/mix/MixInstruction
                                                                                                 block $assembly/runtime/instructions/symbolic/load/LoadInstruction
                                                                                                  block $assembly/runtime/instructions/symbolic/add/AddInstruction
                                                                                                   block $assembly/runtime/instructions/resonance/resonance/ResonanceInstruction
                                                                                                    block $assembly/runtime/instructions/resonance/factorize/FactorizeInstruction
                                                                                                     block $assembly/runtime/instructions/resonance/evolve/EvolveInstruction
                                                                                                      block $assembly/runtime/instructions/resonance/entropy/EntropyInstruction
                                                                                                       block $assembly/runtime/instructions/quantum/reconstruct/ReconstructInstruction
                                                                                                        block $assembly/runtime/instructions/quantum/observe/ObserveInstruction
                                                                                                         block $assembly/runtime/instructions/quantum/measure/MeasureInstruction
                                                                                                          block $assembly/runtime/instructions/quantum/collapse/CollapseInstruction
                                                                                                           block $assembly/runtime/instructions/phase/entangle/EntangleInstruction
                                                                                                            block $assembly/runtime/instructions/phase/decohere/DecohereInstruction
                                                                                                             block $assembly/runtime/instructions/phase/advphase/AdvphaseInstruction
                                                                                                              block $assembly/runtime/instructions/phase/setphase/SetphaseInstruction
                                                                                                               block $assembly/runtime/instructions/flow/ifcoh/IfcohInstruction
                                                                                                                block $assembly/runtime/instructions/flow/if/IfInstruction
                                                                                                                 block $assembly/runtime/instructions/flow/goto/GotoInstruction
                                                                                                                  block $assembly/runtime/instructions/flow/endwhile/EndwhileInstruction
                                                                                                                   block $assembly/runtime/instructions/flow/endloop/EndloopInstruction
                                                                                                                    block $assembly/runtime/instructions/flow/endif/EndifInstruction
                                                                                                                     block $assembly/runtime/instructions/flow/else/ElseInstruction
                                                                                                                      block $assembly/runtime/instructions/flow/continue/ContinueInstruction
                                                                                                                       block $assembly/runtime/instructions/flow/call/CallInstruction
                                                                                                                        block $assembly/runtime/instructions/flow/break/BreakInstruction
                                                                                                                         block $assembly/runtime/instructions/coherence/waitcoh/WaitcohInstruction
                                                                                                                          block $assembly/runtime/instructions/coherence/threshold/ThresholdInstruction
                                                                                                                           block $assembly/runtime/instructions/coherence/coherenceall/CoherenceallInstruction
                                                                                                                            block $assembly/runtime/instructions/coherence/coherence/CoherenceInstruction
                                                                                                                             block $assembly/runtime/instructions/advanced/resonance/FactorizeInstruction
                                                                                                                              block $assembly/runtime/instructions/advanced/resonance/ResonanceInstruction
                                                                                                                               block $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLockInstruction
                                                                                                                                block $assembly/runtime/instructions/advanced/quaternionic/QuatReceiveInstruction
                                                                                                                                 block $assembly/runtime/instructions/advanced/quaternionic/QuatSendInstruction
                                                                                                                                  block $assembly/runtime/instructions/advanced/quaternionic/QuatCreateInstruction
                                                                                                                                   block $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherenceInstruction
                                                                                                                                    block $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAllInstruction
                                                                                                                                     block $assembly/runtime/instructions/advanced/multiBasis/BasisTransformInstruction
                                                                                                                                      block $assembly/runtime/instructions/advanced/multiBasis/BasisCreateInstruction
                                                                                                                                       block $assembly/runtime/instructions/advanced/holographic/HoloReconstructInstruction
                                                                                                                                        block $assembly/runtime/instructions/advanced/holographic/HoloFragmentInstruction
                                                                                                                                         block $assembly/runtime/instructions/advanced/holographic/HoloRetrieveInstruction
                                                                                                                                          block $assembly/runtime/instructions/types/IInstructionHandler
                                                                                                                                           block $assembly/runtime/instructions/advanced/holographic/HoloStoreInstruction
                                                                                                                                            block $~lib/staticarray/StaticArray<u32>
                                                                                                                                             block $assembly/core/interfaces/Serializable
                                                                                                                                              block $~lib/string/String
                                                                                                                                               block $~lib/arraybuffer/ArrayBuffer
                                                                                                                                                block $~lib/object/Object
                                                                                                                                                 local.get $0
                                                                                                                                                 i32.const 8
                                                                                                                                                 i32.sub
                                                                                                                                                 i32.load
                                                                                                                                                 br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $folding-inner1 $folding-inner2 $assembly/core/interfaces/Serializable $~lib/staticarray/StaticArray<u32> $folding-inner3 $folding-inner3 $assembly/runtime/instructions/advanced/holographic/HoloStoreInstruction $assembly/runtime/instructions/types/IInstructionHandler $assembly/runtime/instructions/advanced/holographic/HoloRetrieveInstruction $assembly/runtime/instructions/advanced/holographic/HoloFragmentInstruction $assembly/runtime/instructions/advanced/holographic/HoloReconstructInstruction $assembly/runtime/instructions/advanced/multiBasis/BasisCreateInstruction $assembly/runtime/instructions/advanced/multiBasis/BasisTransformInstruction $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAllInstruction $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherenceInstruction $assembly/runtime/instructions/advanced/quaternionic/QuatCreateInstruction $assembly/runtime/instructions/advanced/quaternionic/QuatSendInstruction $assembly/runtime/instructions/advanced/quaternionic/QuatReceiveInstruction $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLockInstruction $assembly/runtime/instructions/advanced/resonance/ResonanceInstruction $assembly/runtime/instructions/advanced/resonance/FactorizeInstruction $assembly/runtime/instructions/coherence/coherence/CoherenceInstruction $assembly/runtime/instructions/coherence/coherenceall/CoherenceallInstruction $assembly/runtime/instructions/coherence/threshold/ThresholdInstruction $assembly/runtime/instructions/coherence/waitcoh/WaitcohInstruction $assembly/runtime/instructions/flow/break/BreakInstruction $assembly/runtime/instructions/flow/call/CallInstruction $assembly/runtime/instructions/flow/continue/ContinueInstruction $assembly/runtime/instructions/flow/else/ElseInstruction $assembly/runtime/instructions/flow/endif/EndifInstruction $assembly/runtime/instructions/flow/endloop/EndloopInstruction $assembly/runtime/instructions/flow/endwhile/EndwhileInstruction $assembly/runtime/instructions/flow/goto/GotoInstruction $assembly/runtime/instructions/flow/if/IfInstruction $assembly/runtime/instructions/flow/ifcoh/IfcohInstruction $assembly/runtime/instructions/phase/setphase/SetphaseInstruction $assembly/runtime/instructions/phase/advphase/AdvphaseInstruction $assembly/runtime/instructions/phase/decohere/DecohereInstruction $assembly/runtime/instructions/phase/entangle/EntangleInstruction $assembly/runtime/instructions/quantum/collapse/CollapseInstruction $assembly/runtime/instructions/quantum/measure/MeasureInstruction $assembly/runtime/instructions/quantum/observe/ObserveInstruction $assembly/runtime/instructions/quantum/reconstruct/ReconstructInstruction $assembly/runtime/instructions/resonance/entropy/EntropyInstruction $assembly/runtime/instructions/resonance/evolve/EvolveInstruction $assembly/runtime/instructions/resonance/factorize/FactorizeInstruction $assembly/runtime/instructions/resonance/resonance/ResonanceInstruction $assembly/runtime/instructions/symbolic/add/AddInstruction $assembly/runtime/instructions/symbolic/load/LoadInstruction $assembly/runtime/instructions/symbolic/mix/MixInstruction $assembly/runtime/instructions/symbolic/scale/ScaleInstruction $assembly/runtime/instructions/system/halt/HaltInstruction $assembly/runtime/instructions/system/output/OutputInstruction $assembly/runtime/instructions/system/random/RandomInstruction $assembly/runtime/instructions/system/tick/TickInstruction $folding-inner4 $assembly/core/errors/PRNError $folding-inner2 $folding-inner4 $folding-inner6 $folding-inner2 $assembly/core/error-handling/ErrorHandler $folding-inner6 $assembly/core/error-handling/RecoveryStrategy $folding-inner6 $assembly/core/error-handling/ErrorDetails $folding-inner6 $folding-inner1 $folding-inner4 $folding-inner4 $assembly/core/event-system/EventBus $assembly/core/event-system/EventEmitter $assembly/core/event-system/Event $assembly/core/event-system/EventPropagation $folding-inner1 $folding-inner6 $folding-inner4 $folding-inner6 $folding-inner3 $folding-inner8 $assembly/core/module-interfaces/Module $assembly/core/base-interfaces/Plugin $assembly/core/base-interfaces/Lifecycle $folding-inner4 $folding-inner4 $assembly/core/plugin-system/PluginManager $folding-inner2 $assembly/core/base-interfaces/PluginMetadata $folding-inner6 $folding-inner4 $folding-inner1 $folding-inner4 $folding-inner10 $~lib/set/Set<~lib/string/String> $folding-inner4 $folding-inner6 $folding-inner4 $assembly/core/base-interfaces/PluginContext $folding-inner8 $folding-inner4 $assembly/tests/runtime.test/MockAddHandler $assembly/tests/runtime.test/MockHaltHandler $assembly/tests/runtime.test/MockJumpHandler $assembly/tests/runtime.test/MockLabelHandler $assembly/tests/runtime.test/MockLoadHandler $folding-inner12 $folding-inner1 $folding-inner9 $"~lib/map/Map<~lib/string/String,f64>" $folding-inner13 $folding-inner14 $folding-inner6 $assembly/core/math/ExtendedGCDResult $folding-inner1 $assembly/runtime/RISAEngine $assembly/runtime/IRISAInstruction $folding-inner1 $folding-inner6 $folding-inner6 $assembly/runtime/execution/context/ExtendedExecutionContext $assembly/runtime/execution/context/ExecutionFlags $assembly/runtime/execution/context/ExecutionMetrics $folding-inner10 $"~lib/map/Map<~lib/string/String,i32>" $folding-inner6 $assembly/runtime/execution/context/ExecutionFrame $folding-inner6 $assembly/runtime/execution/context/LoopFrame $folding-inner6 $folding-inner14 $folding-inner6 $folding-inner1 $assembly/runtime/state/registerState/IRegisterState $folding-inner20 $folding-inner4 $folding-inner8 $assembly/runtime/state/primeState/IPrimeStateEngine $assembly/types/Complex $folding-inner16 $folding-inner13 $folding-inner2 $assembly/runtime/memory/holographic/IHolographicMemory $folding-inner10 $folding-inner4 $folding-inner16 $assembly/runtime/state/globalState/GlobalState $assembly/runtime/state/globalState/IGlobalState $assembly/runtime/state/globalState/IEntropyState $assembly/runtime/state/globalState/IGlobalCoherence $folding-inner6 $folding-inner22 $~lib/staticarray/StaticArray<i32> $folding-inner4 $folding-inner1 $assembly/runtime/execution/stack/ICallStackManager $assembly/runtime/execution/stack/IStackLimits $folding-inner2 $assembly/runtime/execution/controlFlow/IControlFlowManager $folding-inner13 $assembly/runtime/execution/controlFlow/ConditionBlock $folding-inner16 $folding-inner1 $folding-inner6 $~lib/staticarray/StaticArray<u16> $folding-inner17 $folding-inner28 $~lib/staticarray/StaticArray<~lib/string/String> $assembly/runtime/state/primeState/OscillatorState $folding-inner12 $folding-inner13 $folding-inner8 $folding-inner12 $folding-inner27 $folding-inner6 $folding-inner6 $folding-inner12 $folding-inner1 $folding-inner6 $folding-inner4 $folding-inner12 $folding-inner12 $folding-inner8 $assembly/core/builders/NetworkNodeBuilder $folding-inner2 $folding-inner6 $assembly/core/network-base/QuantumNode $assembly/core/network-base/EntanglableNode $folding-inner1 $assembly/tests/mocks/MockQuantumNode $assembly/tests/core-builders.test/MockProtocolMessage $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage> $folding-inner12 $folding-inner8 $folding-inner6 $folding-inner8 $folding-inner6 $assembly/core/builders/QuantumCircuitBuilder $folding-inner8 $folding-inner6 $folding-inner2 $assembly/core/config-loader/ModuleConfig $folding-inner6 $folding-inner10 $folding-inner4 $folding-inner4 $folding-inner8 $~lib/staticarray/StaticArray<f64> $folding-inner14 $folding-inner27 $folding-inner6 $folding-inner12 $assembly/resolang/TeleportationChannel $folding-inner2 $assembly/types/ResonantFragment $folding-inner8 $folding-inner1 $assembly/types/PrimeFieldElement $folding-inner6 $assembly/quaternion/Quaternion $assembly/quaternion-entanglement/EntangledQuaternionPair $folding-inner1 $folding-inner6 $folding-inner8 $folding-inner16 $assembly/quaternion/TwistDynamics $assembly/quaternion/QuaternionicProjector $folding-inner1 $folding-inner12 $folding-inner4 $folding-inner4 $folding-inner6 $assembly/runtime/state/primeState/IQuantumNumberState $folding-inner27 $folding-inner6 $invalid
                                                                                                                                                end
                                                                                                                                                return
                                                                                                                                               end
                                                                                                                                               return
                                                                                                                                              end
                                                                                                                                              return
                                                                                                                                             end
                                                                                                                                             return
                                                                                                                                            end
                                                                                                                                            return
                                                                                                                                           end
                                                                                                                                           return
                                                                                                                                          end
                                                                                                                                          return
                                                                                                                                         end
                                                                                                                                         return
                                                                                                                                        end
                                                                                                                                        return
                                                                                                                                       end
                                                                                                                                       return
                                                                                                                                      end
                                                                                                                                      return
                                                                                                                                     end
                                                                                                                                     return
                                                                                                                                    end
                                                                                                                                    return
                                                                                                                                   end
                                                                                                                                   return
                                                                                                                                  end
                                                                                                                                  return
                                                                                                                                 end
                                                                                                                                 return
                                                                                                                                end
                                                                                                                                return
                                                                                                                               end
                                                                                                                               return
                                                                                                                              end
                                                                                                                              return
                                                                                                                             end
                                                                                                                             return
                                                                                                                            end
                                                                                                                            return
                                                                                                                           end
                                                                                                                           return
                                                                                                                          end
                                                                                                                          return
                                                                                                                         end
                                                                                                                         return
                                                                                                                        end
                                                                                                                        return
                                                                                                                       end
                                                                                                                       return
                                                                                                                      end
                                                                                                                      return
                                                                                                                     end
                                                                                                                     return
                                                                                                                    end
                                                                                                                    return
                                                                                                                   end
                                                                                                                   return
                                                                                                                  end
                                                                                                                  return
                                                                                                                 end
                                                                                                                 return
                                                                                                                end
                                                                                                                return
                                                                                                               end
                                                                                                               return
                                                                                                              end
                                                                                                              return
                                                                                                             end
                                                                                                             return
                                                                                                            end
                                                                                                            return
                                                                                                           end
                                                                                                           return
                                                                                                          end
                                                                                                          return
                                                                                                         end
                                                                                                         return
                                                                                                        end
                                                                                                        return
                                                                                                       end
                                                                                                       return
                                                                                                      end
                                                                                                      return
                                                                                                     end
                                                                                                     return
                                                                                                    end
                                                                                                    return
                                                                                                   end
                                                                                                   return
                                                                                                  end
                                                                                                  return
                                                                                                 end
                                                                                                 return
                                                                                                end
                                                                                                return
                                                                                               end
                                                                                               return
                                                                                              end
                                                                                              return
                                                                                             end
                                                                                             return
                                                                                            end
                                                                                            return
                                                                                           end
                                                                                           return
                                                                                          end
                                                                                          local.get $0
                                                                                          call $assembly/resolang/EntangledNode~visit
                                                                                          br $folding-inner26
                                                                                         end
                                                                                         return
                                                                                        end
                                                                                        return
                                                                                       end
                                                                                       local.get $0
                                                                                       i32.load
                                                                                       local.tee $1
                                                                                       if
                                                                                        local.get $1
                                                                                        call $~lib/rt/itcms/__visit
                                                                                       end
                                                                                       local.get $0
                                                                                       i32.load offset=4
                                                                                       local.tee $1
                                                                                       if
                                                                                        local.get $1
                                                                                        call $~lib/rt/itcms/__visit
                                                                                       end
                                                                                       local.get $0
                                                                                       i32.load offset=24
                                                                                       local.tee $1
                                                                                       if
                                                                                        local.get $1
                                                                                        call $~lib/rt/itcms/__visit
                                                                                       end
                                                                                       local.get $0
                                                                                       i32.load offset=28
                                                                                       local.tee $1
                                                                                       if
                                                                                        local.get $1
                                                                                        call $~lib/rt/itcms/__visit
                                                                                       end
                                                                                       local.get $0
                                                                                       i32.load offset=32
                                                                                       local.tee $0
                                                                                       if
                                                                                        local.get $0
                                                                                        call $~lib/rt/itcms/__visit
                                                                                       end
                                                                                       return
                                                                                      end
                                                                                      local.get $0
                                                                                      i32.load
                                                                                      local.tee $1
                                                                                      if
                                                                                       local.get $1
                                                                                       call $~lib/rt/itcms/__visit
                                                                                      end
                                                                                      local.get $0
                                                                                      i32.load offset=4
                                                                                      local.tee $1
                                                                                      if
                                                                                       local.get $1
                                                                                       call $~lib/rt/itcms/__visit
                                                                                      end
                                                                                      local.get $0
                                                                                      i32.load offset=8
                                                                                      local.tee $1
                                                                                      if
                                                                                       local.get $1
                                                                                       call $~lib/rt/itcms/__visit
                                                                                      end
                                                                                      br $folding-inner20
                                                                                     end
                                                                                     return
                                                                                    end
                                                                                    local.get $0
                                                                                    i32.load
                                                                                    local.tee $1
                                                                                    if
                                                                                     local.get $1
                                                                                     call $~lib/rt/itcms/__visit
                                                                                    end
                                                                                    br $folding-inner7
                                                                                   end
                                                                                   return
                                                                                  end
                                                                                  return
                                                                                 end
                                                                                 return
                                                                                end
                                                                                return
                                                                               end
                                                                               local.get $0
                                                                               i32.load
                                                                               local.tee $1
                                                                               if
                                                                                local.get $1
                                                                                call $~lib/rt/itcms/__visit
                                                                               end
                                                                               local.get $0
                                                                               i32.load offset=4
                                                                               local.tee $1
                                                                               if
                                                                                local.get $1
                                                                                call $~lib/rt/itcms/__visit
                                                                               end
                                                                               local.get $0
                                                                               i32.load offset=8
                                                                               local.tee $1
                                                                               if
                                                                                local.get $1
                                                                                call $~lib/rt/itcms/__visit
                                                                               end
                                                                               local.get $0
                                                                               i32.load offset=12
                                                                               local.tee $1
                                                                               if
                                                                                local.get $1
                                                                                call $~lib/rt/itcms/__visit
                                                                               end
                                                                               br $folding-inner7
                                                                              end
                                                                              local.get $0
                                                                              i32.load
                                                                              local.tee $1
                                                                              if
                                                                               local.get $1
                                                                               call $~lib/rt/itcms/__visit
                                                                              end
                                                                              local.get $0
                                                                              i32.load offset=4
                                                                              local.tee $1
                                                                              if
                                                                               local.get $1
                                                                               call $~lib/rt/itcms/__visit
                                                                              end
                                                                              br $folding-inner9
                                                                             end
                                                                             global.get $~lib/memory/__stack_pointer
                                                                             i32.const 4
                                                                             i32.sub
                                                                             global.set $~lib/memory/__stack_pointer
                                                                             global.get $~lib/memory/__stack_pointer
                                                                             i32.const 119640
                                                                             i32.lt_s
                                                                             br_if $folding-inner23
                                                                             global.get $~lib/memory/__stack_pointer
                                                                             i32.const 0
                                                                             i32.store
                                                                             global.get $~lib/memory/__stack_pointer
                                                                             local.get $0
                                                                             i32.store
                                                                             local.get $0
                                                                             i32.load
                                                                             call $~lib/rt/itcms/__visit
                                                                             global.get $~lib/memory/__stack_pointer
                                                                             local.get $0
                                                                             i32.store
                                                                             local.get $0
                                                                             i32.load offset=8
                                                                             local.tee $2
                                                                             local.set $1
                                                                             global.get $~lib/memory/__stack_pointer
                                                                             local.get $0
                                                                             i32.store
                                                                             local.get $1
                                                                             local.get $0
                                                                             i32.load offset=16
                                                                             i32.const 3
                                                                             i32.shl
                                                                             i32.add
                                                                             local.set $0
                                                                             loop $while-continue|0
                                                                              local.get $0
                                                                              local.get $1
                                                                              i32.gt_u
                                                                              if
                                                                               local.get $1
                                                                               i32.load offset=4
                                                                               i32.const 1
                                                                               i32.and
                                                                               i32.eqz
                                                                               if
                                                                                local.get $1
                                                                                i32.load
                                                                                call $~lib/rt/itcms/__visit
                                                                               end
                                                                               local.get $1
                                                                               i32.const 8
                                                                               i32.add
                                                                               local.set $1
                                                                               br $while-continue|0
                                                                              end
                                                                             end
                                                                             br $folding-inner11
                                                                            end
                                                                            return
                                                                           end
                                                                           return
                                                                          end
                                                                          return
                                                                         end
                                                                         return
                                                                        end
                                                                        return
                                                                       end
                                                                       return
                                                                      end
                                                                      global.get $~lib/memory/__stack_pointer
                                                                      i32.const 4
                                                                      i32.sub
                                                                      global.set $~lib/memory/__stack_pointer
                                                                      global.get $~lib/memory/__stack_pointer
                                                                      i32.const 119640
                                                                      i32.lt_s
                                                                      br_if $folding-inner23
                                                                      global.get $~lib/memory/__stack_pointer
                                                                      i32.const 0
                                                                      i32.store
                                                                      global.get $~lib/memory/__stack_pointer
                                                                      local.get $0
                                                                      i32.store
                                                                      local.get $0
                                                                      i32.load
                                                                      call $~lib/rt/itcms/__visit
                                                                      global.get $~lib/memory/__stack_pointer
                                                                      local.get $0
                                                                      i32.store
                                                                      local.get $0
                                                                      i32.load offset=8
                                                                      local.tee $2
                                                                      local.set $1
                                                                      global.get $~lib/memory/__stack_pointer
                                                                      local.get $0
                                                                      i32.store
                                                                      local.get $1
                                                                      local.get $0
                                                                      i32.load offset=16
                                                                      i32.const 24
                                                                      i32.mul
                                                                      i32.add
                                                                      local.set $0
                                                                      loop $while-continue|01
                                                                       local.get $0
                                                                       local.get $1
                                                                       i32.gt_u
                                                                       if
                                                                        local.get $1
                                                                        i32.load offset=16
                                                                        i32.const 1
                                                                        i32.and
                                                                        i32.eqz
                                                                        if
                                                                         local.get $1
                                                                         i32.load
                                                                         call $~lib/rt/itcms/__visit
                                                                        end
                                                                        local.get $1
                                                                        i32.const 24
                                                                        i32.add
                                                                        local.set $1
                                                                        br $while-continue|01
                                                                       end
                                                                      end
                                                                      br $folding-inner11
                                                                     end
                                                                     return
                                                                    end
                                                                    local.get $0
                                                                    call $assembly/runtime/RISAEngine~visit
                                                                    return
                                                                   end
                                                                   local.get $0
                                                                   i32.load
                                                                   local.tee $1
                                                                   if
                                                                    local.get $1
                                                                    call $~lib/rt/itcms/__visit
                                                                   end
                                                                   local.get $0
                                                                   i32.load offset=4
                                                                   local.tee $1
                                                                   if
                                                                    local.get $1
                                                                    call $~lib/rt/itcms/__visit
                                                                   end
                                                                   br $folding-inner28
                                                                  end
                                                                  local.get $0
                                                                  i32.load offset=4
                                                                  local.tee $1
                                                                  if
                                                                   local.get $1
                                                                   call $~lib/rt/itcms/__visit
                                                                  end
                                                                  local.get $0
                                                                  i32.load offset=8
                                                                  local.tee $1
                                                                  if
                                                                   local.get $1
                                                                   call $~lib/rt/itcms/__visit
                                                                  end
                                                                  local.get $0
                                                                  i32.load offset=12
                                                                  local.tee $1
                                                                  if
                                                                   local.get $1
                                                                   call $~lib/rt/itcms/__visit
                                                                  end
                                                                  local.get $0
                                                                  i32.load offset=16
                                                                  local.tee $1
                                                                  if
                                                                   local.get $1
                                                                   call $~lib/rt/itcms/__visit
                                                                  end
                                                                  local.get $0
                                                                  i32.load offset=20
                                                                  local.tee $1
                                                                  if
                                                                   local.get $1
                                                                   call $~lib/rt/itcms/__visit
                                                                  end
                                                                  local.get $0
                                                                  i32.load offset=24
                                                                  local.tee $1
                                                                  if
                                                                   local.get $1
                                                                   call $~lib/rt/itcms/__visit
                                                                  end
                                                                  local.get $0
                                                                  i32.load offset=28
                                                                  local.tee $1
                                                                  if
                                                                   local.get $1
                                                                   call $~lib/rt/itcms/__visit
                                                                  end
                                                                  local.get $0
                                                                  i32.load offset=32
                                                                  local.tee $1
                                                                  if
                                                                   local.get $1
                                                                   call $~lib/rt/itcms/__visit
                                                                  end
                                                                  local.get $0
                                                                  i32.load offset=36
                                                                  local.tee $1
                                                                  if
                                                                   local.get $1
                                                                   call $~lib/rt/itcms/__visit
                                                                  end
                                                                  local.get $0
                                                                  i32.load offset=40
                                                                  local.tee $0
                                                                  if
                                                                   local.get $0
                                                                   call $~lib/rt/itcms/__visit
                                                                  end
                                                                  return
                                                                 end
                                                                 return
                                                                end
                                                                return
                                                               end
                                                               global.get $~lib/memory/__stack_pointer
                                                               i32.const 4
                                                               i32.sub
                                                               global.set $~lib/memory/__stack_pointer
                                                               global.get $~lib/memory/__stack_pointer
                                                               i32.const 119640
                                                               i32.lt_s
                                                               br_if $folding-inner23
                                                               global.get $~lib/memory/__stack_pointer
                                                               i32.const 0
                                                               i32.store
                                                               global.get $~lib/memory/__stack_pointer
                                                               local.get $0
                                                               i32.store
                                                               local.get $0
                                                               i32.load
                                                               call $~lib/rt/itcms/__visit
                                                               global.get $~lib/memory/__stack_pointer
                                                               local.get $0
                                                               i32.store
                                                               local.get $0
                                                               i32.load offset=8
                                                               local.tee $2
                                                               local.set $1
                                                               global.get $~lib/memory/__stack_pointer
                                                               local.get $0
                                                               i32.store
                                                               local.get $1
                                                               local.get $0
                                                               i32.load offset=16
                                                               i32.const 12
                                                               i32.mul
                                                               i32.add
                                                               local.set $0
                                                               loop $while-continue|02
                                                                local.get $0
                                                                local.get $1
                                                                i32.gt_u
                                                                if
                                                                 local.get $1
                                                                 i32.load offset=8
                                                                 i32.const 1
                                                                 i32.and
                                                                 i32.eqz
                                                                 if
                                                                  local.get $1
                                                                  i32.load
                                                                  call $~lib/rt/itcms/__visit
                                                                 end
                                                                 local.get $1
                                                                 i32.const 12
                                                                 i32.add
                                                                 local.set $1
                                                                 br $while-continue|02
                                                                end
                                                               end
                                                               br $folding-inner11
                                                              end
                                                              local.get $0
                                                              call $assembly/runtime/execution/context/ExecutionFrame~visit
                                                              return
                                                             end
                                                             local.get $0
                                                             i32.load
                                                             local.tee $1
                                                             if
                                                              local.get $1
                                                              call $~lib/rt/itcms/__visit
                                                             end
                                                             br $folding-inner15
                                                            end
                                                            return
                                                           end
                                                           return
                                                          end
                                                          return
                                                         end
                                                         return
                                                        end
                                                        local.get $0
                                                        call $assembly/runtime/RISAEngine~visit
                                                        return
                                                       end
                                                       return
                                                      end
                                                      return
                                                     end
                                                     return
                                                    end
                                                    return
                                                   end
                                                   return
                                                  end
                                                  return
                                                 end
                                                 return
                                                end
                                                return
                                               end
                                               return
                                              end
                                              local.get $0
                                              local.get $0
                                              i32.const 20
                                              i32.sub
                                              i32.load offset=16
                                              i32.add
                                              local.set $1
                                              loop $while-continue|03
                                               local.get $0
                                               local.get $1
                                               i32.lt_u
                                               if
                                                local.get $0
                                                i32.load
                                                local.tee $2
                                                if
                                                 local.get $2
                                                 call $~lib/rt/itcms/__visit
                                                end
                                                local.get $0
                                                i32.const 4
                                                i32.add
                                                local.set $0
                                                br $while-continue|03
                                               end
                                              end
                                              return
                                             end
                                             return
                                            end
                                            local.get $0
                                            i32.load
                                            local.tee $1
                                            if
                                             local.get $1
                                             call $~lib/rt/itcms/__visit
                                            end
                                            local.get $0
                                            i32.load offset=4
                                            local.tee $1
                                            if
                                             local.get $1
                                             call $~lib/rt/itcms/__visit
                                            end
                                            local.get $0
                                            i32.load offset=8
                                            local.tee $1
                                            if
                                             local.get $1
                                             call $~lib/rt/itcms/__visit
                                            end
                                            local.get $0
                                            i32.load offset=28
                                            local.tee $0
                                            if
                                             local.get $0
                                             call $~lib/rt/itcms/__visit
                                            end
                                            return
                                           end
                                           local.get $0
                                           call $assembly/core/network-base/QuantumNode~visit
                                           return
                                          end
                                          local.get $0
                                          i32.load
                                          local.tee $1
                                          if
                                           local.get $1
                                           call $~lib/rt/itcms/__visit
                                          end
                                          br $folding-inner26
                                         end
                                         local.get $0
                                         call $assembly/core/network-base/QuantumNode~visit
                                         return
                                        end
                                        local.get $0
                                        call $assembly/tests/core-builders.test/MockProtocolMessage~visit
                                        return
                                       end
                                       local.get $0
                                       call $assembly/tests/core-builders.test/MockProtocolMessage~visit
                                       return
                                      end
                                      local.get $0
                                      i32.load offset=4
                                      local.tee $1
                                      if
                                       local.get $1
                                       call $~lib/rt/itcms/__visit
                                      end
                                      br $folding-inner22
                                     end
                                     local.get $0
                                     call $assembly/runtime/execution/context/ExecutionFrame~visit
                                     return
                                    end
                                    return
                                   end
                                   local.get $0
                                   call $assembly/resolang/TeleportationChannel~visit
                                   return
                                  end
                                  local.get $0
                                  i32.load
                                  local.tee $1
                                  if
                                   local.get $1
                                   call $~lib/rt/itcms/__visit
                                  end
                                  br $folding-inner26
                                 end
                                 return
                                end
                                return
                               end
                               local.get $0
                               call $assembly/resolang/TeleportationChannel~visit
                               return
                              end
                              return
                             end
                             return
                            end
                            return
                           end
                           unreachable
                          end
                          local.get $0
                          i32.load
                          local.tee $0
                          if
                           local.get $0
                           call $~lib/rt/itcms/__visit
                          end
                          return
                         end
                         local.get $0
                         call $assembly/resolang/EntangledNode~visit
                         return
                        end
                        global.get $~lib/memory/__stack_pointer
                        i32.const 4
                        i32.sub
                        global.set $~lib/memory/__stack_pointer
                        global.get $~lib/memory/__stack_pointer
                        i32.const 119640
                        i32.lt_s
                        br_if $folding-inner23
                        global.get $~lib/memory/__stack_pointer
                        i32.const 0
                        i32.store
                        br $folding-inner24
                       end
                       global.get $~lib/memory/__stack_pointer
                       i32.const 4
                       i32.sub
                       global.set $~lib/memory/__stack_pointer
                       global.get $~lib/memory/__stack_pointer
                       i32.const 119640
                       i32.lt_s
                       br_if $folding-inner23
                       global.get $~lib/memory/__stack_pointer
                       i32.const 0
                       i32.store
                       global.get $~lib/memory/__stack_pointer
                       local.get $0
                       local.tee $1
                       i32.store
                       local.get $0
                       i32.load
                       call $~lib/rt/itcms/__visit
                       global.get $~lib/memory/__stack_pointer
                       local.get $0
                       i32.store
                       local.get $0
                       i32.load offset=8
                       local.tee $0
                       local.set $2
                       global.get $~lib/memory/__stack_pointer
                       local.get $1
                       i32.store
                       local.get $2
                       local.get $1
                       i32.load offset=16
                       i32.const 12
                       i32.mul
                       i32.add
                       local.set $1
                       loop $while-continue|00
                        local.get $1
                        local.get $2
                        i32.gt_u
                        if
                         local.get $2
                         i32.load offset=8
                         i32.const 1
                         i32.and
                         i32.eqz
                         if
                          local.get $2
                          i32.load
                          call $~lib/rt/itcms/__visit
                          local.get $2
                          i32.load offset=4
                          call $~lib/rt/itcms/__visit
                         end
                         local.get $2
                         i32.const 12
                         i32.add
                         local.set $2
                         br $while-continue|00
                        end
                       end
                       br $folding-inner25
                      end
                      global.get $~lib/memory/__stack_pointer
                      i32.const 4
                      i32.sub
                      global.set $~lib/memory/__stack_pointer
                      global.get $~lib/memory/__stack_pointer
                      i32.const 119640
                      i32.lt_s
                      br_if $folding-inner23
                      global.get $~lib/memory/__stack_pointer
                      i32.const 0
                      i32.store
                      global.get $~lib/memory/__stack_pointer
                      local.get $0
                      i32.store
                      local.get $0
                      i32.load offset=4
                      local.set $1
                      global.get $~lib/memory/__stack_pointer
                      local.get $0
                      i32.store
                      local.get $1
                      local.get $0
                      i32.load offset=12
                      i32.const 2
                      i32.shl
                      i32.add
                      local.set $3
                      loop $while-continue|04
                       local.get $1
                       local.get $3
                       i32.lt_u
                       if
                        local.get $1
                        i32.load
                        local.tee $2
                        if
                         local.get $2
                         call $~lib/rt/itcms/__visit
                        end
                        local.get $1
                        i32.const 4
                        i32.add
                        local.set $1
                        br $while-continue|04
                       end
                      end
                      br $folding-inner24
                     end
                     local.get $0
                     i32.load offset=16
                     local.tee $1
                     if
                      local.get $1
                      call $~lib/rt/itcms/__visit
                     end
                     br $folding-inner15
                    end
                    local.get $0
                    i32.load
                    local.tee $1
                    if
                     local.get $1
                     call $~lib/rt/itcms/__visit
                    end
                    br $folding-inner27
                   end
                   local.get $0
                   i32.load offset=8
                   local.tee $1
                   if
                    local.get $1
                    call $~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load offset=12
                   local.tee $1
                   if
                    local.get $1
                    call $~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load offset=16
                   local.tee $1
                   if
                    local.get $1
                    call $~lib/rt/itcms/__visit
                   end
                   br $folding-inner17
                  end
                  local.get $0
                  i32.load
                  local.tee $1
                  if
                   local.get $1
                   call $~lib/rt/itcms/__visit
                  end
                  local.get $0
                  i32.load offset=4
                  local.tee $1
                  if
                   local.get $1
                   call $~lib/rt/itcms/__visit
                  end
                  local.get $0
                  i32.load offset=8
                  local.tee $1
                  if
                   local.get $1
                   call $~lib/rt/itcms/__visit
                  end
                  br $folding-inner28
                 end
                 local.get $2
                 call $~lib/rt/itcms/__visit
                 br $folding-inner29
                end
                global.get $~lib/memory/__stack_pointer
                i32.const 4
                i32.sub
                global.set $~lib/memory/__stack_pointer
                global.get $~lib/memory/__stack_pointer
                i32.const 119640
                i32.lt_s
                br_if $folding-inner23
                global.get $~lib/memory/__stack_pointer
                i32.const 0
                i32.store
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store
                local.get $0
                i32.load offset=4
                call $~lib/rt/itcms/__visit
                br $folding-inner29
               end
               global.get $~lib/memory/__stack_pointer
               i32.const 4
               i32.sub
               global.set $~lib/memory/__stack_pointer
               global.get $~lib/memory/__stack_pointer
               i32.const 119640
               i32.lt_s
               br_if $folding-inner23
               global.get $~lib/memory/__stack_pointer
               i32.const 0
               i32.store
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store
               local.get $0
               i32.load
               call $~lib/rt/itcms/__visit
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store
               local.get $0
               i32.load offset=8
               call $~lib/rt/itcms/__visit
               br $folding-inner29
              end
              local.get $0
              i32.load
              local.tee $1
              if
               local.get $1
               call $~lib/rt/itcms/__visit
              end
              local.get $0
              i32.load offset=8
              local.tee $0
              if
               local.get $0
               call $~lib/rt/itcms/__visit
              end
              return
             end
             local.get $0
             i32.load offset=20
             local.tee $0
             if
              local.get $0
              call $~lib/rt/itcms/__visit
             end
             return
            end
            global.get $~lib/memory/__stack_pointer
            i32.const 4
            i32.sub
            global.set $~lib/memory/__stack_pointer
            global.get $~lib/memory/__stack_pointer
            i32.const 119640
            i32.lt_s
            br_if $folding-inner23
            global.get $~lib/memory/__stack_pointer
            i32.const 0
            i32.store
            global.get $~lib/memory/__stack_pointer
            local.get $0
            local.tee $1
            i32.store
            local.get $0
            i32.load
            call $~lib/rt/itcms/__visit
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store
            local.get $0
            i32.load offset=8
            local.tee $0
            local.set $2
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store
            local.get $2
            local.get $1
            i32.load offset=16
            i32.const 12
            i32.mul
            i32.add
            local.set $1
            loop $while-continue|05
             local.get $1
             local.get $2
             i32.gt_u
             if
              local.get $2
              i32.load offset=8
              i32.const 1
              i32.and
              i32.eqz
              if
               local.get $2
               i32.load offset=4
               call $~lib/rt/itcms/__visit
              end
              local.get $2
              i32.const 12
              i32.add
              local.set $2
              br $while-continue|05
             end
            end
            br $folding-inner25
           end
           local.get $0
           i32.load offset=20
           local.tee $1
           if
            local.get $1
            call $~lib/rt/itcms/__visit
           end
           br $folding-inner26
          end
          local.get $0
          i32.load offset=16
          local.tee $0
          if
           local.get $0
           call $~lib/rt/itcms/__visit
          end
          return
         end
         local.get $0
         i32.load offset=8
         local.tee $0
         if
          local.get $0
          call $~lib/rt/itcms/__visit
         end
         return
        end
        i32.const 152432
        i32.const 152480
        i32.const 1
        i32.const 1
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       local.get $0
       i32.load
       call $~lib/rt/itcms/__visit
       br $folding-inner29
      end
      local.get $0
      call $~lib/rt/itcms/__visit
      br $folding-inner29
     end
     local.get $0
     i32.load offset=24
     local.tee $0
     if
      local.get $0
      call $~lib/rt/itcms/__visit
     end
     return
    end
    local.get $0
    i32.load offset=4
    local.tee $0
    if
     local.get $0
     call $~lib/rt/itcms/__visit
    end
    return
   end
   local.get $0
   i32.load offset=12
   local.tee $0
   if
    local.get $0
    call $~lib/rt/itcms/__visit
   end
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~start
  call $start:assembly/test-index
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 58
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/hash/HASH<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  block $~lib/util/hash/hashStr|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 0
   local.get $0
   i32.eqz
   br_if $~lib/util/hash/hashStr|inlined.0
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const -2
   i32.and
   local.tee $3
   i32.const 16
   i32.ge_u
   if (result i32)
    i32.const 606290984
    local.set $2
    i32.const -2048144777
    local.set $4
    i32.const 1640531535
    local.set $5
    local.get $1
    local.get $3
    i32.add
    i32.const 16
    i32.sub
    local.set $7
    loop $while-continue|0
     local.get $1
     local.get $7
     i32.le_u
     if
      local.get $2
      local.get $1
      i32.load
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $2
      local.get $4
      local.get $1
      i32.load offset=4
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $4
      local.get $6
      local.get $1
      i32.load offset=8
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $6
      local.get $5
      local.get $1
      i32.load offset=12
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $5
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    local.get $3
    local.get $2
    i32.const 1
    i32.rotl
    local.get $4
    i32.const 7
    i32.rotl
    i32.add
    local.get $6
    i32.const 12
    i32.rotl
    i32.add
    local.get $5
    i32.const 18
    i32.rotl
    i32.add
    i32.add
   else
    local.get $3
    i32.const 374761393
    i32.add
   end
   local.set $2
   local.get $0
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.set $4
   loop $while-continue|1
    local.get $1
    local.get $4
    i32.le_u
    if
     local.get $2
     local.get $1
     i32.load
     i32.const -1028477379
     i32.mul
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.set $2
     local.get $1
     i32.const 4
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   local.get $0
   local.get $3
   i32.add
   local.set $0
   loop $while-continue|2
    local.get $0
    local.get $1
    i32.gt_u
    if
     local.get $2
     local.get $1
     i32.load8_u
     i32.const 374761393
     i32.mul
     i32.add
     i32.const 11
     i32.rotl
     i32.const -1640531535
     i32.mul
     local.set $2
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|2
    end
   end
   local.get $2
   local.get $2
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $0
   local.get $0
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $0
   local.get $0
   i32.const 16
   i32.shr_u
   i32.xor
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  local.get $1
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  block $folding-inner0
   local.get $1
   i32.eqz
   local.get $0
   i32.eqz
   i32.or
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $2
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.ne
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   i32.const 0
   local.get $1
   local.get $2
   call $~lib/util/string/compareImpl
   i32.eqz
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  loop $while-continue|0
   local.get $2
   if
    local.get $2
    i32.load offset=8
    local.tee $0
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $3
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $0
    i32.const -2
    i32.and
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set" (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $8
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#find"
   local.tee $3
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $9
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $10
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $7
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $11
     local.get $0
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $6
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $6
      local.get $11
      i32.ne
      if
       local.get $11
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.load
        local.tee $12
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $12
        i32.store offset=8
        local.get $3
        local.get $12
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.load offset=4
        local.tee $5
        i32.store offset=8
        local.get $3
        local.get $5
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $12
        i32.store offset=8
        local.get $3
        local.get $10
        local.get $12
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $9
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $5
        i32.load
        i32.store offset=8
        local.get $5
        local.get $3
        i32.store
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $11
       i32.const 12
       i32.add
       local.set $11
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=16
     local.get $0
     local.get $10
     i32.store
     local.get $0
     local.get $10
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $9
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=16
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $7
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $3
    local.get $4
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $0
    local.get $1
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $8
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=8
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/runtime/instructions
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   memory.size
   i32.const 16
   i32.shl
   i32.const 152408
   i32.sub
   i32.const 1
   i32.shr_u
   global.set $~lib/rt/itcms/threshold
   i32.const 1508
   i32.const 1504
   i32.store
   i32.const 1512
   i32.const 1504
   i32.store
   i32.const 1504
   global.set $~lib/rt/itcms/pinSpace
   i32.const 1540
   i32.const 1536
   i32.store
   i32.const 1544
   i32.const 1536
   i32.store
   i32.const 1536
   global.set $~lib/rt/itcms/toSpace
   i32.const 1684
   i32.const 1680
   i32.store
   i32.const 1688
   i32.const 1680
   i32.store
   i32.const 1680
   global.set $~lib/rt/itcms/fromSpace
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/holographic/HoloStore
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/holographic/HoloRetrieve
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/holographic/HoloFragment
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 13
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/holographic/HoloReconstruct
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 14
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/multiBasis/BasisCreate
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 15
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/multiBasis/BasisTransform
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 16
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAll
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 17
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherence
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 18
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/quaternionic/QuatCreate
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 19
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/quaternionic/QuatSend
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/quaternionic/QuatReceive
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 21
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLock
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 22
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/resonance/Resonance
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 23
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/resonance/Factorize
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/coherence/coherence/coherence
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 25
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/coherence/coherenceall/coherenceall
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 26
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/coherence/threshold/threshold
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 27
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/coherence/waitcoh/waitcoh
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/break/breakInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 29
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/call/call
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 30
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/continue/continueInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 31
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/else/elseInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/endif/endif
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 33
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/endloop/endloop
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 34
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/endwhile/endwhile
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 35
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/goto/gotoInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 36
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/if/ifInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 37
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/ifcoh/ifcoh
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 38
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/phase/setphase/setphase
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 39
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/phase/advphase/advphase
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/phase/decohere/decohere
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 41
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/phase/entangle/entangle
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 42
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/quantum/collapse/collapse
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 43
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/quantum/measure/measure
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 44
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/quantum/observe/observe
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 45
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/quantum/reconstruct/reconstruct
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 46
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/resonance/entropy/entropy
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 47
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/resonance/evolve/evolve
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 48
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/resonance/factorize/factorize
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 49
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/resonance/resonance/resonance
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 50
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/symbolic/add/add
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 51
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/symbolic/load/load
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 52
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/symbolic/mix/mix
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 53
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/symbolic/scale/scale
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 54
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/system/halt/halt
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 55
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/system/output/output
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 56
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/system/random/random
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 57
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/system/tick/tick
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#constructor"
   global.set $assembly/runtime/instructions/instructionHandlers
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 1904
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/holographic/HoloStore
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 1904
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 1952
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/holographic/HoloRetrieve
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 1952
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2000
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/holographic/HoloFragment
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2000
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2048
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/holographic/HoloReconstruct
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2048
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2112
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/multiBasis/BasisCreate
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2112
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2160
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/multiBasis/BasisTransform
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2160
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2224
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAll
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2224
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2272
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherence
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2272
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2336
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/quaternionic/QuatCreate
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2336
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2384
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/quaternionic/QuatSend
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2384
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2432
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/quaternionic/QuatReceive
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2432
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2480
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLock
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2480
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2544
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/resonance/Resonance
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2544
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2592
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/resonance/Factorize
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2592
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2640
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/coherence/coherence/coherence
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2640
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2688
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/coherence/coherenceall/coherenceall
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2688
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2736
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/coherence/threshold/threshold
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2736
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2784
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/coherence/waitcoh/waitcoh
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2784
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2832
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/break/breakInstruction
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2832
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2864
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/call/call
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2864
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2896
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/continue/continueInstruction
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2896
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2944
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/else/elseInstruction
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2944
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2976
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/endif/endif
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 2976
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3008
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/endloop/endloop
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3008
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3056
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/endwhile/endwhile
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3056
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3104
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/goto/gotoInstruction
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3104
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3136
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/if/ifInstruction
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3136
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3168
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/ifcoh/ifcoh
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3168
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3200
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/phase/setphase/setphase
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3200
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3248
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/phase/advphase/advphase
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3248
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3296
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/phase/decohere/decohere
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3296
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3344
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/phase/entangle/entangle
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3344
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3392
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/quantum/collapse/collapse
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3392
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3440
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/quantum/measure/measure
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3440
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3488
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/quantum/observe/observe
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3488
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3536
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/quantum/reconstruct/reconstruct
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3536
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3584
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/resonance/entropy/entropy
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3584
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3632
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/resonance/evolve/evolve
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3632
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3664
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/resonance/factorize/factorize
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3664
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3712
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/resonance/resonance/resonance
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3712
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3760
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/symbolic/add/add
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3760
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3792
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/symbolic/load/load
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3792
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3824
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/symbolic/mix/mix
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3824
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3856
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/symbolic/scale/scale
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3856
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3888
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/system/halt/halt
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3888
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3920
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/system/output/output
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3920
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3952
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/system/random/random
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3952
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3984
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/system/tick/tick
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 3984
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/core/plugin-system/PluginRegistration>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 92
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/set/Set<~lib/string/String>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 96
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 32
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,~lib/set/Set<~lib/string/String>>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 97
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 61
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#clear" (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 91
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 1792
   i32.const 6144
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=8
  local.tee $4
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741820
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 1792
    i32.const 6144
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   local.get $2
   i32.shl
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $3
   if
    i32.const 1073741820
    local.get $4
    i32.const 1
    i32.shl
    local.tee $2
    local.get $2
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $2
    local.get $1
    local.get $1
    local.get $2
    i32.lt_u
    select
    local.set $1
   end
   local.get $0
   i32.load
   local.tee $5
   local.get $1
   call $~lib/rt/itcms/__renew
   local.tee $2
   local.get $5
   i32.ne
   if
    local.get $0
    local.get $2
    i32.store
    local.get $0
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $0
   local.get $1
   i32.store offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1584
    i32.const 6144
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $3
   i32.store offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#set:length (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#keys" (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $4
  i32.store offset=4
  loop $for-loop|0
   local.get $0
   local.get $2
   i32.gt_s
   if
    local.get $3
    local.get $2
    i32.const 12
    i32.mul
    i32.add
    local.tee $5
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.load
     local.tee $5
     i32.store offset=8
     local.get $4
     local.get $1
     local.get $5
     call $~lib/array/Array<~lib/string/String>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $1
  call $~lib/array/Array<~lib/string/String>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 6192
   i32.const 6256
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $start:assembly/tests/runtime.test~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/runtime/instructions/instructionHandlers
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/tests/runtime.test/mockInstructionHandlers
  local.tee $2
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $2
  local.get $0
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $1
  local.get $0
  local.get $2
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/console/console.log (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/bindings/dom/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u32>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 8
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 1792
   i32.const 6144
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<u32>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u32>#get:length (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/math/generatePrimes (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/array/Array<u32>#constructor
  local.tee $2
  i32.store
  block $folding-inner0
   local.get $0
   i32.const 0
   i32.le_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 2
   call $~lib/array/Array<u32>#push
   local.get $0
   i32.const 1
   i32.eq
   br_if $folding-inner0
   i32.const 3
   local.set $1
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.lt_s
    if
     i32.const 0
     local.set $4
     block $__inlined_func$assembly/core/math/isPrime$488
      local.get $1
      i32.const 1
      i32.le_s
      br_if $__inlined_func$assembly/core/math/isPrime$488
      i32.const 1
      local.set $4
      local.get $1
      i32.const 3
      i32.le_s
      br_if $__inlined_func$assembly/core/math/isPrime$488
      i32.const 0
      local.set $4
      local.get $1
      i32.const 1
      i32.and
      if (result i32)
       local.get $1
       i32.const 3
       i32.rem_s
      else
       i32.const 0
      end
      i32.eqz
      br_if $__inlined_func$assembly/core/math/isPrime$488
      i32.const 5
      local.set $3
      loop $while-continue|01
       local.get $3
       local.get $3
       i32.mul
       local.get $1
       i32.le_s
       if
        local.get $1
        local.get $3
        i32.rem_s
        if (result i32)
         local.get $1
         local.get $3
         i32.const 2
         i32.add
         i32.rem_s
        else
         i32.const 0
        end
        i32.eqz
        br_if $__inlined_func$assembly/core/math/isPrime$488
        local.get $3
        i32.const 6
        i32.add
        local.set $3
        br $while-continue|01
       end
      end
      i32.const 1
      local.set $4
     end
     local.get $4
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      local.get $2
      local.get $1
      call $~lib/array/Array<u32>#push
     end
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<u32>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1584
   i32.const 6144
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/math/ExtendedGCDResult#constructor (param $0 i64) (param $1 i64) (param $2 i64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 115
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $1
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $2
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/core/math/extendedGCD (param $0 i64) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $1
  i64.eqz
  if
   local.get $0
   i64.const 1
   i64.const 0
   call $assembly/core/math/ExtendedGCDResult#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $0
  local.get $1
  i64.rem_s
  call $assembly/core/math/extendedGCD
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i64.load offset=16
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i64.load offset=8
  local.set $4
  local.get $0
  local.get $1
  i64.div_s
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $4
  local.get $0
  local.get $2
  i64.load offset=16
  i64.mul
  i64.sub
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i64.load
  local.get $3
  local.get $0
  call $assembly/core/math/ExtendedGCDResult#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/core/math/modInverse (param $0 i64) (param $1 i64) (result i64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/core/math/extendedGCD
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i64.load
  i64.const 1
  i64.ne
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i64.const -1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i64.load offset=8
  local.get $1
  i64.rem_s
  local.get $1
  i64.add
  local.get $1
  i64.rem_s
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/core-math.test/runAllTests
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 6496
   i32.store
   i32.const 6496
   call $~lib/console/console.log
   call $assembly/tests/core-math.test/testIsPrime
   global.get $~lib/memory/__stack_pointer
   i32.const 7856
   i32.store
   i32.const 7856
   call $~lib/console/console.log
   i64.const 2
   call $assembly/core/math/isPrimeLarge
   i32.const 1
   i32.ne
   if
    i32.const 7920
    i32.const 6640
    i32.const 54
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 3
   call $assembly/core/math/isPrimeLarge
   i32.const 1
   i32.ne
   if
    i32.const 8000
    i32.const 6640
    i32.const 55
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 5
   call $assembly/core/math/isPrimeLarge
   i32.const 1
   i32.ne
   if
    i32.const 8080
    i32.const 6640
    i32.const 56
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1009
   call $assembly/core/math/isPrimeLarge
   i32.const 1
   i32.ne
   if
    i32.const 8160
    i32.const 6640
    i32.const 59
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 10007
   call $assembly/core/math/isPrimeLarge
   i32.const 1
   i32.ne
   if
    i32.const 8224
    i32.const 6640
    i32.const 60
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1000
   call $assembly/core/math/isPrimeLarge
   if
    i32.const 8288
    i32.const 6640
    i32.const 63
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 10000
   call $assembly/core/math/isPrimeLarge
   if
    i32.const 8368
    i32.const 6640
    i32.const 64
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8448
   i32.store
   i32.const 8448
   call $~lib/console/console.log
   i32.const 2
   call $assembly/core/math/nextPrime
   i32.const 3
   i32.ne
   if
    i32.const 8528
    i32.const 6640
    i32.const 69
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   call $assembly/core/math/nextPrime
   i32.const 5
   i32.ne
   if
    i32.const 8608
    i32.const 6640
    i32.const 70
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 4
   call $assembly/core/math/nextPrime
   i32.const 5
   i32.ne
   if
    i32.const 8688
    i32.const 6640
    i32.const 71
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 5
   call $assembly/core/math/nextPrime
   i32.const 7
   i32.ne
   if
    i32.const 8768
    i32.const 6640
    i32.const 72
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 10
   call $assembly/core/math/nextPrime
   i32.const 11
   i32.ne
   if
    i32.const 8848
    i32.const 6640
    i32.const 73
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 100
   call $assembly/core/math/nextPrime
   i32.const 101
   i32.ne
   if
    i32.const 8944
    i32.const 6640
    i32.const 74
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 9040
   i32.store
   i32.const 9040
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   call $assembly/core/math/generatePrimes
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   call $~lib/array/Array<u32>#get:length
   i32.const 5
   i32.ne
   if
    i32.const 9120
    i32.const 6640
    i32.const 80
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i32.const 0
   call $~lib/array/Array<u32>#__get
   i32.const 2
   i32.ne
   if
    i32.const 9200
    i32.const 6640
    i32.const 81
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i32.const 1
   call $~lib/array/Array<u32>#__get
   i32.const 3
   i32.ne
   if
    i32.const 9280
    i32.const 6640
    i32.const 82
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i32.const 2
   call $~lib/array/Array<u32>#__get
   i32.const 5
   i32.ne
   if
    i32.const 9360
    i32.const 6640
    i32.const 83
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i32.const 3
   call $~lib/array/Array<u32>#__get
   i32.const 7
   i32.ne
   if
    i32.const 9440
    i32.const 6640
    i32.const 84
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i32.const 4
   call $~lib/array/Array<u32>#__get
   i32.const 11
   i32.ne
   if
    i32.const 9520
    i32.const 6640
    i32.const 85
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10
   call $assembly/core/math/generatePrimes
   local.tee $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   call $~lib/array/Array<u32>#get:length
   i32.const 10
   i32.ne
   if
    i32.const 9600
    i32.const 6640
    i32.const 88
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i32.const 9
   call $~lib/array/Array<u32>#__get
   i32.const 29
   i32.ne
   if
    i32.const 9680
    i32.const 6640
    i32.const 89
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 9760
   i32.store
   i32.const 9760
   call $~lib/console/console.log
   i64.const 12
   local.set $0
   i64.const 8
   local.set $1
   loop $while-continue|0
    local.get $1
    i64.const 0
    i64.ne
    if
     local.get $0
     local.get $1
     local.tee $0
     i64.rem_s
     local.set $1
     br $while-continue|0
    end
   end
   local.get $0
   i64.const 4
   i64.ne
   if
    i32.const 9840
    i32.const 6640
    i32.const 94
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 54
   local.set $0
   i64.const 24
   local.set $1
   loop $while-continue|03
    local.get $1
    i64.const 0
    i64.ne
    if
     local.get $0
     local.get $1
     local.tee $0
     i64.rem_s
     local.set $1
     br $while-continue|03
    end
   end
   local.get $0
   i64.const 6
   i64.ne
   if
    i32.const 9920
    i32.const 6640
    i32.const 95
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 17
   local.set $0
   i64.const 13
   local.set $1
   loop $while-continue|04
    local.get $1
    i64.const 0
    i64.ne
    if
     local.get $0
     local.get $1
     local.tee $0
     i64.rem_s
     local.set $1
     br $while-continue|04
    end
   end
   local.get $0
   i64.const 1
   i64.ne
   if
    i32.const 10000
    i32.const 6640
    i32.const 96
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 100
   local.set $0
   i64.const 50
   local.set $1
   loop $while-continue|05
    local.get $1
    i64.const 0
    i64.ne
    if
     local.get $0
     local.get $1
     local.tee $0
     i64.rem_s
     local.set $1
     br $while-continue|05
    end
   end
   local.get $0
   i64.const 50
   i64.ne
   if
    i32.const 10080
    i32.const 6640
    i32.const 97
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 0
   local.set $0
   i64.const 5
   local.set $1
   loop $while-continue|06
    local.get $1
    i64.const 0
    i64.ne
    if
     local.get $0
     local.get $1
     local.tee $0
     i64.rem_s
     local.set $1
     br $while-continue|06
    end
   end
   local.get $0
   i64.const 5
   i64.ne
   if
    i32.const 10160
    i32.const 6640
    i32.const 98
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 5
   local.set $0
   i64.const 0
   local.set $1
   loop $while-continue|07
    local.get $1
    i64.const 0
    i64.ne
    if
     local.get $0
     local.get $1
     local.tee $0
     i64.rem_s
     local.set $1
     br $while-continue|07
    end
   end
   local.get $0
   i64.const 5
   i64.ne
   if
    i32.const 10240
    i32.const 6640
    i32.const 99
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10320
   i32.store
   i32.const 10320
   call $~lib/console/console.log
   i64.const 4
   local.set $1
   i64.const 6
   local.set $0
   loop $while-continue|00
    local.get $0
    i64.const 0
    i64.ne
    if
     local.get $1
     local.get $0
     local.tee $1
     i64.rem_s
     local.set $0
     br $while-continue|00
    end
   end
   f64.const 24
   local.get $1
   f64.convert_i64_s
   f64.div
   i64.trunc_sat_f64_s
   i64.const 12
   i64.ne
   if
    i32.const 10384
    i32.const 6640
    i32.const 104
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 3
   local.set $1
   i64.const 5
   local.set $0
   loop $while-continue|051
    local.get $0
    i64.const 0
    i64.ne
    if
     local.get $1
     local.get $0
     local.tee $1
     i64.rem_s
     local.set $0
     br $while-continue|051
    end
   end
   f64.const 15
   local.get $1
   f64.convert_i64_s
   f64.div
   i64.trunc_sat_f64_s
   i64.const 15
   i64.ne
   if
    i32.const 10464
    i32.const 6640
    i32.const 105
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 12
   local.set $1
   i64.const 18
   local.set $0
   loop $while-continue|062
    local.get $0
    i64.const 0
    i64.ne
    if
     local.get $1
     local.get $0
     local.tee $1
     i64.rem_s
     local.set $0
     br $while-continue|062
    end
   end
   f64.const 216
   local.get $1
   f64.convert_i64_s
   f64.div
   i64.trunc_sat_f64_s
   i64.const 36
   i64.ne
   if
    i32.const 10544
    i32.const 6640
    i32.const 106
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 7
   local.set $1
   i64.const 7
   local.set $0
   loop $while-continue|073
    local.get $0
    i64.const 0
    i64.ne
    if
     local.get $1
     local.get $0
     local.tee $1
     i64.rem_s
     local.set $0
     br $while-continue|073
    end
   end
   f64.const 49
   local.get $1
   f64.convert_i64_s
   f64.div
   i64.trunc_sat_f64_s
   i64.const 7
   i64.ne
   if
    i32.const 10624
    i32.const 6640
    i32.const 107
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10704
   i32.store
   i32.const 10704
   call $~lib/console/console.log
   i64.const 2
   i64.const 3
   i64.const 5
   call $assembly/core/math/modExp
   i64.const 3
   i64.ne
   if
    i32.const 10768
    i32.const 6640
    i32.const 112
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 3
   i64.const 4
   i64.const 7
   call $assembly/core/math/modExp
   i64.const 4
   i64.ne
   if
    i32.const 10832
    i32.const 6640
    i32.const 113
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 5
   i64.const 3
   i64.const 13
   call $assembly/core/math/modExp
   i64.const 8
   i64.ne
   if
    i32.const 10896
    i32.const 6640
    i32.const 114
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 2
   i64.const 10
   i64.const 1000
   call $assembly/core/math/modExp
   i64.const 24
   i64.ne
   if
    i32.const 10960
    i32.const 6640
    i32.const 115
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 11040
   i32.store
   i32.const 11040
   call $~lib/console/console.log
   i64.const 3
   i64.const 7
   call $assembly/core/math/modInverse
   i64.const 5
   i64.ne
   if
    i32.const 11136
    i32.const 6640
    i32.const 120
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 5
   i64.const 11
   call $assembly/core/math/modInverse
   i64.const 9
   i64.ne
   if
    i32.const 11216
    i32.const 6640
    i32.const 121
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 7
   i64.const 13
   call $assembly/core/math/modInverse
   i64.const 2
   i64.ne
   if
    i32.const 11312
    i32.const 6640
    i32.const 122
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 6
   i64.const 9
   call $assembly/core/math/modInverse
   i64.const -1
   i64.ne
   if
    i32.const 11408
    i32.const 6640
    i32.const 125
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 11504
   i32.store
   i32.const 11504
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i64.const 30
   i64.const 18
   call $assembly/core/math/extendedGCD
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load
   i64.const 6
   i64.ne
   if
    i32.const 11584
    i32.const 6640
    i32.const 131
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load offset=8
   i64.const 30
   i64.mul
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $0
   local.get $7
   i64.load offset=16
   i64.const 18
   i64.mul
   i64.add
   i64.const 6
   i64.ne
   if
    i32.const 11664
    i32.const 6640
    i32.const 132
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i64.const 35
   i64.const 15
   call $assembly/core/math/extendedGCD
   local.tee $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load
   i64.const 5
   i64.ne
   if
    i32.const 11776
    i32.const 6640
    i32.const 135
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load offset=8
   i64.const 35
   i64.mul
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $0
   local.get $7
   i64.load offset=16
   i64.const 15
   i64.mul
   i64.add
   i64.const 5
   i64.ne
   if
    i32.const 11664
    i32.const 6640
    i32.const 136
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 11856
   i32.store
   i32.const 11856
   call $~lib/console/console.log
   loop $do-loop|0
    loop $do-loop|00
     call $~lib/math/NativeMath.random
     f64.const 63
     f64.mul
     i64.trunc_sat_f64_u
     i64.const -64
     i64.sub
     i64.const 1
     i64.or
     local.tee $0
     call $assembly/core/math/isPrimeLarge
     i32.eqz
     br_if $do-loop|00
    end
    local.get $0
    i64.const 1
    i64.shl
    i64.const 1
    i64.add
    local.tee $0
    call $assembly/core/math/isPrimeLarge
    i32.eqz
    br_if $do-loop|0
   end
   local.get $0
   i64.const 256
   i64.lt_u
   local.get $0
   i64.const 128
   i64.ge_u
   i32.and
   i32.eqz
   if
    i32.const 11936
    i32.const 6640
    i32.const 142
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   call $assembly/core/math/isPrimeLarge
   i32.const 1
   i32.ne
   if
    i32.const 12048
    i32.const 6640
    i32.const 143
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12144
   i32.store
   i32.const 12144
   call $~lib/console/console.log
   i32.const 0
   call $assembly/core/math/factorial
   i64.const 1
   i64.ne
   if
    i32.const 12416
    i32.const 6640
    i32.const 148
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 1
   call $assembly/core/math/factorial
   i64.const 1
   i64.ne
   if
    i32.const 12464
    i32.const 6640
    i32.const 149
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 5
   call $assembly/core/math/factorial
   i64.const 120
   i64.ne
   if
    i32.const 12512
    i32.const 6640
    i32.const 150
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 6
   call $assembly/core/math/factorial
   i64.const 720
   i64.ne
   if
    i32.const 12576
    i32.const 6640
    i32.const 151
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 10
   call $assembly/core/math/factorial
   i64.const 3628800
   i64.ne
   if
    i32.const 12640
    i32.const 6640
    i32.const 152
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12704
   i32.store
   i32.const 12704
   call $~lib/console/console.log
   i64.const 0
   local.set $1
   i64.const 1
   local.set $0
   i32.const 2
   local.set $7
   loop $for-loop|01
    local.get $7
    i32.const 2
    i32.le_s
    if
     local.get $0
     local.get $1
     i64.add
     local.set $6
     local.get $0
     local.set $1
     local.get $6
     local.set $0
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|01
    end
   end
   local.get $0
   i64.const 1
   i64.ne
   if
    i32.const 12912
    i32.const 6640
    i32.const 159
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1
   local.set $0
   i32.const 2
   local.set $7
   loop $for-loop|02
    local.get $7
    i32.const 3
    i32.le_s
    if
     local.get $0
     local.get $2
     i64.add
     local.set $1
     local.get $0
     local.set $2
     local.get $1
     local.set $0
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|02
    end
   end
   local.get $0
   i64.const 2
   i64.ne
   if
    i32.const 12976
    i32.const 6640
    i32.const 160
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1
   local.set $0
   i32.const 2
   local.set $7
   loop $for-loop|03
    local.get $7
    i32.const 4
    i32.le_s
    if
     local.get $0
     local.get $3
     i64.add
     local.set $1
     local.get $0
     local.set $3
     local.get $1
     local.set $0
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|03
    end
   end
   local.get $0
   i64.const 3
   i64.ne
   if
    i32.const 13040
    i32.const 6640
    i32.const 161
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1
   local.set $0
   i32.const 2
   local.set $7
   loop $for-loop|04
    local.get $7
    i32.const 5
    i32.le_s
    if
     local.get $0
     local.get $4
     i64.add
     local.set $1
     local.get $0
     local.set $4
     local.get $1
     local.set $0
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|04
    end
   end
   local.get $0
   i64.const 5
   i64.ne
   if
    i32.const 13104
    i32.const 6640
    i32.const 162
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1
   local.set $0
   i32.const 2
   local.set $7
   loop $for-loop|05
    local.get $7
    i32.const 10
    i32.le_s
    if
     local.get $0
     local.get $5
     i64.add
     local.set $1
     local.get $0
     local.set $5
     local.get $1
     local.set $0
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|05
    end
   end
   local.get $0
   i64.const 55
   i64.ne
   if
    i32.const 13168
    i32.const 6640
    i32.const 163
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13232
   i32.store
   i32.const 13232
   call $~lib/console/console.log
   i64.const 0
   call $assembly/core/math/isqrt
   i64.const 0
   i64.ne
   if
    i32.const 13424
    i32.const 6640
    i32.const 168
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1
   call $assembly/core/math/isqrt
   i64.const 1
   i64.ne
   if
    i32.const 13488
    i32.const 6640
    i32.const 169
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 4
   call $assembly/core/math/isqrt
   i64.const 2
   i64.ne
   if
    i32.const 13552
    i32.const 6640
    i32.const 170
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 9
   call $assembly/core/math/isqrt
   i64.const 3
   i64.ne
   if
    i32.const 13616
    i32.const 6640
    i32.const 171
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 16
   call $assembly/core/math/isqrt
   i64.const 4
   i64.ne
   if
    i32.const 13680
    i32.const 6640
    i32.const 172
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 15
   call $assembly/core/math/isqrt
   i64.const 3
   i64.ne
   if
    i32.const 13744
    i32.const 6640
    i32.const 173
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 17
   call $assembly/core/math/isqrt
   i64.const 4
   i64.ne
   if
    i32.const 13808
    i32.const 6640
    i32.const 174
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 100
   call $assembly/core/math/isqrt
   i64.const 10
   i64.ne
   if
    i32.const 13872
    i32.const 6640
    i32.const 175
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13952
   i32.store
   i32.const 13952
   call $~lib/console/console.log
   i32.const 0
   local.set $7
   i64.const 1
   local.set $0
   loop $for-loop|010
    local.get $8
    i32.const 0
    i32.le_s
    if
     local.get $0
     i32.const 5
     local.get $8
     i32.sub
     i64.extend_i32_s
     i64.mul
     local.get $8
     i32.const 1
     i32.add
     local.tee $8
     i64.extend_i32_s
     i64.div_s
     local.set $0
     br $for-loop|010
    end
   end
   local.get $0
   i64.const 5
   i64.ne
   if
    i32.const 14112
    i32.const 6640
    i32.const 181
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1
   local.set $0
   loop $for-loop|021
    local.get $7
    i32.const 2
    i32.lt_s
    if
     local.get $0
     i32.const 5
     local.get $7
     i32.sub
     i64.extend_i32_s
     i64.mul
     local.get $7
     i32.const 1
     i32.add
     local.tee $7
     i64.extend_i32_s
     i64.div_s
     local.set $0
     br $for-loop|021
    end
   end
   local.get $0
   i64.const 10
   i64.ne
   if
    i32.const 14176
    i32.const 6640
    i32.const 182
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1
   local.set $0
   loop $for-loop|032
    local.get $9
    i32.const 2
    i32.lt_s
    if
     local.get $0
     i32.const 5
     local.get $9
     i32.sub
     i64.extend_i32_s
     i64.mul
     local.get $9
     i32.const 1
     i32.add
     local.tee $9
     i64.extend_i32_s
     i64.div_s
     local.set $0
     br $for-loop|032
    end
   end
   local.get $0
   i64.const 10
   i64.ne
   if
    i32.const 14240
    i32.const 6640
    i32.const 183
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1
   local.set $0
   loop $for-loop|043
    local.get $10
    i32.const 0
    i32.le_s
    if
     local.get $0
     i32.const 5
     local.get $10
     i32.sub
     i64.extend_i32_s
     i64.mul
     local.get $10
     i32.const 1
     i32.add
     local.tee $10
     i64.extend_i32_s
     i64.div_s
     local.set $0
     br $for-loop|043
    end
   end
   local.get $0
   i64.const 5
   i64.ne
   if
    i32.const 14304
    i32.const 6640
    i32.const 184
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i64.const 1
   local.set $0
   loop $for-loop|06
    local.get $11
    i32.const 3
    i32.lt_s
    if
     local.get $0
     i32.const 10
     local.get $11
     i32.sub
     i64.extend_i32_s
     i64.mul
     local.get $11
     i32.const 1
     i32.add
     local.tee $11
     i64.extend_i32_s
     i64.div_s
     local.set $0
     br $for-loop|06
    end
   end
   local.get $0
   i64.const 120
   i64.ne
   if
    i32.const 14432
    i32.const 6640
    i32.const 186
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 14496
   i32.store
   i32.const 14496
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 14592
   i32.store
   i32.const 14592
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1073741820
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   i32.const 1792
   i32.const 1840
   i32.const 19
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $2
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $0
  local.get $2
  i32.store
  local.get $0
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 116
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#charCodeAt (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#__set (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 1584
   i32.const 14960
   i32.const 178
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=4
  i32.add
  local.get $2
  i32.store8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint8Array#get:length (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 1584
   i32.const 14960
   i32.const 167
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=4
  i32.add
  i32.load8_u
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<u32>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1584
    i32.const 6144
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $3
   i32.store offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/core/crypto/sha256 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  i32.const 1779033703
  local.set $8
  i32.const -1150833019
  local.set $9
  i32.const 1013904242
  local.set $10
  i32.const -1521486534
  local.set $11
  i32.const 1359893119
  local.set $12
  i32.const -1694144372
  local.set $13
  i32.const 528734635
  local.set $14
  i32.const 1541459225
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  local.tee $3
  i32.const 3
  i32.shl
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 64
  local.get $3
  i32.const 9
  i32.add
  i32.const 64
  i32.rem_s
  i32.sub
  i32.const 64
  i32.rem_s
  i32.add
  i32.const 9
  i32.add
  local.tee $19
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $17
  i32.store offset=4
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $17
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    local.get $17
    local.get $2
    local.get $0
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  local.get $3
  i32.const 128
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  local.get $19
  i32.const 8
  i32.sub
  local.get $1
  i64.extend_i32_s
  i64.const 4294967296
  i64.div_s
  i32.wrap_i64
  local.tee $0
  i32.const 24
  i32.shr_u
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  local.get $19
  i32.const 7
  i32.sub
  local.get $0
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  local.get $19
  i32.const 6
  i32.sub
  local.get $0
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  local.get $19
  i32.const 5
  i32.sub
  local.get $0
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  local.get $19
  i32.const 4
  i32.sub
  local.get $1
  i32.const 24
  i32.shr_u
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  local.get $19
  i32.const 3
  i32.sub
  local.get $1
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  local.get $19
  i32.const 2
  i32.sub
  local.get $1
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  local.get $19
  i32.const 1
  i32.sub
  local.get $1
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  loop $for-loop|1
   local.get $19
   local.get $21
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 64
    call $~lib/array/Array<u32>#constructor
    local.tee $18
    i32.store offset=12
    i32.const 0
    local.set $0
    loop $for-loop|2
     local.get $0
     i32.const 16
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $17
      i32.store offset=8
      local.get $17
      local.get $21
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      local.tee $2
      call $~lib/typedarray/Uint8Array#__get
      i32.const 24
      i32.shl
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $17
      i32.store offset=8
      local.get $1
      local.get $17
      local.get $2
      i32.const 1
      i32.add
      call $~lib/typedarray/Uint8Array#__get
      i32.const 16
      i32.shl
      i32.or
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $17
      i32.store offset=8
      local.get $1
      local.get $17
      local.get $2
      i32.const 2
      i32.add
      call $~lib/typedarray/Uint8Array#__get
      i32.const 8
      i32.shl
      i32.or
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $17
      i32.store offset=8
      local.get $18
      local.get $0
      local.get $17
      local.get $2
      i32.const 3
      i32.add
      call $~lib/typedarray/Uint8Array#__get
      local.get $1
      i32.or
      call $~lib/array/Array<u32>#__set
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|2
     end
    end
    i32.const 16
    local.set $0
    loop $for-loop|3
     local.get $0
     i32.const 64
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store
      local.get $18
      local.get $0
      i32.const 15
      i32.sub
      call $~lib/array/Array<u32>#__get
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store
      local.get $18
      local.get $0
      i32.const 15
      i32.sub
      call $~lib/array/Array<u32>#__get
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store
      local.get $2
      i32.const 25
      i32.shl
      local.get $2
      i32.const 7
      i32.shr_u
      i32.or
      local.get $1
      i32.const 14
      i32.shl
      local.get $1
      i32.const 18
      i32.shr_u
      i32.or
      i32.xor
      local.get $18
      local.get $0
      i32.const 15
      i32.sub
      call $~lib/array/Array<u32>#__get
      i32.const 3
      i32.shr_u
      i32.xor
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store
      local.get $18
      local.get $0
      i32.const 2
      i32.sub
      call $~lib/array/Array<u32>#__get
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store
      local.get $18
      local.get $0
      i32.const 2
      i32.sub
      call $~lib/array/Array<u32>#__get
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store
      local.get $2
      i32.const 15
      i32.shl
      local.get $2
      i32.const 17
      i32.shr_u
      i32.or
      local.get $1
      i32.const 13
      i32.shl
      local.get $1
      i32.const 19
      i32.shr_u
      i32.or
      i32.xor
      local.get $18
      local.get $0
      i32.const 2
      i32.sub
      call $~lib/array/Array<u32>#__get
      i32.const 10
      i32.shr_u
      i32.xor
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store offset=8
      local.get $18
      local.get $0
      i32.const 16
      i32.sub
      call $~lib/array/Array<u32>#__get
      local.get $3
      i32.add
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store offset=8
      local.get $18
      local.get $0
      local.get $18
      local.get $0
      i32.const 7
      i32.sub
      call $~lib/array/Array<u32>#__get
      local.get $1
      i32.add
      local.get $2
      i32.add
      call $~lib/array/Array<u32>#__set
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|3
     end
    end
    local.get $8
    local.set $4
    local.get $9
    local.set $0
    local.get $10
    local.set $2
    local.get $11
    local.set $7
    local.get $12
    local.set $5
    local.get $13
    local.set $1
    local.get $14
    local.set $3
    local.get $15
    local.set $6
    i32.const 0
    local.set $20
    loop $for-loop|4
     local.get $20
     i32.const 64
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 1344
      i32.store
      i32.const 1344
      local.get $20
      call $~lib/array/Array<u32>#__get
      local.get $5
      i32.const 7
      i32.shl
      local.get $5
      i32.const 25
      i32.shr_u
      i32.or
      local.get $5
      i32.const 26
      i32.shl
      local.get $5
      i32.const 6
      i32.shr_u
      i32.or
      local.get $5
      i32.const 21
      i32.shl
      local.get $5
      i32.const 11
      i32.shr_u
      i32.or
      i32.xor
      i32.xor
      local.get $6
      i32.add
      local.get $1
      local.get $5
      i32.and
      local.get $5
      i32.const -1
      i32.xor
      local.get $3
      i32.and
      i32.xor
      i32.add
      i32.add
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store
      local.get $4
      i32.const 10
      i32.shl
      local.get $4
      i32.const 22
      i32.shr_u
      i32.or
      local.get $4
      i32.const 30
      i32.shl
      local.get $4
      i32.const 2
      i32.shr_u
      i32.or
      local.get $4
      i32.const 19
      i32.shl
      local.get $4
      i32.const 13
      i32.shr_u
      i32.or
      i32.xor
      i32.xor
      local.get $0
      local.get $2
      i32.and
      local.get $0
      local.get $4
      i32.and
      local.get $2
      local.get $4
      i32.and
      i32.xor
      i32.xor
      i32.add
      local.set $22
      local.get $3
      local.set $6
      local.get $1
      local.set $3
      local.get $5
      local.set $1
      local.get $7
      local.get $18
      local.get $20
      call $~lib/array/Array<u32>#__get
      local.get $16
      i32.add
      local.tee $16
      i32.add
      local.set $5
      local.get $2
      local.set $7
      local.get $0
      local.set $2
      local.get $4
      local.set $0
      local.get $16
      local.get $22
      i32.add
      local.set $4
      local.get $20
      i32.const 1
      i32.add
      local.set $20
      br $for-loop|4
     end
    end
    local.get $4
    local.get $8
    i32.add
    local.set $8
    local.get $0
    local.get $9
    i32.add
    local.set $9
    local.get $2
    local.get $10
    i32.add
    local.set $10
    local.get $7
    local.get $11
    i32.add
    local.set $11
    local.get $5
    local.get $12
    i32.add
    local.set $12
    local.get $1
    local.get $13
    i32.add
    local.set $13
    local.get $3
    local.get $14
    i32.add
    local.set $14
    local.get $6
    local.get $15
    i32.add
    local.set $15
    local.get $21
    i32.const -64
    i32.sub
    local.set $21
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  local.get $8
  i32.const 24
  i32.shr_u
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 1
  local.get $8
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 2
  local.get $8
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 3
  local.get $8
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 4
  local.get $9
  i32.const 24
  i32.shr_u
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 5
  local.get $9
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 6
  local.get $9
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 7
  local.get $9
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 8
  local.get $10
  i32.const 24
  i32.shr_u
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 9
  local.get $10
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 10
  local.get $10
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 11
  local.get $10
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 12
  local.get $11
  i32.const 24
  i32.shr_u
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 13
  local.get $11
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 14
  local.get $11
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 15
  local.get $11
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 16
  local.get $12
  i32.const 24
  i32.shr_u
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 17
  local.get $12
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 18
  local.get $12
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 19
  local.get $12
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  local.get $13
  i32.const 24
  i32.shr_u
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 21
  local.get $13
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 22
  local.get $13
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 23
  local.get $13
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 24
  local.get $14
  i32.const 24
  i32.shr_u
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 25
  local.get $14
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 26
  local.get $14
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 27
  local.get $14
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 28
  local.get $15
  i32.const 24
  i32.shr_u
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 29
  local.get $15
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 30
  local.get $15
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 31
  local.get $15
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/crypto/sha256String (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $1
  i32.store offset=4
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $2
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    local.get $1
    local.get $2
    local.get $0
    local.get $2
    call $~lib/string/String#charCodeAt
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $assembly/core/crypto/sha256
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const -2
  i32.and
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const -2
  i32.and
  local.tee $3
  local.get $2
  i32.add
  local.tee $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 14928
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store offset=4
  local.get $4
  local.get $0
  local.get $2
  memory.copy
  local.get $2
  local.get $4
  i32.add
  local.get $1
  local.get $3
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $~lib/string/String#concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/core-crypto.test/bytesToHex (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  i32.const 14928
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/typedarray/Uint8Array#get:length
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $3
    call $~lib/typedarray/Uint8Array#__get
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.const 255
    i32.and
    i32.const 16
    call $~lib/util/number/utoa32
    local.tee $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=16
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.const 1
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 15216
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=20
     i32.const 15216
     local.get $1
     call $~lib/string/String.__concat
     local.set $1
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=12
    local.get $4
    local.get $2
    local.get $1
    call $~lib/string/String.__concat
    local.tee $2
    i32.store
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/core/crypto/hmacSha256 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 64
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/core/crypto/sha256
   local.tee $0
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $4
  i32.store offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/typedarray/Uint8Array#get:length
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    local.get $4
    local.get $3
    local.get $0
    local.get $3
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $3
  i32.store offset=20
  loop $for-loop|1
   local.get $2
   i32.const 64
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=12
    local.get $0
    local.get $2
    local.get $4
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    i32.const 54
    i32.xor
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=12
    local.get $3
    local.get $2
    local.get $4
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    i32.const 92
    i32.xor
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/typedarray/Uint8Array#get:length
  i32.const -64
  i32.sub
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $4
  i32.store offset=24
  i32.const 0
  local.set $2
  loop $for-loop|2
   local.get $2
   i32.const 64
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    local.get $4
    local.get $2
    local.get $0
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|2
   end
  end
  i32.const 0
  local.set $0
  loop $for-loop|3
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $~lib/typedarray/Uint8Array#get:length
   local.get $0
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=12
    local.get $4
    local.get $0
    i32.const -64
    i32.sub
    local.get $1
    local.get $0
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|3
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  call $assembly/core/crypto/sha256
  local.tee $1
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  i32.const 96
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $2
  i32.store offset=32
  i32.const 0
  local.set $0
  loop $for-loop|4
   local.get $0
   i32.const 64
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=12
    local.get $2
    local.get $0
    local.get $3
    local.get $0
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|4
   end
  end
  i32.const 0
  local.set $0
  loop $for-loop|5
   local.get $0
   i32.const 32
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=12
    local.get $2
    local.get $0
    i32.const -64
    i32.sub
    local.get $1
    local.get $0
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|5
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/core/crypto/sha256
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String.__ne (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/crypto/pbkdf2 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  local.get $3
  f64.convert_i32_s
  f64.const 0.03125
  f64.mul
  f64.ceil
  i32.trunc_sat_f64_s
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $8
  i32.store
  i32.const 1
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $9
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    call $~lib/typedarray/Uint8Array#constructor
    local.tee $5
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $5
    i32.const 0
    local.get $6
    i32.const 24
    i32.shr_u
    call $~lib/typedarray/Uint8Array#__set
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $5
    i32.const 1
    local.get $6
    i32.const 16
    i32.shr_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $5
    i32.const 2
    local.get $6
    i32.const 8
    i32.shr_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $5
    i32.const 3
    local.get $6
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    call $~lib/typedarray/Uint8Array#get:length
    i32.const 4
    i32.add
    call $~lib/typedarray/Uint8Array#constructor
    local.tee $7
    i32.store offset=12
    i32.const 0
    local.set $4
    loop $for-loop|1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $1
     call $~lib/typedarray/Uint8Array#get:length
     local.get $4
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=16
      local.get $7
      local.get $4
      local.get $1
      local.get $4
      call $~lib/typedarray/Uint8Array#__get
      call $~lib/typedarray/Uint8Array#__set
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|1
     end
    end
    i32.const 0
    local.set $4
    loop $for-loop|2
     local.get $4
     i32.const 4
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=16
      local.get $1
      call $~lib/typedarray/Uint8Array#get:length
      local.get $4
      i32.add
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=16
      local.get $7
      local.get $11
      local.get $5
      local.get $4
      call $~lib/typedarray/Uint8Array#__get
      call $~lib/typedarray/Uint8Array#__set
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|2
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $7
    call $assembly/core/crypto/hmacSha256
    local.tee $5
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    call $~lib/typedarray/Uint8Array#constructor
    local.tee $11
    i32.store offset=24
    i32.const 0
    local.set $4
    loop $for-loop|3
     local.get $4
     i32.const 32
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=16
      local.get $11
      local.get $4
      local.get $5
      local.get $4
      call $~lib/typedarray/Uint8Array#__get
      call $~lib/typedarray/Uint8Array#__set
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|3
     end
    end
    i32.const 1
    local.set $7
    loop $for-loop|4
     local.get $2
     local.get $7
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $0
      local.get $5
      call $assembly/core/crypto/hmacSha256
      local.tee $5
      i32.store offset=20
      i32.const 0
      local.set $4
      loop $for-loop|5
       local.get $4
       i32.const 32
       i32.lt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=16
        local.get $11
        local.get $4
        call $~lib/typedarray/Uint8Array#__get
        local.set $12
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store offset=16
        local.get $11
        local.get $4
        local.get $5
        local.get $4
        call $~lib/typedarray/Uint8Array#__get
        local.get $12
        i32.xor
        call $~lib/typedarray/Uint8Array#__set
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        br $for-loop|5
       end
      end
      local.get $7
      i32.const 1
      i32.add
      local.set $7
      br $for-loop|4
     end
    end
    local.get $3
    local.get $6
    i32.const 1
    i32.sub
    i32.const 5
    i32.shl
    local.tee $4
    i32.sub
    f64.convert_i32_s
    f64.const 32
    f64.min
    local.set $10
    i32.const 0
    local.set $5
    loop $for-loop|6
     local.get $5
     f64.convert_i32_s
     local.get $10
     f64.lt
     if
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store offset=16
      local.get $8
      local.get $4
      local.get $5
      i32.add
      local.get $11
      local.get $5
      call $~lib/typedarray/Uint8Array#__get
      call $~lib/typedarray/Uint8Array#__set
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $for-loop|6
     end
    end
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $assembly/core/crypto/constantTimeCompare (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/typedarray/Uint8Array#get:length
  local.get $4
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/typedarray/Uint8Array#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $3
    local.get $1
    local.get $2
    call $~lib/typedarray/Uint8Array#__get
    local.get $4
    i32.xor
    i32.or
    local.set $3
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  i32.const 255
  i32.and
  i32.eqz
 )
 (func $assembly/tests/core-crypto.test/runAllTests
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14848
   i32.store
   i32.const 14848
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   call $assembly/core/crypto/sha256String
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/tests/core-crypto.test/bytesToHex
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16800
   i32.store offset=12
   local.get $0
   i32.const 16800
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 16960
    i32.const 17088
    i32.const 30
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 17184
   i32.store
   i32.const 17184
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 17280
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 17280
   call $assembly/core/crypto/sha256String
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/tests/core-crypto.test/bytesToHex
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 17312
   i32.store offset=12
   local.get $0
   i32.const 17312
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 17472
    i32.const 17088
    i32.const 39
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 17584
   i32.store
   i32.const 17584
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 97
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   i32.const 98
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   i32.const 99
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/core/crypto/sha256
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/tests/core-crypto.test/bytesToHex
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 17312
   i32.store offset=16
   local.get $0
   i32.const 17312
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 17664
    i32.const 17088
    i32.const 53
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 17792
   i32.store
   i32.const 17792
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 11
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   i32.const 11
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   i32.const 11
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.const 11
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 72
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 1
   i32.const 105
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 2
   i32.const 32
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.const 84
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.const 104
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 5
   i32.const 101
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 6
   i32.const 114
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 7
   i32.const 101
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   call $assembly/core/crypto/hmacSha256
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 32
   i32.ne
   if
    i32.const 17888
    i32.const 17088
    i32.const 77
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 17984
   i32.store
   i32.const 17984
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 116
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   i32.const 101
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   i32.const 115
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.const 116
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 1
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 1
   i32.const 2
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 2
   i32.const 3
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.const 4
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.const 5
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 1
   i32.const 6
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 2
   i32.const 7
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 3
   i32.const 8
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   call $assembly/core/crypto/hmacSha256
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $0
   call $assembly/core/crypto/hmacSha256
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=28
   local.get $1
   call $assembly/tests/core-crypto.test/bytesToHex
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=28
   local.get $0
   call $assembly/tests/core-crypto.test/bytesToHex
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $1
   local.get $0
   call $~lib/string/String.__ne
   i32.eqz
   if
    i32.const 18064
    i32.const 17088
    i32.const 103
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 18176
   i32.store
   i32.const 18176
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 112
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   i32.const 97
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   i32.const 115
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.const 115
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 4
   i32.const 119
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 5
   i32.const 111
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 6
   i32.const 114
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 7
   i32.const 100
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 115
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 1
   i32.const 97
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 2
   i32.const 108
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.const 116
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.const 1000
   i32.const 32
   call $assembly/core/crypto/pbkdf2
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 32
   i32.ne
   if
    i32.const 18288
    i32.const 17088
    i32.const 127
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 18400
   i32.store
   i32.const 18400
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 116
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   i32.const 101
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   i32.const 115
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.const 116
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 1
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 1
   i32.const 2
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 2
   i32.const 3
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.const 4
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.const 5
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 1
   i32.const 6
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 2
   i32.const 7
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 3
   i32.const 8
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.const 100
   i32.const 16
   call $assembly/core/crypto/pbkdf2
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $2
   i32.const 100
   i32.const 16
   call $assembly/core/crypto/pbkdf2
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=28
   local.get $1
   call $assembly/tests/core-crypto.test/bytesToHex
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=28
   local.get $0
   call $assembly/tests/core-crypto.test/bytesToHex
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $1
   local.get $0
   call $~lib/string/String.__ne
   i32.eqz
   if
    i32.const 18464
    i32.const 17088
    i32.const 153
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 18576
   i32.store
   i32.const 18576
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 1
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   i32.const 2
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   i32.const 3
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.const 4
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 1
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 1
   i32.const 2
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 2
   i32.const 3
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.const 4
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $assembly/core/crypto/constantTimeCompare
   i32.const 1
   i32.ne
   if
    i32.const 18672
    i32.const 17088
    i32.const 170
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 18768
   i32.store
   i32.const 18768
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 1
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   i32.const 2
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   i32.const 3
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.const 4
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 1
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 1
   i32.const 2
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 2
   i32.const 3
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.const 5
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $assembly/core/crypto/constantTimeCompare
   if
    i32.const 18880
    i32.const 17088
    i32.const 187
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 18992
   i32.store
   i32.const 18992
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $assembly/core/crypto/constantTimeCompare
   if
    i32.const 19104
    i32.const 17088
    i32.const 195
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 19248
   i32.store
   i32.const 19248
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $assembly/core/crypto/constantTimeCompare
   i32.const 1
   i32.ne
   if
    i32.const 19376
    i32.const 17088
    i32.const 203
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 19472
   i32.store
   i32.const 19472
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 19584
   i32.store
   i32.const 19584
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 111
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 96
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 126
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/execution/context/ExecutionScope#constructor@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   block $3of3
    block $2of3
     block $1of3
      block $0of3
       block $outOfRange
        global.get $~argumentsLength
        i32.const 2
        i32.sub
        br_table $0of3 $1of3 $2of3 $3of3 $outOfRange
       end
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      call $"~lib/map/Map<~lib/string/String,f64>#constructor"
      local.tee $3
      i32.store
     end
     global.get $~lib/memory/__stack_pointer
     call $"~lib/map/Map<~lib/string/String,i32>#constructor"
     local.tee $4
     i32.store offset=4
    end
    call $~lib/bindings/dom/Date.now
    i64.trunc_sat_f64_s
    f64.convert_i64_s
    local.set $5
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 125
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store offset=4
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.store offset=12
   local.get $2
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   local.get $5
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/state/registerState/RegisterState#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 134
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 137
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<i32,assembly/types/Complex>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 141
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/state/primeState/PrimeStateEngine#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 138
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<i32,assembly/types/Complex>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 142
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 96
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/memory/holographic/HolographicMemory#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 143
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 146
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,~lib/set/Set<~lib/string/String>>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 147
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0.001
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/state/globalState/GlobalState#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 148
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 152
   i32.const 20016
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.store offset=12
   local.get $2
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 155
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $4
   local.get $5
   i32.store
   local.get $4
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $4
   local.get $5
   i32.store offset=8
   local.get $4
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.store offset=16
   local.get $2
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   f64.const 100
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store offset=4
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 150
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 1
   f64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 1
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0.1
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $3
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/execution/context/ExtendedExecutionContext#constructor@varargs (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 92
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 92
   memory.fill
   block $11of11
    block $10of11
     block $9of11
      block $8of11
       block $7of11
        block $6of11
         block $5of11
          block $4of11
           block $3of11
            block $2of11
             block $1of11
              block $outOfRange
               global.get $~argumentsLength
               br_table $1of11 $1of11 $2of11 $3of11 $4of11 $5of11 $6of11 $7of11 $8of11 $9of11 $10of11 $11of11 $outOfRange
              end
              unreachable
             end
             global.get $~lib/memory/__stack_pointer
             local.set $0
             global.get $~lib/memory/__stack_pointer
             i32.const 8
             i32.sub
             global.set $~lib/memory/__stack_pointer
             global.get $~lib/memory/__stack_pointer
             i32.const 119640
             i32.lt_s
             br_if $folding-inner1
             global.get $~lib/memory/__stack_pointer
             i64.const 0
             i64.store
             global.get $~lib/memory/__stack_pointer
             i32.const 5
             i32.const 123
             call $~lib/rt/itcms/__new
             local.tee $1
             i32.store
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=4
             local.get $1
             i32.const 0
             i32.store8
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=4
             local.get $1
             i32.const 0
             i32.store8 offset=1
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=4
             local.get $1
             i32.const 0
             i32.store8 offset=2
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=4
             local.get $1
             i32.const 0
             i32.store8 offset=3
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=4
             local.get $1
             i32.const 0
             i32.store8 offset=4
             global.get $~lib/memory/__stack_pointer
             i32.const 8
             i32.add
             global.set $~lib/memory/__stack_pointer
             local.get $0
             local.get $1
             i32.store
            end
            global.get $~lib/memory/__stack_pointer
            local.set $2
            global.get $~lib/memory/__stack_pointer
            i32.const 8
            i32.sub
            global.set $~lib/memory/__stack_pointer
            global.get $~lib/memory/__stack_pointer
            i32.const 119640
            i32.lt_s
            br_if $folding-inner1
            global.get $~lib/memory/__stack_pointer
            i64.const 0
            i64.store
            global.get $~lib/memory/__stack_pointer
            i32.const 20
            i32.const 124
            call $~lib/rt/itcms/__new
            local.tee $0
            i32.store
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store offset=4
            local.get $0
            i32.const 0
            i32.store
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store offset=4
            local.get $0
            i32.const 0
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store offset=4
            local.get $0
            i32.const 0
            i32.store offset=8
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store offset=4
            local.get $0
            i32.const 0
            i32.store offset=12
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store offset=4
            local.get $0
            i32.const 0
            i32.store offset=16
            global.get $~lib/memory/__stack_pointer
            i32.const 8
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $2
            local.get $0
            i32.store offset=4
           end
           global.get $~lib/memory/__stack_pointer
           local.set $3
           global.get $~lib/memory/__stack_pointer
           i32.const 1
           i32.const 2
           i32.const 127
           i32.const 0
           call $~lib/rt/__newArray
           local.tee $2
           i32.store offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.load offset=4
           i32.store offset=12
           global.get $~lib/memory/__stack_pointer
           i32.const 19840
           i32.store offset=16
           global.get $~lib/memory/__stack_pointer
           i32.const 19888
           i32.store offset=20
           i32.const 2
           global.set $~argumentsLength
           local.get $2
           i32.const 0
           i32.const 19840
           i32.const 19888
           call $assembly/runtime/execution/context/ExecutionScope#constructor@varargs
           call $~lib/array/Array<~lib/string/String>#__set
           local.get $3
           local.get $2
           i32.store offset=24
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 0
          i32.const 2
          i32.const 129
          i32.const 19920
          call $~lib/rt/__newArray
          local.tee $4
          i32.store offset=28
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 0
         i32.const 2
         i32.const 131
         i32.const 19952
         call $~lib/rt/__newArray
         local.tee $5
         i32.store offset=32
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 0
        i32.const 2
        i32.const 133
        i32.const 19984
        call $~lib/rt/__newArray
        local.tee $6
        i32.store offset=36
       end
       global.get $~lib/memory/__stack_pointer
       call $assembly/runtime/state/registerState/RegisterState#constructor
       local.tee $7
       i32.store offset=40
      end
      global.get $~lib/memory/__stack_pointer
      call $assembly/runtime/state/primeState/PrimeStateEngine#constructor
      local.tee $8
      i32.store offset=44
     end
     global.get $~lib/memory/__stack_pointer
     call $assembly/runtime/memory/holographic/HolographicMemory#constructor
     local.tee $9
     i32.store offset=48
    end
    global.get $~lib/memory/__stack_pointer
    local.set $10
    call $assembly/runtime/state/primeState/PrimeStateEngine#constructor
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store offset=16
    call $assembly/runtime/state/registerState/RegisterState#constructor
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=20
    local.get $10
    local.get $11
    local.get $3
    call $assembly/runtime/state/globalState/GlobalState#constructor
    local.tee $3
    i32.store offset=52
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=64
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=68
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=72
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=76
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=80
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=84
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=88
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.const 122
   call $~lib/rt/itcms/__new
   local.tee $10
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   local.get $10
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $10
   local.get $1
   i32.store offset=4
   local.get $10
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $10
   local.get $0
   i32.store offset=8
   local.get $10
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $10
   local.get $2
   i32.store offset=12
   local.get $10
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $10
   local.get $4
   i32.store offset=16
   local.get $10
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $10
   local.get $5
   i32.store offset=20
   local.get $10
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   local.get $10
   local.get $6
   i32.store offset=24
   local.get $10
   local.get $6
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $10
   local.get $7
   i32.store offset=28
   local.get $10
   local.get $7
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $10
   local.get $8
   i32.store offset=32
   local.get $10
   local.get $8
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $10
   local.get $9
   i32.store offset=36
   local.get $10
   local.get $9
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $10
   local.get $3
   i32.store offset=40
   local.get $10
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 92
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<i32,i32>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 161
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/RISAEngine#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 117
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 121
   i32.const 20048
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   global.set $~argumentsLength
   call $assembly/runtime/execution/context/ExtendedExecutionContext#constructor@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 156
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/object/Object#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 0
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 158
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 1000
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 100
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 100
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 10485760
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   block $__inlined_func$assembly/runtime/execution/controlFlow/ControlFlowManager#constructor$28 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.const 159
     call $~lib/rt/itcms/__new
     local.tee $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     call $~lib/object/Object#constructor
     local.tee $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     call $"~lib/map/Map<~lib/string/String,i32>#constructor"
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $1
     local.get $2
     i32.store
     local.get $1
     local.get $2
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     call $"~lib/map/Map<i32,i32>#constructor"
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $1
     local.get $2
     i32.store offset=4
     local.get $1
     local.get $2
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.const 163
     call $~lib/rt/itcms/__new
     local.tee $2
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     i32.const 16
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $2
     local.get $3
     i32.store
     local.get $2
     local.get $3
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     local.get $2
     i32.const 3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     i32.const 48
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $2
     local.get $3
     i32.store offset=8
     local.get $2
     local.get $3
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     local.get $2
     i32.const 4
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     local.get $2
     i32.const 0
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     local.get $2
     i32.const 0
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $1
     local.get $2
     i32.store offset=8
     local.get $1
     local.get $2
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     br $__inlined_func$assembly/runtime/execution/controlFlow/ControlFlowManager#constructor$28
    end
    br $folding-inner1
   end
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=16
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/IRISAInstruction#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 118
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=8
  local.get $2
  i32.const 14928
  i32.store offset=12
  local.get $2
  i32.const 14928
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/runtime/argument/Argument#constructor (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 119
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/argument/Argument.fromInt (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  call $assembly/runtime/argument/Argument#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/runtime/argument/Argument.fromFloat (param $0 f64) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  call $assembly/runtime/argument/Argument#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/runtime/RISAEngine#reset (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 0
  global.set $~argumentsLength
  call $assembly/runtime/execution/context/ExtendedExecutionContext#constructor@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1584
   i32.const 6144
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.store offset=4
  local.get $0
  i32.eqz
  if
   i32.const 20144
   i32.const 6144
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#toUpperCase (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $9
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.const 6
  i32.mul
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 20272
  i32.store
  i32.const 20268
  i32.load
  i32.const 1
  i32.shr_u
  local.set $3
  loop $for-loop|0
   local.get $8
   local.get $9
   i32.lt_u
   if
    local.get $0
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.tee $2
    i32.load16_u
    local.tee $1
    i32.const 7
    i32.shr_u
    if
     block $for-continue|0
      local.get $1
      i32.const 55295
      i32.sub
      i32.const 1025
      i32.lt_u
      local.get $8
      local.get $9
      i32.const 1
      i32.sub
      i32.lt_u
      i32.and
      if
       local.get $2
       i32.load16_u offset=2
       local.tee $4
       i32.const 56319
       i32.sub
       i32.const 1025
       i32.lt_u
       if
        local.get $8
        i32.const 1
        i32.add
        local.set $8
        local.get $4
        i32.const 1023
        i32.and
        local.get $1
        local.tee $2
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.or
        i32.const 65536
        i32.add
        local.tee $1
        i32.const 131072
        i32.ge_u
        if
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $2
         local.get $4
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $5
         i32.const 1
         i32.add
         local.set $5
         br $for-continue|0
        end
       end
      end
      local.get $1
      i32.const 9424
      i32.sub
      i32.const 25
      i32.le_u
      if
       local.get $6
       local.get $5
       i32.const 1
       i32.shl
       i32.add
       local.get $1
       i32.const 26
       i32.sub
       i32.store16
      else
       local.get $1
       i32.const 223
       i32.sub
       i32.const 64056
       i32.le_u
       if (result i32)
        local.get $3
        local.set $2
        i32.const 0
        local.set $7
        block $~lib/util/casemap/bsearch|inlined.0
         loop $while-continue|1
          local.get $2
          local.get $7
          i32.ge_s
          if
           local.get $2
           local.get $7
           i32.add
           i32.const 3
           i32.shr_u
           i32.const 2
           i32.shl
           local.tee $4
           i32.const 1
           i32.shl
           i32.const 20272
           i32.add
           i32.load16_u
           local.get $1
           i32.sub
           local.tee $10
           i32.eqz
           br_if $~lib/util/casemap/bsearch|inlined.0
           local.get $10
           i32.const 31
           i32.shr_u
           if
            local.get $4
            i32.const 4
            i32.add
            local.set $7
           else
            local.get $4
            i32.const 4
            i32.sub
            local.set $2
           end
           br $while-continue|1
          end
         end
         i32.const -1
         local.set $4
        end
        local.get $4
       else
        i32.const -1
       end
       local.tee $2
       i32.const -1
       i32.xor
       if
        local.get $2
        i32.const 1
        i32.shl
        i32.const 20272
        i32.add
        local.tee $1
        i32.load16_u offset=6
        local.set $2
        local.get $6
        local.get $5
        i32.const 1
        i32.shl
        i32.add
        local.tee $4
        local.get $1
        i32.load offset=2
        i32.store
        local.get $4
        local.get $2
        i32.store16 offset=4
        local.get $5
        local.get $2
        i32.const 0
        i32.ne
        i32.const 1
        i32.add
        i32.add
        local.set $5
       else
        local.get $1
        local.tee $2
        i32.const 8
        i32.shr_u
        local.tee $4
        i32.const 24868
        i32.add
        i32.load8_u
        local.get $4
        i32.const 21228
        i32.add
        i32.load8_u
        i32.const 86
        i32.mul
        i32.const 21228
        i32.add
        local.get $1
        i32.const 255
        i32.and
        local.tee $7
        i32.const 3
        i32.div_u
        i32.add
        i32.load8_u
        local.get $7
        i32.const 3
        i32.rem_u
        i32.const 2
        i32.shl
        i32.const 23896
        i32.add
        i32.load
        i32.mul
        i32.const 11
        i32.shr_u
        i32.const 6
        i32.rem_u
        i32.add
        i32.const 2
        i32.shl
        i32.const 23908
        i32.add
        i32.load
        local.tee $4
        i32.const 255
        i32.and
        local.set $10
        local.get $1
        local.get $4
        i32.const 8
        i32.shr_s
        local.tee $4
        i32.const 0
        local.get $10
        i32.const 1
        i32.xor
        i32.sub
        i32.and
        i32.add
        local.set $1
        block $__inlined_func$~lib/util/casemap/casemap$745
         local.get $10
         i32.const 2
         i32.lt_u
         br_if $__inlined_func$~lib/util/casemap/casemap$745
         local.get $4
         i32.const 255
         i32.and
         local.set $1
         local.get $4
         i32.const 8
         i32.shr_u
         local.set $4
         loop $while-continue|0
          local.get $1
          if
           local.get $4
           local.get $1
           i32.const 1
           i32.shr_u
           local.tee $10
           i32.add
           i32.const 1
           i32.shl
           i32.const 25380
           i32.add
           local.tee $11
           i32.load8_u
           local.tee $12
           local.get $7
           i32.eq
           if (result i32)
            local.get $2
            i32.const 0
            local.get $11
            i32.load8_u offset=1
            i32.const 2
            i32.shl
            i32.const 23908
            i32.add
            i32.load
            local.tee $1
            i32.const 255
            i32.and
            local.tee $4
            i32.const 1
            i32.xor
            i32.sub
            local.get $1
            i32.const 8
            i32.shr_s
            i32.and
            i32.add
            local.set $1
            local.get $4
            i32.const 2
            i32.lt_u
            br_if $__inlined_func$~lib/util/casemap/casemap$745
            local.get $2
            i32.const 1
            i32.sub
            local.set $1
            br $__inlined_func$~lib/util/casemap/casemap$745
           else
            local.get $7
            local.get $12
            i32.lt_u
            if (result i32)
             local.get $10
            else
             local.get $4
             local.get $10
             i32.add
             local.set $4
             local.get $1
             local.get $10
             i32.sub
            end
           end
           local.set $1
           br $while-continue|0
          end
         end
         local.get $2
         local.set $1
        end
        local.get $1
        i32.const 2097151
        i32.and
        local.tee $1
        i32.const 65536
        i32.lt_u
        if
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         i32.store16
        else
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         i32.const 65536
         i32.sub
         local.tee $1
         i32.const 10
         i32.shr_u
         i32.const 55296
         i32.or
         local.get $1
         i32.const 1023
         i32.and
         i32.const 56320
         i32.or
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $5
         i32.const 1
         i32.add
         local.set $5
        end
       end
      end
     end
    else
     local.get $6
     local.get $5
     i32.const 1
     i32.shl
     i32.add
     local.get $1
     i32.const 21100
     i32.add
     i32.load8_u
     i32.store16
    end
    local.get $8
    i32.const 1
    i32.add
    local.set $8
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $6
  local.get $5
  i32.const 1
  i32.shl
  call $~lib/rt/itcms/__renew
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/argument/Argument#isString (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $0
  i32.const 0
  call $~lib/string/String.__ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/argument/Argument#isFloat (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=16
  else
   i32.const 1
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.eqz
 )
 (func $assembly/runtime/argument/Argument#toString (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  block $folding-inner0
   local.get $0
   call $assembly/runtime/argument/Argument#isString
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $0
    i32.store offset=4
    local.get $0
    i32.eqz
    if
     i32.const 25808
     i32.const 25936
     i32.const 40
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    br $folding-inner0
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/runtime/argument/Argument#isFloat
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    f64.load offset=8
    call $~lib/number/F64#toString
    local.set $0
    br $folding-inner0
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=16
   i32.const 10
   call $~lib/number/I32#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#set" (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $7
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#find"
   local.tee $3
   if
    local.get $3
    local.get $2
    i32.store offset=4
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $9
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $6
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $10
     local.get $0
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $5
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $10
      i32.ne
      if
       local.get $10
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.load
        local.tee $11
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=8
        local.get $3
        local.get $11
        i32.store
        local.get $3
        local.get $10
        i32.load offset=4
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=8
        local.get $3
        local.get $9
        local.get $11
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $8
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load
        i32.store offset=8
        local.get $11
        local.get $3
        i32.store
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $10
       i32.const 12
       i32.add
       local.set $10
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=16
     local.get $0
     local.get $9
     i32.store
     local.get $0
     local.get $9
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=16
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $3
    local.get $4
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $0
    local.get $1
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $3
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $7
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=8
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/execution/controlFlow/StackFrame#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 164
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=8
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#set" (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $1
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   local.get $3
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   local.get $3
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   local.get $3
   i32.const 16
   i32.shr_u
   i32.xor
   local.tee $8
   call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#find"
   local.tee $3
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $9
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $10
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $7
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $11
     local.get $0
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $6
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $6
      local.get $11
      i32.ne
      if
       local.get $11
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $11
        i32.load
        local.tee $12
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.load offset=4
        local.tee $5
        i32.store offset=8
        local.get $3
        local.get $5
        i32.store offset=4
        local.get $3
        local.get $10
        local.get $9
        local.get $12
        i32.const -1028477379
        i32.mul
        i32.const 374761397
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $5
        i32.const 15
        i32.shr_u
        local.get $5
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $5
        i32.const 13
        i32.shr_u
        local.get $5
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $5
        i32.const 16
        i32.shr_u
        local.get $5
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $5
        i32.load
        i32.store offset=8
        local.get $5
        local.get $3
        i32.store
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $11
       i32.const 12
       i32.add
       local.set $11
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=12
     local.get $0
     local.get $10
     i32.store
     local.get $0
     local.get $10
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $9
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $7
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $8
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=8
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<i32,i32>#set" (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $1
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   i32.const 15
   i32.shr_u
   local.get $3
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   i32.const 13
   i32.shr_u
   local.get $3
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   i32.const 16
   i32.shr_u
   local.get $3
   i32.xor
   local.tee $7
   call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#find"
   local.tee $3
   if
    local.get $3
    local.get $2
    i32.store offset=4
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $9
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $6
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $10
     local.get $0
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $5
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $10
      i32.ne
      if
       local.get $10
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $10
        i32.load
        local.tee $11
        i32.store
        local.get $3
        local.get $10
        i32.load offset=4
        i32.store offset=4
        local.get $3
        local.get $9
        local.get $8
        local.get $11
        i32.const -1028477379
        i32.mul
        i32.const 374761397
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $11
        local.get $11
        i32.const 15
        i32.shr_u
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $11
        local.get $11
        i32.const 13
        i32.shr_u
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $11
        local.get $11
        i32.const 16
        i32.shr_u
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load
        i32.store offset=8
        local.get $11
        local.get $3
        i32.store
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $10
       i32.const 12
       i32.add
       local.set $10
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=12
     local.get $0
     local.get $9
     i32.store
     local.get $0
     local.get $9
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $7
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=8
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#get" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 6192
   i32.const 6256
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   i32.const 27312
   i32.const 6144
   i32.const 271
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/runtime/execution/controlFlow/ControlFlowManager#buildJumpTable (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   local.get $3
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#clear"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $3
   i32.store
   local.get $3
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#clear"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $3
   i32.store
   local.get $3
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#clear"
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 165
   i32.const 20112
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     local.get $2
     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
     local.tee $3
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load
     local.tee $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     call $~lib/string/String#toUpperCase
     local.tee $5
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 6112
     i32.store offset=4
     local.get $5
     i32.const 6112
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.load offset=4
      local.tee $5
      i32.store
      local.get $5
      call $~lib/array/Array<u32>#get:length
      i32.const 0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $5
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.load offset=4
       local.tee $3
       i32.store offset=24
       local.get $3
       i32.const 0
       call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=20
       local.get $3
       call $assembly/runtime/argument/Argument#toString
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=4
       local.get $5
       local.get $3
       local.get $2
       call $"~lib/map/Map<~lib/string/String,i32>#set"
      end
     else
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 3136
      i32.store offset=4
      local.get $5
      i32.const 3136
      call $~lib/string/String.__eq
      if (result i32)
       i32.const 1
      else
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 3168
       i32.store offset=4
       local.get $5
       i32.const 3168
       call $~lib/string/String.__eq
      end
      if (result i32)
       i32.const 1
      else
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 27152
       i32.store offset=4
       local.get $5
       i32.const 27152
       call $~lib/string/String.__eq
      end
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 3136
       i32.store offset=20
       i32.const 3136
       local.get $2
       call $assembly/runtime/execution/controlFlow/StackFrame#constructor
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=4
       local.get $4
       local.get $3
       call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $3
       i32.store
       i32.const 0
       global.set $~argumentsLength
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 119640
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 119640
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       i64.const 0
       i64.store
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.const 162
       call $~lib/rt/itcms/__new
       local.tee $5
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=4
       local.get $5
       i32.const -1
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=4
       local.get $5
       i32.const -1
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=4
       local.get $3
       local.get $2
       local.get $5
       call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#set"
      else
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 27200
       i32.store offset=4
       local.get $5
       i32.const 27200
       call $~lib/string/String.__eq
       if (result i32)
        i32.const 1
       else
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 27232
        i32.store offset=4
        local.get $5
        i32.const 27232
        call $~lib/string/String.__eq
       end
       if (result i32)
        i32.const 1
       else
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 27264
        i32.store offset=4
        local.get $5
        i32.const 27264
        call $~lib/string/String.__eq
       end
       if
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 27200
        i32.store offset=20
        i32.const 27200
        local.get $2
        call $assembly/runtime/execution/controlFlow/StackFrame#constructor
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store offset=4
        local.get $4
        local.get $3
        call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load offset=4
        local.tee $3
        i32.store
        local.get $3
        local.get $2
        local.get $2
        call $"~lib/map/Map<i32,i32>#set"
       else
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 2944
        i32.store offset=4
        local.get $5
        i32.const 2944
        call $~lib/string/String.__eq
        if
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store
         local.get $4
         call $~lib/array/Array<u32>#get:length
         i32.const 0
         i32.gt_s
         if (result i32)
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store offset=24
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store offset=28
          local.get $4
          local.get $4
          call $~lib/array/Array<u32>#get:length
          i32.const 1
          i32.sub
          call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
          local.set $3
          global.get $~lib/memory/__stack_pointer
          local.get $3
          i32.store offset=20
          global.get $~lib/memory/__stack_pointer
          local.get $3
          i32.load
          local.tee $3
          i32.store
          global.get $~lib/memory/__stack_pointer
          i32.const 3136
          i32.store offset=4
          local.get $3
          i32.const 3136
          call $~lib/string/String.__eq
         else
          i32.const 0
         end
         if
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store offset=4
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.load offset=8
          local.tee $5
          i32.store
          global.get $~lib/memory/__stack_pointer
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store offset=20
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store offset=24
          local.get $4
          local.get $4
          call $~lib/array/Array<u32>#get:length
          i32.const 1
          i32.sub
          call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
          local.set $3
          global.get $~lib/memory/__stack_pointer
          local.get $3
          i32.store offset=4
          local.get $6
          local.get $5
          local.get $3
          i32.load offset=4
          call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#get"
          local.tee $3
          i32.store offset=32
          local.get $3
          if
           global.get $~lib/memory/__stack_pointer
           local.get $3
           i32.store
           local.get $3
           local.get $2
           i32.store
          end
         end
        else
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store
         global.get $~lib/memory/__stack_pointer
         i32.const 2976
         i32.store offset=4
         local.get $5
         i32.const 2976
         call $~lib/string/String.__eq
         if
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store
          local.get $4
          call $~lib/array/Array<u32>#get:length
          i32.const 0
          i32.gt_s
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store offset=24
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store offset=28
           local.get $4
           local.get $4
           call $~lib/array/Array<u32>#get:length
           i32.const 1
           i32.sub
           call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
           local.set $3
           global.get $~lib/memory/__stack_pointer
           local.get $3
           i32.store offset=20
           global.get $~lib/memory/__stack_pointer
           local.get $3
           i32.load
           local.tee $3
           i32.store
           global.get $~lib/memory/__stack_pointer
           i32.const 3136
           i32.store offset=4
           local.get $3
           i32.const 3136
           call $~lib/string/String.__eq
          else
           i32.const 0
          end
          if
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store offset=4
           local.get $4
           call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#pop
           local.set $3
           global.get $~lib/memory/__stack_pointer
           local.get $3
           i32.store
           local.get $3
           i32.load offset=4
           local.set $3
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load offset=8
           local.tee $5
           i32.store
           global.get $~lib/memory/__stack_pointer
           local.get $5
           local.get $3
           call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#get"
           local.tee $3
           i32.store offset=36
           local.get $3
           if
            global.get $~lib/memory/__stack_pointer
            local.get $3
            i32.store
            local.get $3
            local.get $2
            i32.store offset=4
           end
          end
         else
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store
          global.get $~lib/memory/__stack_pointer
          i32.const 3008
          i32.store offset=4
          local.get $5
          i32.const 3008
          call $~lib/string/String.__eq
          if (result i32)
           i32.const 1
          else
           global.get $~lib/memory/__stack_pointer
           local.get $5
           i32.store
           global.get $~lib/memory/__stack_pointer
           i32.const 3056
           i32.store offset=4
           local.get $5
           i32.const 3056
           call $~lib/string/String.__eq
          end
          if
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store
           local.get $4
           call $~lib/array/Array<u32>#get:length
           i32.const 0
           i32.gt_s
           if (result i32)
            global.get $~lib/memory/__stack_pointer
            local.get $4
            i32.store offset=24
            global.get $~lib/memory/__stack_pointer
            local.get $4
            i32.store offset=28
            local.get $4
            local.get $4
            call $~lib/array/Array<u32>#get:length
            i32.const 1
            i32.sub
            call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
            local.set $3
            global.get $~lib/memory/__stack_pointer
            local.get $3
            i32.store offset=20
            global.get $~lib/memory/__stack_pointer
            local.get $3
            i32.load
            local.tee $3
            i32.store
            global.get $~lib/memory/__stack_pointer
            i32.const 27200
            i32.store offset=4
            local.get $3
            i32.const 27200
            call $~lib/string/String.__eq
           else
            i32.const 0
           end
           if
            global.get $~lib/memory/__stack_pointer
            local.get $4
            i32.store offset=4
            local.get $4
            call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#pop
            local.set $3
            global.get $~lib/memory/__stack_pointer
            local.get $3
            i32.store
            local.get $3
            i32.load offset=4
            local.set $3
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.load offset=4
            local.tee $5
            i32.store
            local.get $5
            local.get $2
            local.get $3
            call $"~lib/map/Map<i32,i32>#set"
           end
          end
         end
        end
       end
      end
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/RISAEngine#loadProgram (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/runtime/RISAEngine#reset
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=12
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store offset=4
   local.get $1
   local.get $3
   call $assembly/runtime/execution/controlFlow/ControlFlowManager#buildJumpTable
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $1
    i32.store
    local.get $1
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     local.get $2
     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
     local.tee $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $3
     i32.store offset=12
     local.get $3
     call $~lib/string/String#toUpperCase
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 6112
     i32.store offset=4
     local.get $3
     i32.const 6112
     call $~lib/string/String.__eq
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load offset=4
      local.tee $3
      i32.store
      local.get $3
      call $~lib/array/Array<u32>#get:length
      i32.const 0
      i32.gt_s
     else
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load offset=4
      local.tee $1
      i32.store offset=4
      local.get $1
      i32.const 0
      call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      local.get $3
      local.get $1
      call $assembly/runtime/argument/Argument#toString
      local.tee $1
      i32.store offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=12
      local.tee $3
      i32.store offset=12
      local.get $3
      call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      local.get $3
      local.get $1
      local.get $2
      call $"~lib/map/Map<~lib/string/String,i32>#set"
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 168
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $1
  i32.store8 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $2
  i32.store8 offset=5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $5
  local.get $4
  i32.store offset=12
  local.get $5
  local.get $4
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.tee $5
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 14928
   return
  end
  local.get $5
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 14928
   local.get $0
   select
   return
  end
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=8
     local.get $3
     local.get $6
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     i32.add
     local.set $3
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  local.get $2
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $1
  local.get $5
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store offset=12
  i32.const 0
  local.set $3
  loop $for-loop|1
   local.get $3
   local.get $5
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $7
    i32.store offset=4
    local.get $7
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     local.get $6
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     local.get $7
     local.get $7
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     local.tee $7
     i32.const 1
     i32.shl
     memory.copy
     local.get $4
     local.get $7
     i32.add
     local.set $4
    end
    local.get $1
    if
     local.get $6
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $1
     i32.const 1
     i32.shl
     memory.copy
     local.get $1
     local.get $4
     i32.add
     local.set $4
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.store offset=4
  local.get $0
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $6
   local.get $4
   i32.const 1
   i32.shl
   i32.add
   local.get $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const -2
   i32.and
   memory.copy
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store
  local.get $0
  local.get $1
  i32.const 14928
  call $~lib/util/string/joinStringArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#has" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#find"
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#get" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 6192
   i32.const 6256
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 3
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const -1
    local.set $3
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  i32.const 14928
  call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/string/strtod (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 f64)
  (local $9 i32)
  (local $10 f64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  block $folding-inner1
   block $folding-inner0
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    local.tee $5
    i32.eqz
    br_if $folding-inner0
    local.get $0
    i32.load16_u
    local.set $4
    f64.const 1
    local.set $10
    loop $while-continue|0
     local.get $5
     if (result i32)
      block $__inlined_func$~lib/util/string/isSpace$32 (result i32)
       local.get $4
       i32.const 128
       i32.or
       i32.const 160
       i32.eq
       local.get $4
       i32.const 9
       i32.sub
       i32.const 4
       i32.le_u
       i32.or
       local.get $4
       i32.const 5760
       i32.lt_u
       br_if $__inlined_func$~lib/util/string/isSpace$32
       drop
       i32.const 1
       local.get $4
       i32.const -8192
       i32.add
       i32.const 10
       i32.le_u
       br_if $__inlined_func$~lib/util/string/isSpace$32
       drop
       block $break|0
        block $case6|0
         local.get $4
         i32.const 5760
         i32.eq
         br_if $case6|0
         local.get $4
         i32.const 8232
         i32.eq
         br_if $case6|0
         local.get $4
         i32.const 8233
         i32.eq
         br_if $case6|0
         local.get $4
         i32.const 8239
         i32.eq
         br_if $case6|0
         local.get $4
         i32.const 8287
         i32.eq
         br_if $case6|0
         local.get $4
         i32.const 12288
         i32.eq
         br_if $case6|0
         local.get $4
         i32.const 65279
         i32.eq
         br_if $case6|0
         br $break|0
        end
        i32.const 1
        br $__inlined_func$~lib/util/string/isSpace$32
       end
       i32.const 0
      end
     else
      i32.const 0
     end
     if
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u
      local.set $4
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $while-continue|0
     end
    end
    local.get $5
    i32.eqz
    br_if $folding-inner0
    local.get $4
    i32.const 45
    i32.eq
    if (result i32)
     local.get $5
     i32.const 1
     i32.sub
     local.tee $5
     i32.eqz
     br_if $folding-inner0
     f64.const -1
     local.set $10
     local.get $0
     i32.const 2
     i32.add
     local.tee $0
     i32.load16_u
    else
     local.get $4
     i32.const 43
     i32.eq
     if (result i32)
      local.get $5
      i32.const 1
      i32.sub
      local.tee $5
      i32.eqz
      br_if $folding-inner0
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u
     else
      local.get $4
     end
    end
    local.tee $4
    i32.const 73
    i32.eq
    local.get $5
    i32.const 8
    i32.ge_s
    i32.and
    if
     local.get $0
     i64.load
     i64.const 29555310648492105
     i64.eq
     if (result i32)
      local.get $0
      i64.load offset=8
      i64.const 34058970405077102
      i64.eq
     else
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $10
      f64.const inf
      f64.mul
      return
     end
     br $folding-inner0
    end
    local.get $4
    i32.const 46
    i32.ne
    local.get $4
    i32.const 48
    i32.sub
    i32.const 10
    i32.ge_u
    i32.and
    br_if $folding-inner0
    local.get $0
    local.set $3
    loop $while-continue|1
     local.get $4
     i32.const 48
     i32.eq
     if
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u
      local.set $4
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $while-continue|1
     end
    end
    local.get $5
    i32.const 0
    i32.le_s
    br_if $folding-inner1
    local.get $4
    i32.const 46
    i32.eq
    if
     local.get $0
     local.get $3
     i32.eq
     local.set $3
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     local.get $3
     local.get $5
     i32.const 1
     i32.sub
     local.tee $5
     i32.eqz
     i32.and
     br_if $folding-inner0
     i32.const 1
     local.set $9
     loop $for-loop|2
      local.get $0
      i32.load16_u
      local.tee $4
      i32.const 48
      i32.eq
      if
       local.get $5
       i32.const 1
       i32.sub
       local.set $5
       local.get $2
       i32.const 1
       i32.sub
       local.set $2
       local.get $0
       i32.const 2
       i32.add
       local.set $0
       br $for-loop|2
      end
     end
     local.get $5
     i32.const 0
     i32.le_s
     br_if $folding-inner1
     local.get $3
     local.get $2
     i32.eqz
     i32.and
     local.get $4
     i32.const 48
     i32.sub
     i32.const 10
     i32.ge_u
     i32.and
     br_if $folding-inner0
    end
    local.get $4
    i32.const 48
    i32.sub
    local.set $3
    loop $for-loop|3
     local.get $3
     i32.const 10
     i32.lt_u
     local.tee $11
     local.get $9
     i32.eqz
     local.get $4
     i32.const 46
     i32.eq
     i32.and
     i32.or
     if
      block $for-break3
       local.get $11
       if
        local.get $1
        i32.const 19
        i32.lt_s
        if (result i64)
         local.get $3
         i64.extend_i32_u
         local.get $6
         i64.const 10
         i64.mul
         i64.add
        else
         local.get $6
         local.get $3
         i32.const 0
         i32.ne
         i64.extend_i32_u
         i64.or
        end
        local.set $6
        local.get $1
        i32.const 1
        i32.add
        local.set $1
       else
        local.get $1
        local.set $2
        i32.const 1
        local.set $9
       end
       local.get $5
       i32.const 1
       i32.sub
       local.tee $5
       i32.eqz
       br_if $for-break3
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u
       local.tee $4
       i32.const 48
       i32.sub
       local.set $3
       br $for-loop|3
      end
     end
    end
    block $~lib/util/string/scientific|inlined.0
     local.get $6
     i64.eqz
     local.get $2
     local.get $1
     local.get $9
     select
     i32.const 19
     local.get $1
     local.get $1
     i32.const 19
     i32.gt_s
     select
     i32.sub
     block $~lib/util/string/parseExp|inlined.0 (result i32)
      i32.const 1
      local.set $9
      i32.const 0
      local.set $4
      i32.const 0
      local.get $0
      i32.load16_u
      i32.const 32
      i32.or
      i32.const 101
      i32.ne
      br_if $~lib/util/string/parseExp|inlined.0
      drop
      i32.const 0
      local.get $5
      i32.const 1
      i32.sub
      local.tee $5
      i32.eqz
      br_if $~lib/util/string/parseExp|inlined.0
      drop
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u
      local.tee $1
      i32.const 45
      i32.eq
      if (result i32)
       i32.const 0
       local.get $5
       i32.const 1
       i32.sub
       local.tee $5
       i32.eqz
       br_if $~lib/util/string/parseExp|inlined.0
       drop
       i32.const -1
       local.set $9
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u
      else
       local.get $1
       i32.const 43
       i32.eq
       if (result i32)
        i32.const 0
        local.get $5
        i32.const 1
        i32.sub
        local.tee $5
        i32.eqz
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u
       else
        local.get $1
       end
      end
      local.set $3
      loop $while-continue|4
       local.get $3
       i32.const 48
       i32.eq
       if
        i32.const 0
        local.get $5
        i32.const 1
        i32.sub
        local.tee $5
        i32.eqz
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u
        local.set $3
        br $while-continue|4
       end
      end
      local.get $3
      i32.const 48
      i32.sub
      local.set $3
      loop $for-loop|5
       local.get $3
       i32.const 10
       i32.lt_u
       i32.const 0
       local.get $5
       select
       if
        local.get $9
        i32.const 3200
        i32.mul
        local.get $4
        i32.const 3200
        i32.ge_s
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $4
        i32.const 10
        i32.mul
        local.get $3
        i32.add
        local.set $4
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u
        i32.const 48
        i32.sub
        local.set $3
        br $for-loop|5
       end
      end
      local.get $4
      local.get $9
      i32.mul
     end
     i32.add
     local.tee $0
     i32.const -342
     i32.lt_s
     i32.or
     br_if $~lib/util/string/scientific|inlined.0
     f64.const inf
     local.set $8
     local.get $0
     i32.const 308
     i32.gt_s
     br_if $~lib/util/string/scientific|inlined.0
     local.get $6
     f64.convert_i64_u
     local.set $8
     local.get $0
     i32.eqz
     br_if $~lib/util/string/scientific|inlined.0
     local.get $0
     i32.const 37
     i32.le_s
     local.get $0
     i32.const 22
     i32.gt_s
     i32.and
     if
      local.get $8
      local.get $0
      i32.const 3
      i32.shl
      i32.const 28144
      i32.add
      f64.load
      f64.mul
      local.set $8
      i32.const 22
      local.set $0
     end
     local.get $6
     i64.const 9007199254740991
     i64.le_u
     if (result i32)
      local.get $0
      i32.const 31
      i32.shr_s
      local.tee $1
      local.get $0
      local.get $1
      i32.add
      i32.xor
      i32.const 22
      i32.le_s
     else
      i32.const 0
     end
     if (result f64)
      local.get $0
      i32.const 0
      i32.gt_s
      if
       local.get $8
       local.get $0
       i32.const 3
       i32.shl
       i32.const 28320
       i32.add
       f64.load
       f64.mul
       local.set $8
       br $~lib/util/string/scientific|inlined.0
      end
      local.get $8
      i32.const 0
      local.get $0
      i32.sub
      i32.const 3
      i32.shl
      i32.const 28320
      i32.add
      f64.load
      f64.div
     else
      local.get $0
      i32.const 0
      i32.lt_s
      if (result f64)
       local.get $6
       local.get $6
       i64.clz
       local.tee $7
       i64.shl
       local.set $6
       local.get $0
       i64.extend_i32_s
       local.get $7
       i64.sub
       local.set $7
       loop $for-loop|6
        local.get $0
        i32.const -14
        i32.le_s
        if
         local.get $6
         i64.const 6103515625
         i64.rem_u
         local.get $6
         i64.const 6103515625
         i64.div_u
         local.tee $6
         i64.clz
         local.tee $12
         i64.const 18
         i64.sub
         i64.shl
         f64.convert_i64_u
         f64.const 0.00004294967296
         f64.mul
         f64.nearest
         i64.trunc_sat_f64_u
         local.get $6
         local.get $12
         i64.shl
         i64.add
         local.set $6
         local.get $7
         local.get $12
         i64.sub
         local.set $7
         local.get $0
         i32.const 14
         i32.add
         local.set $0
         br $for-loop|6
        end
       end
       local.get $6
       i32.const 0
       local.get $0
       i32.sub
       call $~lib/math/ipow32
       i64.extend_i32_s
       local.tee $13
       i64.div_u
       local.tee $14
       i64.clz
       local.set $12
       local.get $6
       local.get $13
       i64.rem_u
       f64.convert_i64_u
       i64.reinterpret_f64
       local.get $12
       i64.const 52
       i64.shl
       i64.add
       f64.reinterpret_i64
       local.get $13
       f64.convert_i64_u
       f64.div
       i64.trunc_sat_f64_u
       local.get $14
       local.get $12
       i64.shl
       i64.add
       f64.convert_i64_u
       local.get $7
       local.get $12
       i64.sub
       i32.wrap_i64
       call $~lib/math/NativeMath.scalbn
      else
       local.get $6
       local.get $6
       i64.ctz
       local.tee $7
       i64.shr_u
       local.set $6
       local.get $7
       local.get $0
       i64.extend_i32_s
       i64.add
       global.set $~lib/util/string/__fixmulShift
       loop $for-loop|7
        local.get $0
        i32.const 13
        i32.ge_s
        if
         i64.const 32
         local.get $6
         i64.const 32
         i64.shr_u
         i64.const 1220703125
         i64.mul
         local.get $6
         i64.const 4294967295
         i64.and
         i64.const 1220703125
         i64.mul
         local.tee $6
         i64.const 32
         i64.shr_u
         i64.add
         local.tee $7
         i64.const 32
         i64.shr_u
         i32.wrap_i64
         i32.clz
         i64.extend_i32_u
         local.tee $12
         i64.sub
         local.tee $13
         global.get $~lib/util/string/__fixmulShift
         i64.add
         global.set $~lib/util/string/__fixmulShift
         local.get $6
         local.get $12
         i64.shl
         i64.const 31
         i64.shr_u
         i64.const 1
         i64.and
         local.get $7
         local.get $12
         i64.shl
         local.get $6
         i64.const 4294967295
         i64.and
         local.get $13
         i64.shr_u
         i64.or
         i64.add
         local.set $6
         local.get $0
         i32.const 13
         i32.sub
         local.set $0
         br $for-loop|7
        end
       end
       local.get $0
       call $~lib/math/ipow32
       i64.extend_i32_u
       local.tee $7
       local.get $6
       i64.const 4294967295
       i64.and
       i64.mul
       local.set $12
       i64.const 32
       local.get $6
       i64.const 32
       i64.shr_u
       local.get $7
       i64.mul
       local.get $12
       i64.const 32
       i64.shr_u
       i64.add
       local.tee $6
       i64.const 32
       i64.shr_u
       i32.wrap_i64
       i32.clz
       i64.extend_i32_u
       local.tee $7
       i64.sub
       local.tee $13
       global.get $~lib/util/string/__fixmulShift
       i64.add
       global.set $~lib/util/string/__fixmulShift
       local.get $12
       local.get $7
       i64.shl
       i64.const 31
       i64.shr_u
       i64.const 1
       i64.and
       local.get $6
       local.get $7
       i64.shl
       local.get $12
       i64.const 4294967295
       i64.and
       local.get $13
       i64.shr_u
       i64.or
       i64.add
       f64.convert_i64_u
       global.get $~lib/util/string/__fixmulShift
       i32.wrap_i64
       call $~lib/math/NativeMath.scalbn
      end
     end
     local.set $8
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $8
    local.get $10
    f64.copysign
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const nan:0x8000000000000
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  f64.const 0
  f64.mul
 )
 (func $~lib/number/F64.parseFloat (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/util/string/strtod
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1584
   i32.const 6144
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/state/globalState/GlobalState#calculatePairwiseCoherence (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 i64)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 48
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $1
   f64.convert_i32_s
   local.tee $3
   local.get $2
   f64.convert_i32_s
   local.tee $6
   f64.min
   call $~lib/number/F64#toString
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   local.get $6
   f64.max
   call $~lib/number/F64#toString
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28592
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   i32.const 28592
   local.get $7
   i32.store
   i32.const 28592
   local.get $7
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 28592
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   i32.const 28600
   local.get $8
   i32.store
   i32.const 28592
   local.get $8
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 28592
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=12
   local.get $5
   i32.const 28592
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.tee $5
   i32.store offset=16
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=16
   local.tee $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $7
   local.get $5
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
   local.tee $7
   i32.store offset=24
   local.get $7
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=8
    local.get $4
    f64.convert_i64_s
    local.get $7
    f64.load offset=16
    f64.sub
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    local.get $3
    local.get $0
    f64.load offset=24
    f64.lt
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 48
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $7
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   local.get $1
   call $assembly/runtime/state/primeState/IPrimeStateEngine#getOscillator@override
   local.tee $7
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $8
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   local.get $2
   call $assembly/runtime/state/primeState/IPrimeStateEngine#getOscillator@override
   local.tee $8
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load offset=8
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $3
   local.get $8
   f64.load offset=8
   f64.sub
   call $~lib/math/NativeMath.cos
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $3
   local.get $7
   f64.load
   f64.mul
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $3
   local.get $8
   f64.load
   f64.mul
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 154
   call $~lib/rt/itcms/__new
   local.tee $8
   i32.store offset=36
   local.get $8
   local.get $1
   i32.store
   local.get $8
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 153
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $3
   f64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $1
   local.get $8
   i32.store offset=8
   local.get $1
   local.get $8
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $4
   f64.convert_i64_s
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $1
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=16
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   local.get $0
   local.get $5
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<f64>#push (param $0 i32) (param $1 f64)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 3
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 3
  i32.shl
  i32.add
  local.get $1
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<f64>#reduce<f64> (param $0 i32) (param $1 i32) (param $2 f64) (result f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $4
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $3
   local.get $4
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.load offset=4
    local.get $3
    i32.const 3
    i32.shl
    i32.add
    f64.load
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    i32.const 4
    global.set $~argumentsLength
    local.get $2
    local.get $6
    local.get $3
    local.get $0
    local.get $1
    i32.load
    call_indirect (type $15)
    local.set $2
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/runtime/state/globalState/IGlobalCoherence#constructor (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 i32) (param $5 f64) (result i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.const 151
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $1
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $2
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $3
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $4
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $5
  f64.store offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<assembly/runtime/state/globalState/IGlobalCoherence>#shift (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 0
  i32.le_s
  if
   i32.const 27312
   i32.const 6144
   i32.const 330
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.load
  i32.store offset=4
  local.get $1
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  i32.const 2
  i32.shl
  local.tee $3
  memory.copy
  local.get $1
  local.get $3
  i32.add
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $2
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/runtime/state/globalState/GlobalState#calculateGlobalCoherence (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $8
  i32.store
  block $__inlined_func$assembly/runtime/state/primeState/IPrimeStateEngine#getActivePrimes@override$970
   local.get $8
   i32.const 8
   i32.sub
   i32.load
   i32.const 138
   i32.eq
   if
    local.get $8
    call $assembly/runtime/state/primeState/PrimeStateEngine#getActivePrimes
    local.set $8
    br $__inlined_func$assembly/runtime/state/primeState/IPrimeStateEngine#getActivePrimes@override$970
   end
   unreachable
  end
  local.get $2
  local.get $8
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 7
  i32.const 28528
  call $~lib/rt/__newArray
  local.tee $9
  i32.store offset=12
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.gt_s
   if
    local.get $1
    i32.const 1
    i32.add
    local.set $2
    loop $for-loop|1
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     call $~lib/array/Array<u32>#get:length
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.set $11
      local.get $8
      local.get $1
      call $~lib/array/Array<i32>#__get
      local.set $10
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=4
      local.get $11
      local.get $0
      local.get $10
      local.get $8
      local.get $2
      call $~lib/array/Array<i32>#__get
      call $assembly/runtime/state/globalState/GlobalState#calculatePairwiseCoherence
      local.tee $10
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store offset=4
      local.get $9
      local.get $10
      f64.load
      call $~lib/array/Array<f64>#push
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|1
     end
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28832
   i32.store offset=4
   local.get $9
   i32.const 28832
   f64.const 0
   call $~lib/array/Array<f64>#reduce<f64>
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $4
   local.get $9
   call $~lib/array/Array<u32>#get:length
   f64.convert_i32_s
   f64.div
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28864
   i32.store offset=4
   local.get $9
   i32.const 28864
   f64.const -inf
   call $~lib/array/Array<f64>#reduce<f64>
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28896
   i32.store offset=4
   local.get $9
   i32.const 28896
   f64.const inf
   call $~lib/array/Array<f64>#reduce<f64>
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   local.get $5
   local.get $6
   local.get $7
   local.get $9
   call $~lib/array/Array<u32>#get:length
   local.get $3
   f64.convert_i64_s
   call $assembly/runtime/state/globalState/IGlobalCoherence#constructor
   local.tee $1
   i32.store offset=20
  else
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 0
   f64.const 0
   f64.const 0
   i32.const 0
   local.get $3
   f64.convert_i64_s
   call $assembly/runtime/state/globalState/IGlobalCoherence#constructor
   local.tee $1
   i32.store offset=20
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $1
  call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.store
  local.get $2
  call $~lib/array/Array<u32>#get:length
  i32.const 1000
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=12
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<assembly/runtime/state/globalState/IGlobalCoherence>#shift
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/runtime/state/registerState/RegisterState#getRegister (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
  local.tee $0
  i32.store offset=12
  local.get $0
  if (result f64)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=8
  else
   f64.const 0
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/runtime/execution/controlFlow/ControlFlowManager#analyzeInstruction (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 80
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 80
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   call $~lib/string/String#toUpperCase
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3136
   i32.store offset=4
   local.get $4
   i32.const 3136
   call $~lib/string/String.__eq
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 3168
    i32.store offset=4
    local.get $4
    i32.const 3168
    call $~lib/string/String.__eq
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 27152
    i32.store offset=4
    local.get $4
    i32.const 27152
    call $~lib/string/String.__eq
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 27456
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    i32.const 27460
    local.get $4
    i32.store
    i32.const 27456
    local.get $4
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 27456
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 14928
    i32.store offset=16
    i32.const 27456
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    i32.const 1
    i32.const 1
    i32.const 1
    i32.const -1
    local.get $0
    call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 80
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 2944
    i32.store offset=4
    local.get $4
    i32.const 2944
    call $~lib/string/String.__eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 27488
     i32.store
     i32.const 1
     i32.const 1
     i32.const 1
     i32.const -1
     i32.const 27488
     call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 80
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 2976
     i32.store offset=4
     local.get $4
     i32.const 2976
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 27552
      i32.store
      i32.const 1
      i32.const 1
      i32.const 1
      i32.const -1
      i32.const 27552
      call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 80
      i32.add
      global.set $~lib/memory/__stack_pointer
     else
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 27200
      i32.store offset=4
      local.get $4
      i32.const 27200
      call $~lib/string/String.__eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 27616
       i32.store
       i32.const 2
       i32.const 1
       i32.const 1
       i32.const -1
       i32.const 27616
       call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 80
       i32.add
       global.set $~lib/memory/__stack_pointer
      else
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 27232
       i32.store offset=4
       local.get $4
       i32.const 27232
       call $~lib/string/String.__eq
       if (result i32)
        i32.const 1
       else
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 27264
        i32.store offset=4
        local.get $4
        i32.const 27264
        call $~lib/string/String.__eq
       end
       if
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store offset=20
        global.get $~lib/memory/__stack_pointer
        i32.const 27824
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store offset=16
        i32.const 27828
        local.get $4
        i32.store
        i32.const 27824
        local.get $4
        i32.const 1
        call $~lib/rt/itcms/__link
        global.get $~lib/memory/__stack_pointer
        i32.const 27824
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        i32.const 14928
        i32.store offset=16
        i32.const 27824
        call $~lib/staticarray/StaticArray<~lib/string/String>#join
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store
        i32.const 2
        i32.const 1
        i32.const 1
        i32.const -1
        local.get $0
        call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
        local.set $0
        global.get $~lib/memory/__stack_pointer
        i32.const 80
        i32.add
        global.set $~lib/memory/__stack_pointer
       else
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 3008
        i32.store offset=4
        local.get $4
        i32.const 3008
        call $~lib/string/String.__eq
        if (result i32)
         i32.const 1
        else
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store
         global.get $~lib/memory/__stack_pointer
         i32.const 3056
         i32.store offset=4
         local.get $4
         i32.const 3056
         call $~lib/string/String.__eq
        end
        if
         global.get $~lib/memory/__stack_pointer
         i32.const 27552
         i32.store
         i32.const 2
         i32.const 0
         i32.const 1
         i32.const -1
         i32.const 27552
         call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
         local.set $0
         global.get $~lib/memory/__stack_pointer
         i32.const 80
         i32.add
         global.set $~lib/memory/__stack_pointer
        else
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store
         global.get $~lib/memory/__stack_pointer
         i32.const 2832
         i32.store offset=4
         local.get $4
         i32.const 2832
         call $~lib/string/String.__eq
         if
          global.get $~lib/memory/__stack_pointer
          i32.const 27856
          i32.store
          i32.const 6
          i32.const 0
          i32.const 1
          i32.const -1
          i32.const 27856
          call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
          local.set $0
          global.get $~lib/memory/__stack_pointer
          i32.const 80
          i32.add
          global.set $~lib/memory/__stack_pointer
         else
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store
          global.get $~lib/memory/__stack_pointer
          i32.const 2896
          i32.store offset=4
          local.get $4
          i32.const 2896
          call $~lib/string/String.__eq
          if
           global.get $~lib/memory/__stack_pointer
           i32.const 27936
           i32.store
           i32.const 7
           i32.const 0
           i32.const 1
           i32.const -1
           i32.const 27936
           call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
           local.set $0
           global.get $~lib/memory/__stack_pointer
           i32.const 80
           i32.add
           global.set $~lib/memory/__stack_pointer
          else
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store
           global.get $~lib/memory/__stack_pointer
           i32.const 3104
           i32.store offset=4
           local.get $4
           i32.const 3104
           call $~lib/string/String.__eq
           if
            global.get $~lib/memory/__stack_pointer
            local.set $2
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store offset=16
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.load offset=4
            local.tee $1
            i32.store offset=4
            local.get $1
            i32.const 0
            call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
            local.set $1
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store
            local.get $2
            local.get $1
            call $assembly/runtime/argument/Argument#toString
            local.tee $1
            i32.store offset=24
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store offset=16
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.load
            local.tee $2
            i32.store
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store offset=4
            local.get $2
            local.get $1
            call $"~lib/map/Map<~lib/string/String,i32>#has"
            if (result i32)
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store offset=16
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.load
             local.tee $0
             i32.store
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=4
             local.get $0
             local.get $1
             call $"~lib/map/Map<~lib/string/String,i32>#get"
            else
             i32.const -1
            end
            local.set $0
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store offset=28
            global.get $~lib/memory/__stack_pointer
            i32.const 28192
            i32.const 28224
            local.get $0
            i32.const -1
            i32.ne
            select
            local.tee $2
            i32.store offset=32
            global.get $~lib/memory/__stack_pointer
            i32.const 28144
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store offset=16
            i32.const 28148
            local.get $1
            i32.store
            i32.const 28144
            local.get $1
            i32.const 1
            call $~lib/rt/itcms/__link
            global.get $~lib/memory/__stack_pointer
            i32.const 28144
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $2
            i32.store offset=16
            i32.const 28156
            local.get $2
            i32.store
            i32.const 28144
            local.get $2
            i32.const 1
            call $~lib/rt/itcms/__link
            global.get $~lib/memory/__stack_pointer
            i32.const 28144
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            i32.const 14928
            i32.store offset=16
            i32.const 28144
            call $~lib/staticarray/StaticArray<~lib/string/String>#join
            local.set $1
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store
            i32.const 3
            i32.const 0
            i32.const 1
            local.get $0
            local.get $1
            call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
            local.set $0
            global.get $~lib/memory/__stack_pointer
            i32.const 80
            i32.add
            global.set $~lib/memory/__stack_pointer
           else
            global.get $~lib/memory/__stack_pointer
            local.get $4
            i32.store
            global.get $~lib/memory/__stack_pointer
            i32.const 2864
            i32.store offset=4
            local.get $4
            i32.const 2864
            call $~lib/string/String.__eq
            if
             global.get $~lib/memory/__stack_pointer
             local.set $2
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=16
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.load offset=4
             local.tee $1
             i32.store offset=4
             local.get $1
             i32.const 0
             call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
             local.set $1
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store
             local.get $2
             local.get $1
             call $assembly/runtime/argument/Argument#toString
             local.tee $1
             i32.store offset=36
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store offset=16
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.load
             local.tee $2
             i32.store
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=4
             local.get $2
             local.get $1
             call $"~lib/map/Map<~lib/string/String,i32>#has"
             if (result i32)
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.store offset=16
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.load
              local.tee $0
              i32.store
              global.get $~lib/memory/__stack_pointer
              local.get $1
              i32.store offset=4
              local.get $0
              local.get $1
              call $"~lib/map/Map<~lib/string/String,i32>#get"
             else
              i32.const -1
             end
             local.set $0
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=40
             global.get $~lib/memory/__stack_pointer
             i32.const 28192
             i32.const 28224
             local.get $0
             i32.const -1
             i32.ne
             select
             local.tee $2
             i32.store offset=44
             global.get $~lib/memory/__stack_pointer
             i32.const 28256
             i32.store offset=4
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=16
             i32.const 28260
             local.get $1
             i32.store
             i32.const 28256
             local.get $1
             i32.const 1
             call $~lib/rt/itcms/__link
             global.get $~lib/memory/__stack_pointer
             i32.const 28256
             i32.store offset=4
             global.get $~lib/memory/__stack_pointer
             local.get $2
             i32.store offset=16
             i32.const 28268
             local.get $2
             i32.store
             i32.const 28256
             local.get $2
             i32.const 1
             call $~lib/rt/itcms/__link
             global.get $~lib/memory/__stack_pointer
             i32.const 28256
             i32.store offset=4
             global.get $~lib/memory/__stack_pointer
             i32.const 14928
             i32.store offset=16
             i32.const 28256
             call $~lib/staticarray/StaticArray<~lib/string/String>#join
             local.set $1
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store
             i32.const 4
             i32.const 0
             i32.const 1
             local.get $0
             local.get $1
             call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
             local.set $0
             global.get $~lib/memory/__stack_pointer
             i32.const 80
             i32.add
             global.set $~lib/memory/__stack_pointer
            else
             global.get $~lib/memory/__stack_pointer
             local.get $4
             i32.store
             global.get $~lib/memory/__stack_pointer
             i32.const 28304
             i32.store offset=4
             local.get $4
             i32.const 28304
             call $~lib/string/String.__eq
             if
              i32.const 3
              global.set $~argumentsLength
              global.get $~lib/memory/__stack_pointer
              i32.const 14928
              i32.store
              i32.const 5
              i32.const 0
              i32.const 1
              call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor@varargs
              local.set $0
              global.get $~lib/memory/__stack_pointer
              i32.const 80
              i32.add
              global.set $~lib/memory/__stack_pointer
             else
              global.get $~lib/memory/__stack_pointer
              local.get $4
              i32.store
              global.get $~lib/memory/__stack_pointer
              i32.const 2784
              i32.store offset=4
              local.get $4
              i32.const 2784
              call $~lib/string/String.__eq
              if
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store offset=48
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.load offset=4
               local.tee $0
               i32.store offset=16
               local.get $0
               i32.const 0
               call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
               local.set $0
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store offset=4
               local.get $0
               call $assembly/runtime/argument/Argument#toString
               local.set $0
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store
               local.get $0
               call $~lib/number/F64.parseFloat
               local.set $3
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.store offset=4
               global.get $~lib/memory/__stack_pointer
               local.get $2
               i32.load offset=40
               local.tee $0
               i32.store
               global.get $~lib/memory/__stack_pointer
               i32.const 8
               i32.sub
               global.set $~lib/memory/__stack_pointer
               global.get $~lib/memory/__stack_pointer
               i32.const 119640
               i32.lt_s
               br_if $folding-inner0
               global.get $~lib/memory/__stack_pointer
               i64.const 0
               i64.store
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store offset=4
               local.get $0
               call $assembly/runtime/state/globalState/GlobalState#calculateGlobalCoherence
               local.set $0
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store
               local.get $0
               f64.load offset=8
               local.set $5
               global.get $~lib/memory/__stack_pointer
               i32.const 8
               i32.add
               global.set $~lib/memory/__stack_pointer
               global.get $~lib/memory/__stack_pointer
               local.get $5
               call $~lib/number/F64#toString
               local.tee $0
               i32.store offset=52
               global.get $~lib/memory/__stack_pointer
               local.get $3
               call $~lib/number/F64#toString
               local.tee $1
               i32.store offset=56
               global.get $~lib/memory/__stack_pointer
               i32.const 29056
               i32.store offset=4
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store offset=16
               i32.const 29060
               local.get $0
               i32.store
               i32.const 29056
               local.get $0
               i32.const 1
               call $~lib/rt/itcms/__link
               global.get $~lib/memory/__stack_pointer
               i32.const 29056
               i32.store offset=4
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store offset=16
               i32.const 29068
               local.get $1
               i32.store
               i32.const 29056
               local.get $1
               i32.const 1
               call $~lib/rt/itcms/__link
               global.get $~lib/memory/__stack_pointer
               i32.const 29056
               i32.store offset=4
               global.get $~lib/memory/__stack_pointer
               i32.const 14928
               i32.store offset=16
               i32.const 29056
               call $~lib/staticarray/StaticArray<~lib/string/String>#join
               local.set $0
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store
               i32.const 0
               local.get $3
               local.get $5
               f64.le
               i32.const 1
               i32.const -1
               local.get $0
               call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
               local.set $0
               global.get $~lib/memory/__stack_pointer
               i32.const 80
               i32.add
               global.set $~lib/memory/__stack_pointer
              else
               global.get $~lib/memory/__stack_pointer
               local.get $4
               i32.store
               global.get $~lib/memory/__stack_pointer
               i32.const 2736
               i32.store offset=4
               local.get $4
               i32.const 2736
               call $~lib/string/String.__eq
               if
                global.get $~lib/memory/__stack_pointer
                local.set $0
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store offset=16
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.load offset=4
                local.tee $4
                i32.store offset=4
                local.get $4
                i32.const 0
                call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                local.set $4
                global.get $~lib/memory/__stack_pointer
                local.get $4
                i32.store
                local.get $0
                local.get $4
                call $assembly/runtime/argument/Argument#toString
                local.tee $0
                i32.store offset=60
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store offset=48
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.load offset=4
                local.tee $1
                i32.store offset=16
                local.get $1
                i32.const 1
                call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                local.set $1
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store offset=4
                local.get $1
                call $assembly/runtime/argument/Argument#toString
                local.set $1
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store
                local.get $1
                call $~lib/number/F64.parseFloat
                local.set $3
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.store offset=16
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.load offset=28
                local.tee $1
                i32.store
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store offset=4
                local.get $1
                local.get $0
                call $assembly/runtime/state/registerState/RegisterState#getRegister
                local.set $5
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store offset=64
                global.get $~lib/memory/__stack_pointer
                local.get $5
                call $~lib/number/F64#toString
                local.tee $1
                i32.store offset=68
                global.get $~lib/memory/__stack_pointer
                local.get $3
                call $~lib/number/F64#toString
                local.tee $2
                i32.store offset=72
                global.get $~lib/memory/__stack_pointer
                i32.const 29296
                i32.store offset=4
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store offset=16
                i32.const 29300
                local.get $0
                i32.store
                i32.const 29296
                local.get $0
                i32.const 1
                call $~lib/rt/itcms/__link
                global.get $~lib/memory/__stack_pointer
                i32.const 29296
                i32.store offset=4
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store offset=16
                i32.const 29308
                local.get $1
                i32.store
                i32.const 29296
                local.get $1
                i32.const 1
                call $~lib/rt/itcms/__link
                global.get $~lib/memory/__stack_pointer
                i32.const 29296
                i32.store offset=4
                global.get $~lib/memory/__stack_pointer
                local.get $2
                i32.store offset=16
                i32.const 29316
                local.get $2
                i32.store
                i32.const 29296
                local.get $2
                i32.const 1
                call $~lib/rt/itcms/__link
                global.get $~lib/memory/__stack_pointer
                i32.const 29296
                i32.store offset=4
                global.get $~lib/memory/__stack_pointer
                i32.const 14928
                i32.store offset=16
                i32.const 29296
                call $~lib/staticarray/StaticArray<~lib/string/String>#join
                local.set $0
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store
                i32.const 0
                local.get $3
                local.get $5
                f64.le
                i32.const 1
                i32.const -1
                local.get $0
                call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
                local.set $0
                global.get $~lib/memory/__stack_pointer
                i32.const 80
                i32.add
                global.set $~lib/memory/__stack_pointer
               else
                global.get $~lib/memory/__stack_pointer
                local.get $4
                i32.store
                global.get $~lib/memory/__stack_pointer
                i32.const 3888
                i32.store offset=4
                local.get $4
                i32.const 3888
                call $~lib/string/String.__eq
                if (result i32)
                 i32.const 3
                 global.set $~argumentsLength
                 global.get $~lib/memory/__stack_pointer
                 i32.const 14928
                 i32.store
                 i32.const 8
                 i32.const 0
                 i32.const 0
                 call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor@varargs
                else
                 global.get $~lib/memory/__stack_pointer
                 local.get $4
                 i32.store
                 global.get $~lib/memory/__stack_pointer
                 i32.const 6112
                 i32.store offset=4
                 local.get $4
                 i32.const 6112
                 call $~lib/string/String.__eq
                 if (result i32)
                  global.get $~lib/memory/__stack_pointer
                  local.set $0
                  global.get $~lib/memory/__stack_pointer
                  local.get $1
                  i32.store offset=48
                  global.get $~lib/memory/__stack_pointer
                  local.get $1
                  i32.load offset=4
                  local.tee $1
                  i32.store offset=16
                  local.get $1
                  i32.const 0
                  call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
                  local.set $1
                  global.get $~lib/memory/__stack_pointer
                  local.get $1
                  i32.store offset=4
                  local.get $0
                  local.get $1
                  call $assembly/runtime/argument/Argument#toString
                  local.tee $0
                  i32.store offset=76
                  global.get $~lib/memory/__stack_pointer
                  i32.const 29440
                  i32.store offset=4
                  global.get $~lib/memory/__stack_pointer
                  local.get $0
                  i32.store offset=16
                  i32.const 29444
                  local.get $0
                  i32.store
                  i32.const 29440
                  local.get $0
                  i32.const 1
                  call $~lib/rt/itcms/__link
                  global.get $~lib/memory/__stack_pointer
                  i32.const 29440
                  i32.store offset=4
                  global.get $~lib/memory/__stack_pointer
                  i32.const 14928
                  i32.store offset=16
                  i32.const 29440
                  call $~lib/staticarray/StaticArray<~lib/string/String>#join
                  local.set $0
                  global.get $~lib/memory/__stack_pointer
                  local.get $0
                  i32.store
                  i32.const 0
                  i32.const 1
                  i32.const 1
                  i32.const -1
                  local.get $0
                  call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor
                 else
                  i32.const 3
                  global.set $~argumentsLength
                  global.get $~lib/memory/__stack_pointer
                  i32.const 14928
                  i32.store
                  i32.const 0
                  i32.const 1
                  i32.const 1
                  call $assembly/runtime/execution/controlFlow/IControlFlowDecision#constructor@varargs
                 end
                end
                local.set $0
                global.get $~lib/memory/__stack_pointer
                i32.const 80
                i32.add
                global.set $~lib/memory/__stack_pointer
               end
              end
             end
            end
           end
          end
         end
        end
       end
      end
     end
    end
   end
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/RISAEngine#executeInstruction (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load offset=8
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load offset=8
  local.tee $3
  i32.store offset=4
  local.get $2
  local.get $3
  i32.load
  i32.const 1
  i32.add
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $4
  i32.store offset=8
  local.get $4
  call $~lib/string/String#toUpperCase
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $3
  local.get $2
  local.get $4
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
  local.tee $2
  i32.store offset=16
  block $folding-inner0
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=4
    local.tee $1
    i32.store offset=8
    local.get $2
    local.get $0
    local.get $1
    call $assembly/runtime/instructions/types/IInstructionHandler#execute@override
    local.set $0
    br $folding-inner0
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=12
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   local.get $3
   call $assembly/runtime/execution/controlFlow/ControlFlowManager#analyzeInstruction
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.load
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    i32.load8_u offset=4
    i32.eqz
    local.set $0
    br $folding-inner0
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $1
   i32.store
   local.get $1
   i32.const 1
   i32.store8 offset=2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   i32.store8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/RISAEngine#step (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.store
  local.get $1
  i32.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store
  block $folding-inner1
   block $folding-inner0
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.le_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    local.get $2
    i32.load
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
    local.tee $1
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $2
    i32.store offset=8
    local.get $2
    call $~lib/string/String#toUpperCase
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 3888
    i32.store offset=4
    local.get $2
    i32.const 3888
    call $~lib/string/String.__eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $0
     local.get $1
     call $assembly/runtime/RISAEngine#executeInstruction
     drop
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=12
    local.tee $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $2
    local.get $1
    local.get $3
    call $assembly/runtime/execution/controlFlow/ControlFlowManager#analyzeInstruction
    local.tee $2
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.load8_u offset=5
    i32.eqz
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $3
    i32.store
    local.get $3
    i32.load
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $0
    local.get $1
    call $assembly/runtime/RISAEngine#executeInstruction
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $1
    i32.store
    local.get $1
    i32.load
    local.get $3
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $4
     i32.const 0
     local.get $2
     i32.load8_u offset=4
     select
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=4
      local.tee $1
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=4
      local.tee $2
      i32.store offset=4
      local.get $1
      local.get $2
      i32.load
      i32.const 1
      i32.add
      i32.store
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $0
    i32.store
    local.get $0
    i32.load8_u
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   i32.store8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/runtime/RISAEngine#execute (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   local.tee $2
   i32.store
   local.get $2
   i32.const 1
   i32.store8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   local.tee $2
   i32.store
   local.get $2
   i32.const 0
   i32.store8 offset=1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   local.tee $2
   i32.store
   local.get $2
   i32.const 0
   i32.store8 offset=2
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load offset=4
    local.tee $2
    i32.store
    local.get $2
    i32.load8_u
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $2
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load offset=4
     local.tee $2
     i32.store
     local.get $2
     i32.load8_u offset=1
    else
     i32.const 1
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $2
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load offset=4
     local.tee $2
     i32.store
     local.get $2
     i32.load8_u offset=2
    end
    i32.eqz
    if
     block $while-break|0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store
      local.get $0
      call $assembly/runtime/RISAEngine#step
      i32.eqz
      br_if $while-break|0
      br $while-continue|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   local.tee $2
   i32.store offset=8
   local.get $2
   i32.load8_u offset=2
   i32.eqz
   local.set $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   f64.load offset=24
   f64.sub
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $0
   i32.store offset=8
   local.get $0
   i32.load
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 167
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $2
   i32.store8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $1
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=8
   local.get $0
   i32.const 14928
   i32.store offset=20
   local.get $0
   i32.const 14928
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=8
   local.get $0
   i32.const 14928
   i32.store offset=24
   local.get $0
   i32.const 14928
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1584
   i32.const 6144
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/utils/entropyRate (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const 0
   return
  end
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $1
    f64.convert_i32_s
    f64.const 1
    f64.add
    f64.const 3.141592653589793
    f64.mul
    local.get $0
    call $~lib/array/Array<u32>#get:length
    f64.convert_i32_s
    f64.div
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $2
    local.get $0
    local.get $1
    call $~lib/array/Array<f64>#__get
    local.get $3
    f64.sub
    f64.const 2
    call $~lib/math/NativeMath.pow
    f64.add
    local.set $2
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  call $~lib/array/Array<u32>#get:length
  f64.convert_i32_s
  f64.div
  f64.sqrt
  f64.neg
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<f64>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 7
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 134217727
  i32.gt_u
  if
   i32.const 1792
   i32.const 6144
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 3
  i32.shl
  local.tee $3
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<f64>#__set (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1584
    i32.const 6144
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 3
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $3
   i32.store offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  local.get $2
  f64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/utils/align (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/array/Array<u32>#get:length
  call $~lib/array/Array<f64>#constructor
  local.tee $1
  i32.store offset=4
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    local.get $2
    f64.const 0
    call $~lib/array/Array<f64>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/string/String#charAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 14928
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=4
  local.get $2
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  i32.store16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/utils/generateSymbol (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    local.get $1
    call $~lib/array/Array<u32>#__get
    local.get $2
    i32.const 31
    i32.mul
    i32.add
    i32.const 1000003
    i32.rem_u
    local.set $2
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  i32.const 14928
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=4
  loop $for-loop|1
   local.get $3
   i32.const 3
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 36944
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 36944
    i32.store offset=16
    i32.const 36944
    local.get $2
    i32.const 36940
    i32.load
    i32.const 1
    i32.shr_u
    i32.rem_u
    call $~lib/string/String#charAt
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    local.get $4
    local.get $1
    local.get $0
    call $~lib/string/String.__concat
    local.tee $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 36944
    i32.store
    local.get $2
    f64.convert_i32_u
    i32.const 36940
    i32.load
    i32.const 1
    i32.shr_u
    f64.convert_i32_s
    f64.div
    f64.floor
    i32.trunc_sat_f64_u
    local.set $2
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/string/String#indexOf (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  local.get $4
  local.get $2
  local.get $4
  i32.lt_s
  select
  local.set $2
  local.get $4
  local.get $3
  i32.sub
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $0
    local.get $2
    local.get $1
    local.get $3
    call $~lib/util/string/compareImpl
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $~lib/string/String#substring (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $1
  local.get $1
  local.get $3
  i32.gt_s
  select
  local.tee $3
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  local.get $1
  local.get $1
  local.get $2
  i32.gt_s
  select
  local.tee $2
  local.get $2
  local.get $3
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $4
  local.get $3
  local.get $2
  local.get $2
  local.get $3
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.tee $2
  local.get $4
  i32.sub
  local.tee $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 14928
   return
  end
  local.get $4
  i32.eqz
  local.get $2
  local.get $1
  i32.const 1
  i32.shl
  i32.eq
  i32.and
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store offset=4
  local.get $1
  local.get $0
  local.get $4
  i32.add
  local.get $3
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/utils/toFixed (param $0 f64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  f64.const 10
  local.get $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.ge_s
  select
  local.tee $4
  f64.convert_i32_s
  call $~lib/math/NativeMath.pow
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $5
  f64.mul
  local.tee $6
  f64.ceil
  local.tee $0
  local.get $0
  f64.const -1
  f64.add
  local.get $0
  f64.const -0.5
  f64.add
  local.get $6
  f64.le
  select
  local.get $5
  f64.div
  call $~lib/number/F64#toString
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 37344
  i32.store offset=8
  local.get $3
  i32.const 37344
  i32.const 0
  call $~lib/string/String#indexOf
  local.tee $1
  i32.const -1
  i32.eq
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 37344
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.const 37344
   call $~lib/string/String.__concat
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.sub
  else
   local.get $1
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.get $2
  i32.sub
  i32.const 1
  i32.sub
  local.tee $1
  local.get $4
  i32.lt_s
  if
   loop $for-loop|0
    local.get $1
    local.get $4
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 15216
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 15216
     call $~lib/string/String.__concat
     local.tee $3
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
  else
   local.get $1
   local.get $4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.const 0
    local.get $2
    local.get $4
    i32.add
    i32.const 1
    i32.add
    call $~lib/string/String#substring
    local.tee $3
    i32.store
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/tests/utils.test/runAllUtilsTests
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 29696
   i32.store
   i32.const 29696
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 29776
   call $~lib/rt/__newArray
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $assembly/utils/entropyRate
   f64.const 0
   f64.ne
   if
    i32.const 35968
    i32.const 36080
    i32.const 8
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 36160
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $assembly/utils/entropyRate
   f64.const 0
   f64.eq
   if
    i32.const 36208
    i32.const 36080
    i32.const 11
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 36336
   i32.store
   i32.const 36336
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 36416
   call $~lib/rt/__newArray
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   call $assembly/utils/align
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $~lib/array/Array<u32>#get:length
   if
    i32.const 36448
    i32.const 36080
    i32.const 16
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 36576
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/utils/align
   local.tee $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 36624
    i32.const 36080
    i32.const 20
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     local.get $0
     call $~lib/array/Array<f64>#__get
     f64.const 0
     f64.ne
     if
      i32.const 36736
      i32.const 36080
      i32.const 22
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 36848
   i32.store
   i32.const 36848
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 36912
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/utils/generateSymbol
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/utils/generateSymbol
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $1
   local.get $0
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 37024
    i32.const 36080
    i32.const 30
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 37120
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/utils/generateSymbol
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 3
   i32.ne
   if
    i32.const 37152
    i32.const 36080
    i32.const 34
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 37264
   i32.store
   i32.const 37264
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   f64.const 3.14159
   i32.const 2
   call $assembly/utils/toFixed
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 37376
   i32.store offset=4
   local.get $0
   i32.const 37376
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 37408
    i32.const 36080
    i32.const 38
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   f64.const 3.14159
   i32.const 3
   call $assembly/utils/toFixed
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 37520
   i32.store offset=4
   local.get $0
   i32.const 37520
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 37552
    i32.const 36080
    i32.const 39
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   f64.const 1.5
   i32.const 4
   call $assembly/utils/toFixed
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 37664
   i32.store offset=4
   local.get $0
   i32.const 37664
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 37696
    i32.const 36080
    i32.const 40
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   f64.const 5
   i32.const 2
   call $assembly/utils/toFixed
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 37792
   i32.store offset=4
   local.get $0
   i32.const 37792
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 37824
    i32.const 36080
    i32.const 41
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 37936
   i32.store
   i32.const 37936
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 38000
   i32.store
   i32.const 38000
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<i32>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 81
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 1792
   i32.const 6144
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<i32>#includes (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   block $__inlined_func$~lib/array/Array<i32>#indexOf$3632
    local.get $0
    i32.load offset=12
    local.tee $3
    i32.eqz
    local.get $3
    i32.const 0
    i32.le_s
    i32.or
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const -1
     local.set $2
     br $__inlined_func$~lib/array/Array<i32>#indexOf$3632
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=4
    local.set $0
    loop $while-continue|0
     local.get $2
     local.get $3
     i32.lt_s
     if
      local.get $0
      local.get $2
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.get $1
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$~lib/array/Array<i32>#indexOf$3632
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $while-continue|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const -1
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   i32.const 0
   i32.ge_s
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/arrays/safeGet<i32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.ge_s
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.gt_s
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   call $~lib/array/Array<i32>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/set/Set<i32>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 172
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 32
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/set/Set<i32>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/set/Set<i32>#has (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $~lib/set/Set<i32>#find
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/set/Set<i32>#rehash (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  i32.add
  local.tee $2
  i32.const 2
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $5
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 3
  i32.shl
  i32.const 3
  i32.div_s
  local.tee $6
  i32.const 3
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $0
  i32.load offset=8
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $4
  local.get $0
  i32.load offset=16
  i32.const 3
  i32.shl
  i32.add
  local.set $7
  local.get $3
  local.set $2
  loop $while-continue|0
   local.get $4
   local.get $7
   i32.ne
   if
    local.get $4
    i32.load offset=4
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $2
     local.get $4
     i32.load
     local.tee $8
     i32.store
     local.get $2
     local.get $5
     local.get $1
     local.get $8
     i32.const -1028477379
     i32.mul
     i32.const 374761397
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $8
     local.get $8
     i32.const 15
     i32.shr_u
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $8
     local.get $8
     i32.const 13
     i32.shr_u
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $8
     local.get $8
     i32.const 16
     i32.shr_u
     i32.xor
     i32.and
     i32.const 2
     i32.shl
     i32.add
     local.tee $8
     i32.load
     i32.store offset=4
     local.get $8
     local.get $2
     i32.store
     local.get $2
     i32.const 8
     i32.add
     local.set $2
    end
    local.get $4
    i32.const 8
    i32.add
    local.set $4
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=12
  local.get $0
  local.get $5
  i32.store
  local.get $0
  local.get $5
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $0
  local.get $3
  i32.store offset=8
  local.get $0
  local.get $3
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $0
  local.get $6
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $0
  local.get $0
  i32.load offset=20
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/set/Set<i32>#add (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $2
  i32.const 15
  i32.shr_u
  local.get $2
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $2
  i32.const 13
  i32.shr_u
  local.get $2
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $2
  i32.const 16
  i32.shr_u
  local.get $2
  i32.xor
  local.tee $3
  call $~lib/set/Set<i32>#find
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=16
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $2
   local.get $0
   i32.load offset=12
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.load offset=20
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $2
    local.get $0
    i32.load offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=4
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/set/Set<i32>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=8
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   i32.load offset=16
   local.tee $4
   i32.const 1
   i32.add
   i32.store offset=16
   local.get $2
   local.get $4
   i32.const 3
   i32.shl
   i32.add
   local.tee $2
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   i32.load offset=20
   i32.const 1
   i32.add
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $2
   local.get $1
   local.get $3
   local.get $0
   i32.load offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $0
   i32.load
   i32.store offset=4
   local.get $0
   local.get $2
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/core/arrays/arrayEquals<i32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/array/Array<u32>#get:length
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  block $folding-inner0
   local.get $1
   call $~lib/array/Array<u32>#get:length
   local.get $3
   i32.ne
   br_if $folding-inner0
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.get $3
     i32.ne
     br_if $folding-inner0
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"assembly/core/arrays/zip<i32,~lib/string/String>" (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $3
   local.get $1
   call $~lib/array/Array<u32>#get:length
   local.tee $4
   local.get $3
   local.get $4
   i32.lt_s
   select
   local.set $3
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 176
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store
   local.get $6
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $6
   local.get $4
   i32.store
   local.get $6
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     local.get $0
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=16
     local.get $1
     local.get $2
     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.const 175
     call $~lib/rt/itcms/__new
     local.tee $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     local.get $5
     local.get $7
     i32.store offset=4
     local.get $5
     local.get $7
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=8
     local.get $6
     local.get $5
     call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 177
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/core-arrays.test/testChunk
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 2
   i32.const 81
   i32.const 41840
   call $~lib/rt/__newArray
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $~lib/array/Array<~lib/array/Array<i32>>#constructor
   local.tee $4
   i32.store
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     call $~lib/array/Array<i32>#constructor
     local.tee $5
     i32.store offset=8
     i32.const 0
     local.set $0
     loop $for-loop|1
      local.get $0
      i32.const 3
      i32.lt_s
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=4
       local.get $3
       call $~lib/array/Array<u32>#get:length
       local.get $0
       local.get $1
       i32.add
       i32.gt_s
      else
       i32.const 0
      end
      if
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=12
       local.get $5
       local.get $3
       local.get $0
       local.get $1
       i32.add
       call $~lib/array/Array<i32>#__get
       call $~lib/array/Array<u32>#push
       local.get $0
       i32.const 1
       i32.add
       local.set $0
       br $for-loop|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=12
     local.get $4
     local.get $5
     call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
     local.get $1
     i32.const 3
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 42048
    i32.const 38464
    i32.const 181
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   i32.const 0
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 42176
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 42208
    i32.const 38464
    i32.const 182
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   i32.const 2
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 1
   i32.const 2
   i32.const 81
   i32.const 42304
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 42336
    i32.const 38464
    i32.const 183
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/arrays/findIndex<i32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    local.get $2
    call $~lib/array/Array<i32>#__get
    local.set $3
    i32.const 2
    global.set $~argumentsLength
    local.get $3
    local.get $2
    local.get $1
    i32.load
    call_indirect (type $1)
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $assembly/core/arrays/range (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $2
  i32.eqz
  if
   i32.const 43632
   i32.const 41968
   i32.const 192
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/array/Array<i32>#constructor
  local.tee $3
  i32.store
  local.get $2
  i32.const 0
  i32.gt_s
  if
   loop $for-loop|0
    local.get $0
    local.get $1
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $3
     local.get $0
     call $~lib/array/Array<u32>#push
     local.get $0
     local.get $2
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
  else
   loop $for-loop|1
    local.get $0
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $3
     local.get $0
     call $~lib/array/Array<u32>#push
     local.get $0
     local.get $2
     i32.add
     local.set $0
     br $for-loop|1
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/tests/core-arrays.test/Groupable#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 179
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $"assembly/core/arrays/groupBy<assembly/tests/core-arrays.test/Groupable,~lib/string/String>" (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 181
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $1
   local.get $4
   i32.store
   local.get $1
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $1
   local.get $4
   i32.store offset=8
   local.get $1
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $1
   i32.store
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $2
     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     i32.const 1
     global.set $~argumentsLength
     local.get $3
     local.get $4
     i32.const 44096
     i32.load
     call_indirect (type $0)
     local.tee $4
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $1
     local.get $4
     call $"~lib/map/Map<~lib/string/String,i32>#has"
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 119640
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store offset=8
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.const 180
      call $~lib/rt/itcms/__new
      local.tee $3
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.store
      local.get $3
      i32.const 0
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 32
      i32.const 1
      call $~lib/rt/itcms/__new
      local.tee $5
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=12
      local.get $3
      local.get $5
      i32.store
      local.get $3
      local.get $5
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      local.get $5
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      i32.const 32
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=16
      local.get $1
      local.get $4
      local.get $3
      call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
     end
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=20
     local.get $1
     local.get $4
     call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     local.get $0
     local.get $2
     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $3
     local.get $4
     call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/core-arrays.test/testShuffle
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 81
   i32.const 44432
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 1
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/array/Array<i32>#slice@varargs$49 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     i32.load offset=12
     local.tee $1
     i32.const 0
     local.get $1
     i32.const 0
     i32.le_s
     select
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $1
     local.get $2
     i32.sub
     local.tee $1
     i32.const 0
     local.get $1
     i32.const 0
     i32.gt_s
     select
     local.tee $1
     i32.const 2
     i32.const 81
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     local.get $3
     i32.load offset=4
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $4
     local.get $0
     i32.load offset=4
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     i32.const 2
     i32.shl
     memory.copy
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     br $__inlined_func$~lib/array/Array<i32>#slice@varargs$49
    end
    br $folding-inner1
   end
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 1
   i32.sub
   local.set $1
   loop $for-loop|0
    local.get $1
    i32.const 0
    i32.gt_s
    if
     call $~lib/math/NativeMath.random
     local.get $1
     i32.const 1
     i32.add
     f64.convert_i32_s
     f64.mul
     f64.floor
     i32.trunc_sat_f64_s
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     local.get $1
     call $~lib/array/Array<i32>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $1
     local.get $0
     local.get $3
     call $~lib/array/Array<i32>#__get
     call $~lib/array/Array<u32>#__set
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     local.get $3
     local.get $4
     call $~lib/array/Array<u32>#__set
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.ne
   if
    i32.const 44480
    i32.const 38464
    i32.const 228
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $0
   local.get $2
   call $assembly/core/arrays/arrayEquals<i32>
   if
    i32.const 44608
    i32.const 38464
    i32.const 230
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/arrays/last<i32> (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 1
   i32.sub
   call $~lib/array/Array<i32>#__get
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/core/arrays/first<i32> (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/tests/core-arrays.test/testSlidingWindow
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 81
   i32.const 46032
   call $~lib/rt/__newArray
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.lt_s
   if
    i32.const 46080
    i32.const 41968
    i32.const 284
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   call $~lib/array/Array<~lib/array/Array<i32>>#constructor
   local.tee $4
   i32.store offset=4
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $1
    local.get $3
    call $~lib/array/Array<u32>#get:length
    i32.const 3
    i32.sub
    i32.le_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     call $~lib/array/Array<i32>#constructor
     local.tee $5
     i32.store offset=8
     i32.const 0
     local.set $0
     loop $for-loop|1
      local.get $0
      i32.const 3
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=12
       local.get $5
       local.get $3
       local.get $0
       local.get $1
       i32.add
       call $~lib/array/Array<i32>#__get
       call $~lib/array/Array<u32>#push
       local.get $0
       i32.const 1
       i32.add
       local.set $0
       br $for-loop|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=12
     local.get $4
     local.get $5
     call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 46144
    i32.const 38464
    i32.const 258
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   i32.const 0
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 46288
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 46320
    i32.const 38464
    i32.const 259
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   i32.const 2
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 46416
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 46448
    i32.const 38464
    i32.const 260
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/arrays/reverse<i32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  loop $while-continue|0
   local.get $1
   local.get $2
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    local.get $1
    call $~lib/array/Array<i32>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $1
    local.get $0
    local.get $2
    call $~lib/array/Array<i32>#__get
    call $~lib/array/Array<u32>#__set
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    local.get $2
    local.get $3
    call $~lib/array/Array<u32>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/core/arrays/rotate<i32> (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/array/Array<u32>#get:length
  local.tee $2
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $1
  local.get $2
  i32.rem_s
  local.tee $1
  i32.const 0
  i32.lt_s
  if
   local.get $1
   local.get $2
   i32.add
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  call $assembly/core/arrays/reverse<i32>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  local.get $1
  i32.const 1
  i32.sub
  call $assembly/core/arrays/reverse<i32>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  call $assembly/core/arrays/reverse<i32>
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/core/arrays/binarySearch<i32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 1
  i32.sub
  local.set $3
  loop $while-continue|0
   local.get $3
   local.get $4
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    local.get $4
    local.get $3
    local.get $4
    i32.sub
    i32.const 1
    i32.shr_s
    i32.add
    local.tee $5
    call $~lib/array/Array<i32>#__get
    local.set $6
    i32.const 2
    global.set $~argumentsLength
    local.get $6
    local.get $1
    local.get $2
    i32.load
    call_indirect (type $1)
    local.tee $6
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $6
    i32.const 0
    i32.lt_s
    if
     local.get $5
     i32.const 1
     i32.add
     local.set $4
    else
     local.get $5
     i32.const 1
     i32.sub
     local.set $3
    end
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $assembly/tests/core-arrays.test/testIntersection
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 81
   i32.const 47904
   call $~lib/rt/__newArray
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 81
   i32.const 47952
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $~lib/set/Set<i32>#constructor
   local.tee $4
   i32.store
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $4
     local.get $3
     local.get $0
     call $~lib/array/Array<i32>#__get
     call $~lib/set/Set<i32>#add
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   local.tee $3
   i32.store offset=12
   i32.const 0
   local.set $0
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $4
     local.get $1
     local.get $0
     call $~lib/array/Array<i32>#__get
     call $~lib/set/Set<i32>#has
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=8
      local.get $3
      local.get $1
      local.get $0
      call $~lib/array/Array<i32>#__get
      call $~lib/array/Array<u32>#push
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=8
      local.get $1
      local.get $0
      call $~lib/array/Array<i32>#__get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 119640
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $4
      local.get $5
      local.get $5
      i32.const -1028477379
      i32.mul
      i32.const 374761397
      i32.add
      i32.const 17
      i32.rotl
      i32.const 668265263
      i32.mul
      local.tee $5
      i32.const 15
      i32.shr_u
      local.get $5
      i32.xor
      i32.const -2048144777
      i32.mul
      local.tee $5
      i32.const 13
      i32.shr_u
      local.get $5
      i32.xor
      i32.const -1028477379
      i32.mul
      local.tee $5
      i32.const 16
      i32.shr_u
      local.get $5
      i32.xor
      call $~lib/set/Set<i32>#find
      local.tee $5
      if
       local.get $5
       local.get $5
       i32.load offset=4
       i32.const 1
       i32.or
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=4
       local.get $4
       local.get $4
       i32.load offset=20
       i32.const 1
       i32.sub
       i32.store offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       local.get $4
       i32.load offset=4
       i32.const 1
       i32.shr_u
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       local.get $5
       i32.const 1
       i32.add
       i32.const 4
       local.get $4
       i32.load offset=20
       local.tee $6
       local.get $6
       i32.const 4
       i32.lt_u
       select
       i32.ge_u
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        local.get $4
        i32.load offset=20
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        local.get $6
        local.get $4
        i32.load offset=12
        i32.const 3
        i32.mul
        i32.const 4
        i32.div_s
        i32.lt_s
       else
        i32.const 0
       end
       if
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        local.get $4
        local.get $5
        call $~lib/set/Set<i32>#rehash
       end
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   i32.const 2
   i32.const 2
   i32.const 81
   i32.const 48000
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $3
   local.get $0
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 48032
    i32.const 38464
    i32.const 289
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/core-arrays.test/testUnion
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 81
   i32.const 48608
   call $~lib/rt/__newArray
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 81
   i32.const 48656
   call $~lib/rt/__newArray
   local.tee $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $~lib/set/Set<i32>#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   local.tee $2
   i32.store offset=4
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $5
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=12
     local.get $1
     local.get $5
     local.get $3
     call $~lib/array/Array<i32>#__get
     call $~lib/set/Set<i32>#has
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=12
      local.get $1
      local.get $5
      local.get $3
      call $~lib/array/Array<i32>#__get
      call $~lib/set/Set<i32>#add
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=12
      local.get $2
      local.get $5
      local.get $3
      call $~lib/array/Array<i32>#__get
      call $~lib/array/Array<u32>#push
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=8
    local.get $6
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=12
     local.get $1
     local.get $6
     local.get $0
     call $~lib/array/Array<i32>#__get
     call $~lib/set/Set<i32>#has
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=12
      local.get $1
      local.get $6
      local.get $0
      call $~lib/array/Array<i32>#__get
      call $~lib/set/Set<i32>#add
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=12
      local.get $2
      local.get $6
      local.get $0
      call $~lib/array/Array<i32>#__get
      call $~lib/array/Array<u32>#push
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   i32.const 6
   i32.const 2
   i32.const 81
   i32.const 48704
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $2
   local.get $0
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 48752
    i32.const 38464
    i32.const 303
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/core-arrays.test/runAllArrayTests
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 38240
   i32.store
   i32.const 38240
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   call $~lib/array/Array<i32>#constructor
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $~lib/array/Array<u32>#get:length
   i32.const 5
   i32.ne
   if
    i32.const 38320
    i32.const 38464
    i32.const 38
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $~lib/array/Array<u32>#get:length
   if
    i32.const 38560
    i32.const 38464
    i32.const 41
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 38704
   i32.store
   i32.const 38704
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   call $~lib/array/Array<i32>#constructor
   local.tee $5
   i32.store
   loop $for-loop|0
    local.get $0
    i32.const 3
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     local.get $0
     i32.const 7
     call $~lib/array/Array<u32>#__set
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 38784
    i32.const 38464
    i32.const 46
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $0
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     local.get $0
     call $~lib/array/Array<i32>#__get
     i32.const 7
     i32.ne
     if
      i32.const 38928
      i32.const 38464
      i32.const 48
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 39072
   i32.store
   i32.const 39072
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<~lib/string/String,i32>#constructor"
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 39168
   i32.store offset=8
   local.get $5
   i32.const 39168
   i32.const 1
   call $"~lib/map/Map<~lib/string/String,i32>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 39200
   i32.store offset=8
   local.get $5
   i32.const 39200
   i32.const 2
   call $"~lib/map/Map<~lib/string/String,i32>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   block $"__inlined_func$assembly/core/arrays/arrayFromMapValues<~lib/string/String,i32>$53" (result i32)
    i32.const 0
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     call $~lib/array/Array<i32>#constructor
     local.tee $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     local.get $5
     i32.load offset=8
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.load offset=16
     local.tee $9
     call $~lib/array/Array<i32>#constructor
     local.tee $5
     i32.store offset=4
     loop $for-loop|01
      local.get $3
      local.get $9
      i32.lt_s
      if
       local.get $8
       local.get $3
       i32.const 12
       i32.mul
       i32.add
       local.tee $6
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store
        local.get $5
        local.get $0
        local.get $6
        i32.load offset=4
        call $~lib/array/Array<u32>#__set
        local.get $0
        i32.const 1
        i32.add
        local.set $0
       end
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|01
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     local.get $5
     local.get $0
     call $~lib/array/Array<~lib/string/String>#set:length
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     local.get $5
     i32.store offset=8
     i32.const 0
     local.set $0
     loop $for-loop|002
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      local.get $5
      call $~lib/array/Array<u32>#get:length
      local.get $0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=12
       local.get $4
       local.get $5
       local.get $0
       call $~lib/array/Array<i32>#__get
       call $~lib/array/Array<u32>#push
       local.get $0
       i32.const 1
       i32.add
       local.set $0
       br $for-loop|002
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     br $"__inlined_func$assembly/core/arrays/arrayFromMapValues<~lib/string/String,i32>$53"
    end
    br $folding-inner1
   end
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 39232
    i32.const 38464
    i32.const 57
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#includes
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.const 2
    call $~lib/array/Array<i32>#includes
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 39408
    i32.const 38464
    i32.const 58
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 39536
   i32.store
   i32.const 39536
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 39632
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   i32.const 0
   call $assembly/core/arrays/safeGet<i32>
   i32.const 20
   i32.ne
   if
    i32.const 39664
    i32.const 38464
    i32.const 63
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 5
   i32.const 99
   call $assembly/core/arrays/safeGet<i32>
   i32.const 99
   i32.ne
   if
    i32.const 39792
    i32.const 38464
    i32.const 64
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 39952
   i32.store
   i32.const 39952
   call $~lib/console/console.log
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 6
   i32.const 2
   i32.const 81
   i32.const 40016
   call $~lib/rt/__newArray
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   loop $for-loop|02
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     local.get $3
     local.get $0
     call $~lib/array/Array<i32>#__get
     i32.const 2
     i32.ne
     if
      local.get $0
      local.get $1
      i32.ne
      if
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=4
       local.get $3
       local.get $1
       local.get $3
       local.get $0
       call $~lib/array/Array<i32>#__get
       call $~lib/array/Array<u32>#__set
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|02
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $1
   call $~lib/array/Array<~lib/string/String>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 40064
    i32.const 38464
    i32.const 70
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 1
   i32.eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    i32.const 1
    call $~lib/array/Array<i32>#__get
    i32.const 3
    i32.eq
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    i32.const 2
    call $~lib/array/Array<i32>#__get
    i32.const 4
    i32.eq
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 40208
    i32.const 38464
    i32.const 71
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 40336
   i32.store
   i32.const 40336
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 6
   i32.const 2
   i32.const 81
   i32.const 40416
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $~lib/set/Set<i32>#constructor
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   local.tee $4
   i32.store offset=4
   loop $for-loop|03
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    local.get $0
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $3
     local.get $0
     local.get $2
     call $~lib/array/Array<i32>#__get
     call $~lib/set/Set<i32>#has
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=12
      local.get $3
      local.get $0
      local.get $2
      call $~lib/array/Array<i32>#__get
      call $~lib/set/Set<i32>#add
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=12
      local.get $4
      local.get $0
      local.get $2
      call $~lib/array/Array<i32>#__get
      call $~lib/array/Array<u32>#push
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|03
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $~lib/array/Array<u32>#get:length
   i32.const 4
   i32.ne
   if
    i32.const 40464
    i32.const 38464
    i32.const 77
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   i32.const 4
   i32.const 2
   i32.const 81
   i32.const 40592
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $4
   local.get $0
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 40640
    i32.const 38464
    i32.const 78
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 40752
   i32.store
   i32.const 40752
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 6
   i32.const 2
   i32.const 81
   i32.const 40832
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 40880
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$assembly/core/arrays/partition<i32>$56 (result i32)
    i32.const 0
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner03
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner03
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     call $~lib/array/Array<i32>#constructor
     local.tee $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     call $~lib/array/Array<i32>#constructor
     local.tee $2
     i32.store offset=4
     loop $for-loop|04
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      local.get $0
      call $~lib/array/Array<u32>#get:length
      local.get $3
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       local.get $0
       local.get $3
       call $~lib/array/Array<i32>#__get
       local.set $4
       i32.const 1
       global.set $~argumentsLength
       local.get $4
       i32.const 40880
       i32.load
       call_indirect (type $0)
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=8
        local.get $1
       else
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store offset=8
        local.get $2
       end
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=12
       local.get $4
       local.get $0
       local.get $3
       call $~lib/array/Array<i32>#__get
       call $~lib/array/Array<u32>#push
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|04
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner03
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.const 173
     call $~lib/rt/itcms/__new
     local.tee $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $0
     local.get $1
     i32.store
     local.get $0
     local.get $1
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $0
     local.get $2
     i32.store offset=4
     local.get $0
     local.get $2
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$assembly/core/arrays/partition<i32>$56
    end
    br $folding-inner1
   end
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 40912
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 40944
    i32.const 38464
    i32.const 84
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store offset=4
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 41072
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 41104
    i32.const 38464
    i32.const 85
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 41232
   i32.store
   i32.const 41232
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 41312
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 91
   i32.const 41376
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   call $"assembly/core/arrays/zip<i32,~lib/string/String>"
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 41408
    i32.const 38464
    i32.const 92
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   i32.const 0
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.load
   i32.const 1
   i32.eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=24
    local.get $0
    i32.const 0
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=4
    local.tee $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 39168
    i32.store offset=12
    local.get $1
    i32.const 39168
    call $~lib/string/String.__eq
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 41552
    i32.const 38464
    i32.const 93
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   i32.const 2
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.load
   i32.const 3
   i32.eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=24
    local.get $0
    i32.const 2
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 41344
    i32.store offset=12
    local.get $0
    i32.const 41344
    call $~lib/string/String.__eq
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 41664
    i32.const 38464
    i32.const 94
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 41776
   i32.store
   i32.const 41776
   call $~lib/console/console.log
   call $assembly/tests/core-arrays.test/testChunk
   global.get $~lib/memory/__stack_pointer
   i32.const 42432
   i32.store
   i32.const 42432
   call $~lib/console/console.log
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 177
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 2
   i32.const 2
   i32.const 81
   i32.const 42496
   call $~lib/rt/__newArray
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $1
   i32.const 1
   i32.const 2
   i32.const 2
   i32.const 81
   i32.const 42528
   call $~lib/rt/__newArray
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $1
   i32.const 2
   i32.const 1
   i32.const 2
   i32.const 81
   i32.const 42560
   call $~lib/rt/__newArray
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $0
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   local.tee $4
   i32.store
   loop $for-loop|05
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     local.get $3
     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
     local.tee $5
     i32.store offset=8
     i32.const 0
     local.set $2
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      local.get $5
      call $~lib/array/Array<u32>#get:length
      local.get $2
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=12
       local.get $4
       local.get $5
       local.get $2
       call $~lib/array/Array<i32>#__get
       call $~lib/array/Array<u32>#push
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|05
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   i32.const 5
   i32.const 2
   i32.const 81
   i32.const 42592
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $4
   local.get $0
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 42640
    i32.const 38464
    i32.const 189
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 42752
   i32.store
   i32.const 42752
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 81
   i32.const 42816
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 42864
   i32.store offset=8
   local.get $0
   i32.const 42864
   call $assembly/core/arrays/findIndex<i32>
   i32.const 2
   i32.ne
   if
    i32.const 42896
    i32.const 38464
    i32.const 195
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 43072
   i32.store offset=8
   local.get $0
   i32.const 43072
   call $assembly/core/arrays/findIndex<i32>
   i32.const -1
   i32.ne
   if
    i32.const 43104
    i32.const 38464
    i32.const 197
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 43232
   i32.store
   i32.const 43232
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 6
   i32.const 2
   i32.const 81
   i32.const 43312
   call $~lib/rt/__newArray
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 43360
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   i32.const 0
   local.set $1
   i32.const 0
   local.set $0
   loop $for-loop|013
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     local.get $0
     call $~lib/array/Array<i32>#__get
     local.set $3
     i32.const 1
     global.set $~argumentsLength
     local.get $1
     i32.const 1
     i32.add
     local.get $1
     local.get $3
     i32.const 43360
     i32.load
     call_indirect (type $0)
     select
     local.set $1
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|013
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   i32.const 3
   i32.ne
   if
    i32.const 43392
    i32.const 38464
    i32.const 203
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 43568
   i32.store
   i32.const 43568
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 5
   i32.const 1
   call $assembly/core/arrays/range
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 4
   i32.const 2
   i32.const 81
   i32.const 43696
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 43744
    i32.const 38464
    i32.const 208
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 1
   i32.const -1
   call $assembly/core/arrays/range
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 4
   i32.const 2
   i32.const 81
   i32.const 43872
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 43920
    i32.const 38464
    i32.const 210
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 44032
   i32.store
   i32.const 44032
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 180
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 39168
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.const 39168
   i32.const 1
   call $assembly/tests/core-arrays.test/Groupable#constructor
   call $~lib/array/Array<~lib/string/String>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 39200
   i32.store offset=8
   local.get $1
   i32.const 1
   i32.const 39200
   i32.const 2
   call $assembly/tests/core-arrays.test/Groupable#constructor
   call $~lib/array/Array<~lib/string/String>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 39168
   i32.store offset=8
   local.get $1
   i32.const 2
   i32.const 39168
   i32.const 3
   call $assembly/tests/core-arrays.test/Groupable#constructor
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $0
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 44096
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $"assembly/core/arrays/groupBy<assembly/tests/core-arrays.test/Groupable,~lib/string/String>"
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 39168
   i32.store offset=16
   local.get $0
   i32.const 39168
   call $"~lib/map/Map<~lib/string/String,i32>#has"
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 39168
    i32.store offset=24
    local.get $0
    i32.const 39168
    call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    local.get $1
    call $~lib/array/Array<u32>#get:length
    i32.const 2
    i32.eq
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 44128
    i32.const 38464
    i32.const 220
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 39200
   i32.store offset=16
   local.get $0
   i32.const 39200
   call $"~lib/map/Map<~lib/string/String,i32>#has"
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 39200
    i32.store offset=24
    local.get $0
    i32.const 39200
    call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    local.get $0
    call $~lib/array/Array<u32>#get:length
    i32.const 1
    i32.eq
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 44240
    i32.const 38464
    i32.const 221
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 44368
   i32.store
   i32.const 44368
   call $~lib/console/console.log
   call $assembly/tests/core-arrays.test/testShuffle
   global.get $~lib/memory/__stack_pointer
   i32.const 44736
   i32.store
   i32.const 44736
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 44800
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   call $assembly/core/arrays/last<i32>
   i32.const 30
   i32.ne
   if
    i32.const 44832
    i32.const 38464
    i32.const 235
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 81
   i32.const 44960
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 99
   call $assembly/core/arrays/last<i32>
   i32.const 99
   i32.ne
   if
    i32.const 44992
    i32.const 38464
    i32.const 237
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 45136
   i32.store
   i32.const 45136
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 45200
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   call $assembly/core/arrays/first<i32>
   i32.const 10
   i32.ne
   if
    i32.const 45232
    i32.const 38464
    i32.const 242
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 81
   i32.const 45360
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 99
   call $assembly/core/arrays/first<i32>
   i32.const 99
   i32.ne
   if
    i32.const 45392
    i32.const 38464
    i32.const 244
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 45536
   i32.store
   i32.const 45536
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 45600
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 45632
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 81
   i32.const 45664
   call $~lib/rt/__newArray
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   local.get $0
   local.get $1
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 45696
    i32.const 38464
    i32.const 251
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $0
   local.get $2
   call $assembly/core/arrays/arrayEquals<i32>
   if
    i32.const 45824
    i32.const 38464
    i32.const 252
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 45952
   i32.store
   i32.const 45952
   call $~lib/console/console.log
   call $assembly/tests/core-arrays.test/testSlidingWindow
   global.get $~lib/memory/__stack_pointer
   i32.const 46544
   i32.store
   i32.const 46544
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 81
   i32.const 46624
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   call $assembly/core/arrays/rotate<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 5
   i32.const 2
   i32.const 81
   i32.const 46672
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 46720
    i32.const 38464
    i32.const 266
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const -2
   call $assembly/core/arrays/rotate<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 5
   i32.const 2
   i32.const 81
   i32.const 46832
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 46880
    i32.const 38464
    i32.const 268
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 47008
   i32.store
   i32.const 47008
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 81
   i32.const 47072
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 47120
   i32.store offset=8
   local.get $0
   i32.const 30
   i32.const 47120
   call $assembly/core/arrays/binarySearch<i32>
   i32.const 2
   i32.ne
   if
    i32.const 47152
    i32.const 38464
    i32.const 274
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 47296
   i32.store offset=8
   local.get $0
   i32.const 35
   i32.const 47296
   call $assembly/core/arrays/binarySearch<i32>
   i32.const -1
   i32.ne
   if
    i32.const 47328
    i32.const 38464
    i32.const 276
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 47472
   i32.store
   i32.const 47472
   call $~lib/console/console.log
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 81
   i32.const 47552
   call $~lib/rt/__newArray
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 47600
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.set $0
   loop $while-continue|0
    local.get $0
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     local.get $3
     local.get $2
     local.get $0
     local.get $2
     i32.sub
     i32.const 1
     i32.shr_s
     i32.add
     local.tee $1
     call $~lib/array/Array<i32>#__get
     local.set $4
     i32.const 2
     global.set $~argumentsLength
     local.get $4
     i32.const 30
     i32.const 47600
     i32.load
     call_indirect (type $1)
     i32.const 0
     i32.le_s
     if
      local.get $1
      i32.const 1
      i32.add
      local.set $2
     else
      local.get $1
      local.set $0
     end
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   i32.const 30
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   i32.const 1
   i32.sub
   local.set $0
   loop $for-loop|16
    local.get $0
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $3
     local.get $0
     local.get $3
     local.get $0
     i32.const 1
     i32.sub
     local.tee $0
     call $~lib/array/Array<i32>#__get
     call $~lib/array/Array<u32>#__set
     br $for-loop|16
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $2
   i32.const 30
   call $~lib/array/Array<u32>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   i32.const 5
   i32.const 2
   i32.const 81
   i32.const 47632
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $3
   local.get $0
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 47680
    i32.const 38464
    i32.const 282
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 47824
   i32.store
   i32.const 47824
   call $~lib/console/console.log
   call $assembly/tests/core-arrays.test/testIntersection
   global.get $~lib/memory/__stack_pointer
   i32.const 48144
   i32.store
   i32.const 48144
   call $~lib/console/console.log
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 81
   i32.const 48224
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 81
   i32.const 48272
   call $~lib/rt/__newArray
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $~lib/set/Set<i32>#constructor
   local.tee $4
   i32.store
   loop $for-loop|07
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $4
     local.get $2
     local.get $1
     call $~lib/array/Array<i32>#__get
     call $~lib/set/Set<i32>#add
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|07
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   local.tee $2
   i32.store offset=12
   i32.const 0
   local.set $1
   loop $for-loop|18
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $4
     local.get $0
     local.get $1
     call $~lib/array/Array<i32>#__get
     call $~lib/set/Set<i32>#has
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      local.get $2
      local.get $0
      local.get $1
      call $~lib/array/Array<i32>#__get
      call $~lib/array/Array<u32>#push
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|18
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   i32.const 2
   i32.const 2
   i32.const 81
   i32.const 48320
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $2
   local.get $0
   call $assembly/core/arrays/arrayEquals<i32>
   i32.eqz
   if
    i32.const 48352
    i32.const 38464
    i32.const 296
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 48528
   i32.store
   i32.const 48528
   call $~lib/console/console.log
   call $assembly/tests/core-arrays.test/testUnion
   global.get $~lib/memory/__stack_pointer
   i32.const 48896
   i32.store
   i32.const 48896
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 48960
   i32.store
   i32.const 48960
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<u32,f64>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 112
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 96
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/validators/requirePositive (param $0 f64) (param $1 i32) (result f64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $0
  f64.const 0
  f64.le
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/number/F64#toString
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49408
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   i32.const 49408
   local.get $1
   i32.store
   i32.const 49408
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 49408
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   i32.const 49416
   local.get $2
   i32.store
   i32.const 49408
   local.get $2
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 49408
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=12
   i32.const 49408
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 49440
   i32.const 24
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/validators/requireNonNegative
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,f64>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=16
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<u32,f64>#set" (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $1
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   i32.const 15
   i32.shr_u
   local.get $3
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   i32.const 13
   i32.shr_u
   local.get $3
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   i32.const 16
   i32.shr_u
   local.get $3
   i32.xor
   local.tee $7
   call $"~lib/map/Map<u32,f64>#find"
   local.tee $3
   if
    local.get $3
    local.get $2
    f64.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $9
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $6
     i32.const 24
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $10
     local.get $0
     i32.load offset=16
     i32.const 24
     i32.mul
     i32.add
     local.set $5
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $10
      i32.ne
      if
       local.get $10
       i32.load offset=16
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $10
        i32.load
        local.tee $11
        i32.store
        local.get $3
        local.get $10
        f64.load offset=8
        f64.store offset=8
        local.get $3
        local.get $9
        local.get $8
        local.get $11
        i32.const -1028477379
        i32.mul
        i32.const 374761397
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $11
        local.get $11
        i32.const 15
        i32.shr_u
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $11
        local.get $11
        i32.const 13
        i32.shr_u
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $11
        local.get $11
        i32.const 16
        i32.shr_u
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load
        i32.store offset=16
        local.get $11
        local.get $3
        i32.store
        local.get $3
        i32.const 24
        i32.add
        local.set $3
       end
       local.get $10
       i32.const 24
       i32.add
       local.set $10
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=12
     local.get $0
     local.get $9
     i32.store
     local.get $0
     local.get $9
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 24
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $3
    local.get $2
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $7
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=16
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/builders/PrimeStateBuilder#withPrime (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 49296
  i32.store
  local.get $1
  f64.convert_i32_u
  i32.const 49296
  call $assembly/core/validators/requirePositive
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 49520
  i32.store
  call $assembly/core/validators/requireNonNegative
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store
  local.get $2
  local.get $1
  f64.const 0.5
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store
  local.get $2
  local.get $1
  f64.const 0
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<u32,f64>#values" (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=8
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=16
   local.tee $5
   call $~lib/array/Array<f64>#constructor
   local.tee $4
   i32.store offset=4
   loop $for-loop|0
    local.get $2
    local.get $5
    i32.lt_s
    if
     local.get $3
     local.get $2
     i32.const 24
     i32.mul
     i32.add
     local.tee $0
     i32.load offset=16
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $4
      local.get $1
      local.get $0
      f64.load offset=8
      call $~lib/array/Array<f64>#__set
      local.get $1
      i32.const 1
      i32.add
      local.set $1
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $4
   local.get $1
   i32.const 3
   i32.const 0
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<u32,f64>#keys" (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $0
  call $~lib/array/Array<u32>#constructor
  local.tee $5
  i32.store offset=4
  loop $for-loop|0
   local.get $0
   local.get $2
   i32.gt_s
   if
    local.get $3
    local.get $2
    i32.const 24
    i32.mul
    i32.add
    local.tee $4
    i32.load offset=16
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     local.get $5
     local.get $1
     local.get $4
     i32.load
     call $~lib/array/Array<u32>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $1
  call $~lib/array/Array<~lib/string/String>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $"~lib/map/Map<u32,f64>#get" (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $"~lib/map/Map<u32,f64>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 6192
   i32.const 6256
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $"~lib/map/Map<u32,f64>#has" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $"~lib/map/Map<u32,f64>#find"
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/Complex#constructor (param $0 f64) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 140
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $1
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $2
  f64.const 0
  call $assembly/types/Complex#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $3
  call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#set"
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<i32,f64>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=16
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<i32,f64>#set" (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $1
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   i32.const 15
   i32.shr_u
   local.get $3
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   i32.const 13
   i32.shr_u
   local.get $3
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   i32.const 16
   i32.shr_u
   local.get $3
   i32.xor
   local.tee $7
   call $"~lib/map/Map<i32,f64>#find"
   local.tee $3
   if
    local.get $3
    local.get $2
    f64.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $9
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $6
     i32.const 24
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $10
     local.get $0
     i32.load offset=16
     i32.const 24
     i32.mul
     i32.add
     local.set $5
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $10
      i32.ne
      if
       local.get $10
       i32.load offset=16
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $10
        i32.load
        local.tee $11
        i32.store
        local.get $3
        local.get $10
        f64.load offset=8
        f64.store offset=8
        local.get $3
        local.get $9
        local.get $8
        local.get $11
        i32.const -1028477379
        i32.mul
        i32.const 374761397
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $11
        local.get $11
        i32.const 15
        i32.shr_u
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $11
        local.get $11
        i32.const 13
        i32.shr_u
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $11
        local.get $11
        i32.const 16
        i32.shr_u
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load
        i32.store offset=16
        local.get $11
        local.get $3
        i32.store
        local.get $3
        i32.const 24
        i32.add
        local.set $3
       end
       local.get $10
       i32.const 24
       i32.add
       local.set $10
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=12
     local.get $0
     local.get $9
     i32.store
     local.get $0
     local.get $9
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 24
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $3
    local.get $2
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $7
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=16
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/state/primeState/PrimeStateEngine#setPhase (param $0 i32) (param $1 i32) (param $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  call $"~lib/map/Map<i32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<i32,assembly/types/Complex>#has" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#find"
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/Complex#magnitude (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  f64.load
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=8
  f64.mul
  f64.add
  f64.sqrt
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/Complex#abs (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/types/Complex#magnitude
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store
  local.get $2
  local.get $1
  call $"~lib/map/Map<i32,assembly/types/Complex>#has"
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store offset=4
   local.get $0
   local.get $1
   call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#get"
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/types/Complex#abs
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  f64.const 0
 )
 (func $assembly/tests/core-builders.test/testPrimeStateBuilder
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 184
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   call $"~lib/map/Map<u32,f64>#constructor"
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $4
   local.get $5
   i32.store
   local.get $4
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   call $"~lib/map/Map<u32,f64>#constructor"
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $4
   local.get $5
   i32.store offset=4
   local.get $4
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.const 1
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   i32.const 2
   call $assembly/core/builders/PrimeStateBuilder#withPrime
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 3
   call $assembly/core/builders/PrimeStateBuilder#withPrime
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   call $"~lib/map/Map<u32,f64>#values"
   local.tee $5
   i32.store offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     local.get $5
     local.get $0
     call $~lib/array/Array<f64>#__get
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     local.get $1
     local.get $6
     local.get $5
     local.get $0
     call $~lib/array/Array<f64>#__get
     f64.mul
     f64.add
     local.set $1
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   local.get $1
   f64.const 0
   f64.gt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    local.get $4
    f64.const 1
    local.get $1
    f64.sqrt
    f64.div
    f64.store offset=8
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/runtime/state/primeState/PrimeStateEngine#constructor
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $7
   i32.store offset=12
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $7
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     local.get $7
     local.get $2
     call $~lib/array/Array<u32>#__get
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.load
     local.tee $8
     i32.store offset=4
     local.get $8
     local.get $0
     call $"~lib/map/Map<u32,f64>#get"
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $1
     local.get $4
     f64.load offset=8
     f64.mul
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.load offset=4
     local.tee $8
     i32.store offset=4
     local.get $8
     local.get $0
     call $"~lib/map/Map<u32,f64>#has"
     if (result f64)
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.load offset=4
      local.tee $8
      i32.store offset=4
      local.get $8
      local.get $0
      call $"~lib/map/Map<u32,f64>#get"
     else
      f64.const 0
     end
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     local.get $0
     local.get $1
     call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     local.get $0
     local.get $6
     call $assembly/runtime/state/primeState/PrimeStateEngine#setPhase
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $5
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   i32.const 2
   call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
   f64.const 0
   f64.gt
   i32.eqz
   if
    i32.const 49680
    i32.const 49808
    i32.const 22
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   i32.const 3
   call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
   f64.const 0
   f64.gt
   i32.eqz
   if
    i32.const 49904
    i32.const 49808
    i32.const 23
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   i32.const 2
   call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $1
   local.get $1
   f64.mul
   local.get $5
   i32.const 3
   call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
   local.tee $1
   local.get $1
   f64.mul
   f64.add
   f64.const -1
   f64.add
   f64.abs
   f64.const 0.0001
   f64.lt
   i32.eqz
   if
    i32.const 50032
    i32.const 49808
    i32.const 29
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/validators/requireNonEmpty (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 50384
   i32.store offset=4
   local.get $1
   i32.const 50384
   call $~lib/string/String#concat
   i32.const 49440
   i32.const 84
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  loop $while-continue|0
   local.get $2
   if
    local.get $2
    i32.load offset=16
    local.tee $0
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $3
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $0
    i32.const -2
    i32.and
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#set" (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $7
   call $"~lib/map/Map<~lib/string/String,f64>#find"
   local.tee $3
   if
    local.get $3
    local.get $2
    f64.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $9
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $6
     i32.const 24
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $10
     local.get $0
     i32.load offset=16
     i32.const 24
     i32.mul
     i32.add
     local.set $5
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $10
      i32.ne
      if
       local.get $10
       i32.load offset=16
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.load
        local.tee $11
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=8
        local.get $3
        local.get $11
        i32.store
        local.get $3
        local.get $10
        f64.load offset=8
        f64.store offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=8
        local.get $3
        local.get $9
        local.get $11
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $8
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load
        i32.store offset=16
        local.get $11
        local.get $3
        i32.store
        local.get $3
        i32.const 24
        i32.add
        local.set $3
       end
       local.get $10
       i32.const 24
       i32.add
       local.set $10
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=16
     local.get $0
     local.get $9
     i32.store
     local.get $0
     local.get $9
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=16
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $3
    local.get $4
    i32.const 24
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $0
    local.get $1
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $3
    local.get $2
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $7
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=16
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/string/String.__not (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.eqz
 )
 (func $assembly/core/network-base/QuantumNode#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 48
    i32.const 188
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=32
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=36
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$assembly/core/network-base/EntanglableNode#constructor$67 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     local.get $0
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 32
      i32.const 189
      call $~lib/rt/itcms/__new
      local.tee $0
      i32.store
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.const 0
     i32.store offset=24
     local.get $0
     i32.const 0
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.const 0
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill
     local.get $0
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.const 190
      call $~lib/rt/itcms/__new
      local.tee $0
      i32.store
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.const 0
     i32.store
     local.get $0
     i32.const 0
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.const 0
     i32.store8 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     f64.const 0
     f64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     f64.const 0
     f64.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 50336
     i32.store offset=16
     local.get $1
     i32.const 50336
     call $assembly/core/validators/requireNonEmpty
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $0
     local.get $1
     i32.store
     local.get $0
     local.get $1
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.const 1
     i32.store8 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     f64.const 0
     f64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     f64.const 1
     f64.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     call $"~lib/map/Map<~lib/string/String,f64>#constructor"
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $0
     local.get $1
     i32.store offset=24
     local.get $0
     local.get $1
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 50784
     i32.store offset=8
     local.get $0
     f64.const 10
     i32.const 50784
     call $assembly/core/validators/requirePositive
     i32.trunc_sat_f64_s
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$assembly/core/network-base/EntanglableNode#constructor$67
    end
    br $folding-inner1
   end
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=36
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   block $__inlined_func$assembly/core/arrays/createArray<f64>$1493 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=12
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.tee $1
    i32.const 0
    i32.gt_s
    if
     local.get $1
     call $~lib/array/Array<f64>#constructor
     br $__inlined_func$assembly/core/arrays/createArray<f64>$1493
    end
    i32.const 0
    call $~lib/array/Array<f64>#constructor
   end
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=32
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 1
   f64.store offset=40
   i32.const 0
   local.set $1
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=32
     local.tee $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     local.get $1
     call $~lib/array/Array<u32>#__get
     drop
     local.get $0
     i32.const 8
     i32.sub
     i32.load
     i32.const 191
     i32.ne
     if
      unreachable
     end
     local.get $3
     local.get $1
     f64.const 0
     call $~lib/array/Array<f64>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/mocks/MockQuantumNode#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.const 191
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $2
  local.get $0
  local.get $1
  call $assembly/core/network-base/QuantumNode#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#keys" (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $4
  i32.store offset=4
  loop $for-loop|0
   local.get $0
   local.get $2
   i32.gt_s
   if
    local.get $3
    local.get $2
    i32.const 24
    i32.mul
    i32.add
    local.tee $5
    i32.load offset=16
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.load
     local.tee $5
     i32.store offset=8
     local.get $4
     local.get $1
     local.get $5
     call $~lib/array/Array<~lib/string/String>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $1
  call $~lib/array/Array<~lib/string/String>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#get" (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,f64>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 6192
   i32.const 6256
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/tests/core-builders.test/testNetworkNodeBuilder
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 36
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 185
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   f64.const 1
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 1
   i32.store8 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=28
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,f64>#constructor"
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 50288
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 50288
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 50336
   i32.store offset=12
   i32.const 50288
   i32.const 50336
   call $assembly/core/validators/requireNonEmpty
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $2
   local.get $4
   i32.store
   local.get $2
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=4
   i32.store offset=12
   local.get $4
   i32.const 0
   i32.const 2
   call $~lib/array/Array<u32>#__set
   local.get $4
   i32.const 1
   i32.const 3
   call $~lib/array/Array<u32>#__set
   local.get $4
   i32.const 2
   i32.const 5
   call $~lib/array/Array<u32>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $2
   local.get $4
   i32.store offset=4
   local.get $2
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.const 0.8
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 50448
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 50448
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 50336
   i32.store offset=4
   i32.const 50448
   i32.const 50336
   call $assembly/core/validators/requireNonEmpty
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 50496
   i32.store
   call $assembly/core/validators/requireNonNegative
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=8
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 50448
   i32.store offset=4
   local.get $4
   i32.const 50448
   f64.const 0.5
   call $"~lib/map/Map<~lib/string/String,f64>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $3
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load
   local.tee $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/string/String.__not
   if
    i32.const 50560
    i32.const 50624
    i32.const 173
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   local.tee $4
   i32.store offset=8
   local.get $4
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    local.get $4
    call $~lib/array/Array<u32>#get:length
    i32.const 3
    i32.lt_s
   else
    i32.const 1
   end
   if
    i32.const 50704
    i32.const 50624
    i32.const 178
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   call $assembly/tests/mocks/MockQuantumNode#constructor
   local.tee $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $4
   local.get $2
   f64.load offset=16
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $4
   local.get $2
   i32.load8_u offset=24
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=8
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   call $"~lib/map/Map<~lib/string/String,f64>#keys"
   local.tee $3
   i32.store offset=20
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     local.get $0
     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
     local.tee $5
     i32.store offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load offset=8
     local.tee $6
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=12
     local.get $6
     local.get $5
     call $"~lib/map/Map<~lib/string/String,f64>#get"
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.load offset=24
     local.tee $6
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=12
     local.get $6
     local.get $5
     local.get $1
     call $"~lib/map/Map<~lib/string/String,f64>#set"
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.load offset=28
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 50288
   i32.store offset=8
   local.get $0
   i32.const 50288
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 50848
    i32.const 49808
    i32.const 41
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=36
   local.tee $0
   i32.store offset=4
   local.get $0
   i32.const 0
   call $~lib/array/Array<u32>#__get
   i32.const 2
   i32.eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load offset=36
    local.tee $0
    i32.store offset=4
    local.get $0
    i32.const 1
    call $~lib/array/Array<u32>#__get
    i32.const 3
    i32.eq
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load offset=36
    local.tee $0
    i32.store offset=4
    local.get $0
    i32.const 2
    call $~lib/array/Array<u32>#__get
    i32.const 5
    i32.eq
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 50944
    i32.const 49808
    i32.const 42
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.load offset=16
   f64.const 0.8
   f64.ne
   if
    i32.const 51056
    i32.const 49808
    i32.const 43
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=24
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 50448
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 50448
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 50448
   i32.store offset=8
   local.get $0
   i32.const 50448
   i32.const 50448
   call $~lib/util/hash/HASH<~lib/string/String>
   call $"~lib/map/Map<~lib/string/String,f64>#find"
   i32.const 0
   i32.ne
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.eqz
   if
    i32.const 51168
    i32.const 49808
    i32.const 44
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/tests/core-builders.test/testProtocolMessageBuilder~anonymous|0 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.eqz
   if
    i32.const 25808
    i32.const 50624
    i32.const 292
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store offset=4
   local.get $2
   i32.eqz
   if
    i32.const 25808
    i32.const 50624
    i32.const 293
    i32.const 34
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $0
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $0
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=24
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=28
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 192
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $6
   local.get $1
   i32.store
   local.get $6
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $6
   local.get $2
   i32.store offset=4
   local.get $6
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $6
   local.get $3
   i32.store offset=8
   local.get $6
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   local.get $5
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $6
   local.get $4
   i32.store offset=24
   local.get $6
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $6
   local.get $0
   i32.store offset=28
   local.get $6
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/core-builders.test/testProtocolMessageBuilder
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 52
   memory.fill
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 193
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=24
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=28
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=24
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=28
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   i32.const 51392
   i32.store offset=44
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 51392
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 51440
   i32.store offset=12
   i32.const 51392
   i32.const 51440
   call $assembly/core/validators/requireNonEmpty
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $2
   i32.store
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 51488
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 51488
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 51520
   i32.store offset=12
   i32.const 51488
   i32.const 51520
   call $assembly/core/validators/requireNonEmpty
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 51568
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 51568
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 51600
   i32.store offset=12
   i32.const 51568
   i32.const 51600
   call $assembly/core/validators/requireNonEmpty
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 51648
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 51680
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=24
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 51648
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 51680
   i32.store offset=8
   local.get $2
   i32.const 51648
   i32.const 51680
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 51712
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store
   local.get $2
   call $~lib/string/String.__not
   if
    i32.const 51744
    i32.const 50624
    i32.const 277
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store
   local.get $2
   call $~lib/string/String.__not
   if
    i32.const 51824
    i32.const 50624
    i32.const 280
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i64.load offset=16
   i64.const 1
   i64.shl
   i64.const 2
   i64.sub
   i64.const -9007199254740994
   i64.gt_u
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $~lib/bindings/dom/Date.now
    i64.trunc_sat_f64_s
    f64.convert_i64_s
    f64.store offset=16
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   i32.const 51712
   i32.load
   call_indirect (type $0)
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 51392
   i32.store offset=8
   local.get $1
   i32.const 51392
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 51888
    i32.const 49808
    i32.const 126
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 51488
   i32.store offset=8
   local.get $1
   i32.const 51488
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 52000
    i32.const 49808
    i32.const 127
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 51568
   i32.store offset=8
   local.get $1
   i32.const 51568
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 52128
    i32.const 49808
    i32.const 128
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=24
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 51648
   i32.store offset=8
   local.get $0
   i32.const 51648
   call $"~lib/map/Map<~lib/string/String,i32>#has"
   i32.eqz
   if
    i32.const 52256
    i32.const 49808
    i32.const 129
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 52
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/builders/NetworkTopologyBuilder#withNode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $1
  call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/core-builders.test/testNetworkTopologyBuilder
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $assembly/core/builders/networkTopology
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 52480
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $1
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 52512
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   i32.const 52480
   local.get $2
   call $assembly/tests/mocks/MockQuantumNode#constructor
   local.tee $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 52544
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 52576
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $2
   i32.const 52544
   local.get $3
   call $assembly/tests/mocks/MockQuantumNode#constructor
   local.tee $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=32
   local.get $0
   local.get $1
   call $assembly/core/builders/NetworkTopologyBuilder#withNode
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=24
   local.get $0
   local.get $2
   call $assembly/core/builders/NetworkTopologyBuilder#withNode
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 52608
   i32.store offset=4
   local.get $0
   f64.const 10
   i32.const 52608
   call $assembly/core/validators/requirePositive
   i32.trunc_sat_f64_s
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 52656
   i32.store offset=4
   local.get $0
   f64.const 100
   i32.const 52656
   call $assembly/core/validators/requirePositive
   i32.trunc_sat_f64_s
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $0
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 52704
    i32.const 49808
    i32.const 91
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 10
   i32.ne
   if
    i32.const 52848
    i32.const 49808
    i32.const 92
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 100
   i32.ne
   if
    i32.const 52992
    i32.const 49808
    i32.const 93
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/builders/QuantumGate#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 200
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/core/builders/QuantumCircuitBuilder#getGates (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/core-builders.test/testQuantumCircuitBuilder
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 199
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 201
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store
   local.get $3
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $3
   local.get $4
   i32.store
   local.get $3
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.store offset=4
   local.get $1
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 53232
   i32.store offset=4
   local.get $1
   f64.const 2
   i32.const 53232
   call $assembly/core/validators/requirePositive
   i32.trunc_sat_f64_s
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 53280
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 81
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=4
   i32.store offset=20
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/array/Array<u32>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   i32.const 53280
   local.get $4
   call $assembly/core/builders/QuantumGate#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   local.get $4
   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 53312
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 81
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=4
   i32.store offset=20
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/array/Array<u32>#__set
   local.get $4
   i32.const 1
   i32.const 1
   call $~lib/array/Array<u32>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   i32.const 53312
   local.get $4
   call $assembly/core/builders/QuantumGate#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   local.get $4
   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $0
    local.get $1
    i32.load
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load offset=8
     local.tee $3
     i32.store
     local.get $3
     local.get $0
     call $~lib/array/Array<u32>#push
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.load
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 2
   i32.ne
   if
    i32.const 53344
    i32.const 49808
    i32.const 76
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   call $assembly/core/builders/QuantumCircuitBuilder#getGates
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 53488
    i32.const 49808
    i32.const 77
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 53632
    i32.const 49808
    i32.const 78
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/string/String#split (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 55232
  i32.store offset=8
  block $folding-inner3
   block $folding-inner2
    block $folding-inner0
     i32.const 55228
     i32.load
     i32.const 1
     i32.shr_u
     local.tee $7
     if
      local.get $4
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 1
       i32.const 2
       i32.const 91
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $1
       i32.store offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=8
       local.get $1
       i32.load offset=4
       i32.const 14928
       i32.store
       br $folding-inner3
      end
     else
      local.get $4
      i32.eqz
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i32.const 2147483647
      local.get $4
      local.get $4
      i32.const 2147483647
      i32.eq
      select
      local.tee $3
      i32.const 2
      i32.const 91
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $1
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=8
      local.get $1
      i32.load offset=4
      local.set $4
      loop $for-loop|0
       local.get $2
       local.get $3
       i32.lt_s
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 2
        i32.const 2
        call $~lib/rt/itcms/__new
        local.tee $5
        i32.store offset=16
        local.get $5
        local.get $0
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        i32.load16_u
        i32.store16
        local.get $4
        local.get $2
        i32.const 2
        i32.shl
        i32.add
        local.get $5
        i32.store
        local.get $1
        local.get $5
        i32.const 1
        call $~lib/rt/itcms/__link
        local.get $2
        i32.const 1
        i32.add
        local.set $2
        br $for-loop|0
       end
      end
      br $folding-inner3
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 2
     i32.const 91
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $1
     i32.store offset=24
     loop $while-continue|1
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      i32.const 55232
      i32.store offset=28
      local.get $0
      i32.const 55232
      local.get $2
      call $~lib/string/String#indexOf
      local.tee $5
      i32.const -1
      i32.xor
      if
       local.get $5
       local.get $2
       i32.sub
       local.tee $6
       i32.const 0
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.const 1
        i32.shl
        local.tee $8
        i32.const 2
        call $~lib/rt/itcms/__new
        local.tee $6
        i32.store offset=32
        local.get $6
        local.get $0
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        local.get $8
        memory.copy
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store offset=28
        local.get $1
        local.get $6
        call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
       else
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=8
        global.get $~lib/memory/__stack_pointer
        i32.const 14928
        i32.store offset=28
        local.get $1
        i32.const 14928
        call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
       end
       local.get $3
       i32.const 1
       i32.add
       local.tee $3
       i32.const 2147483647
       i32.eq
       br_if $folding-inner2
       local.get $5
       local.get $7
       i32.add
       local.set $2
       br $while-continue|1
      end
     end
     local.get $2
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=28
      local.get $1
      local.get $0
      call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
      br $folding-inner2
     end
     local.get $4
     local.get $2
     i32.sub
     local.tee $3
     i32.const 0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.const 1
      i32.shl
      local.tee $3
      i32.const 2
      call $~lib/rt/itcms/__new
      local.tee $4
      i32.store offset=36
      local.get $4
      local.get $0
      local.get $2
      i32.const 1
      i32.shl
      i32.add
      local.get $3
      memory.copy
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=28
      local.get $1
      local.get $4
      call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
     else
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      i32.const 14928
      i32.store offset=28
      local.get $1
      i32.const 14928
      call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
     end
     br $folding-inner3
    end
    i32.const 0
    i32.const 2
    i32.const 91
    i32.const 0
    call $~lib/rt/__newArray
    local.set $1
    br $folding-inner3
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/string/String#trim (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  i32.const 1
  i32.shl
  local.set $1
  loop $while-continue|0
   local.get $1
   if (result i32)
    block $__inlined_func$~lib/util/string/isSpace$72 (result i32)
     local.get $0
     local.get $1
     i32.add
     i32.const 2
     i32.sub
     i32.load16_u
     local.tee $4
     i32.const 5760
     i32.lt_u
     if
      local.get $4
      i32.const 128
      i32.or
      i32.const 160
      i32.eq
      local.get $4
      i32.const 9
      i32.sub
      i32.const 4
      i32.le_u
      i32.or
      br $__inlined_func$~lib/util/string/isSpace$72
     end
     i32.const 1
     local.get $4
     i32.const -8192
     i32.add
     i32.const 10
     i32.le_u
     br_if $__inlined_func$~lib/util/string/isSpace$72
     drop
     block $break|0
      block $case6|0
       local.get $4
       i32.const 5760
       i32.eq
       br_if $case6|0
       local.get $4
       i32.const 8232
       i32.eq
       br_if $case6|0
       local.get $4
       i32.const 8233
       i32.eq
       br_if $case6|0
       local.get $4
       i32.const 8239
       i32.eq
       br_if $case6|0
       local.get $4
       i32.const 8287
       i32.eq
       br_if $case6|0
       local.get $4
       i32.const 12288
       i32.eq
       br_if $case6|0
       local.get $4
       i32.const 65279
       i32.eq
       br_if $case6|0
       br $break|0
      end
      i32.const 1
      br $__inlined_func$~lib/util/string/isSpace$72
     end
     i32.const 0
    end
   else
    i32.const 0
   end
   if
    local.get $1
    i32.const 2
    i32.sub
    local.set $1
    br $while-continue|0
   end
  end
  loop $while-continue|1
   local.get $1
   local.get $2
   i32.gt_u
   if (result i32)
    block $__inlined_func$~lib/util/string/isSpace$73 (result i32)
     local.get $0
     local.get $2
     i32.add
     i32.load16_u
     local.tee $4
     i32.const 5760
     i32.lt_u
     if
      local.get $4
      i32.const 128
      i32.or
      i32.const 160
      i32.eq
      local.get $4
      i32.const 9
      i32.sub
      i32.const 4
      i32.le_u
      i32.or
      br $__inlined_func$~lib/util/string/isSpace$73
     end
     i32.const 1
     local.get $4
     i32.const -8192
     i32.add
     i32.const 10
     i32.le_u
     br_if $__inlined_func$~lib/util/string/isSpace$73
     drop
     block $break|00
      block $case6|01
       local.get $4
       i32.const 5760
       i32.eq
       br_if $case6|01
       local.get $4
       i32.const 8232
       i32.eq
       br_if $case6|01
       local.get $4
       i32.const 8233
       i32.eq
       br_if $case6|01
       local.get $4
       i32.const 8239
       i32.eq
       br_if $case6|01
       local.get $4
       i32.const 8287
       i32.eq
       br_if $case6|01
       local.get $4
       i32.const 12288
       i32.eq
       br_if $case6|01
       local.get $4
       i32.const 65279
       i32.eq
       br_if $case6|01
       br $break|00
      end
      i32.const 1
      br $__inlined_func$~lib/util/string/isSpace$73
     end
     i32.const 0
    end
   else
    i32.const 0
   end
   if
    local.get $2
    i32.const 2
    i32.add
    local.set $2
    local.get $1
    i32.const 2
    i32.sub
    local.set $1
    br $while-continue|1
   end
  end
  local.get $1
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 14928
   return
  end
  local.get $2
  i32.eqz
  local.get $1
  local.get $3
  i32.const 1
  i32.shl
  i32.eq
  i32.and
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store offset=4
  local.get $3
  local.get $0
  local.get $2
  i32.add
  local.get $1
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/string/String#startsWith (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $2
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 0
  local.get $1
  local.get $2
  call $~lib/util/string/compareImpl
  i32.eqz
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#endsWith@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 536870910
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 55296
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 55296
   i32.store
   block $__inlined_func$~lib/string/String#endsWith$3906
    local.get $1
    local.get $2
    local.get $1
    local.get $2
    i32.lt_s
    select
    i32.const 55292
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $1
    i32.sub
    local.tee $2
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     local.set $0
     br $__inlined_func$~lib/string/String#endsWith$3906
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 55296
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 55296
    local.get $1
    call $~lib/util/string/compareImpl
    i32.eqz
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/config-loader/JSONConfigParser.parse (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 76
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 204
   i32.const 55088
   call $~lib/rt/__newArray
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 207
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $4
   local.get $3
   i32.store
   local.get $4
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $4
   local.get $3
   i32.store offset=8
   local.get $4
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 54208
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 55120
   i32.store offset=16
   i32.const 54208
   i32.const 55120
   i32.const 0
   call $~lib/string/String#indexOf
   local.tee $2
   i32.const -1
   i32.ne
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 54208
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 55168
    i32.store offset=16
    i32.const 54208
    i32.const 55168
    local.get $2
    call $~lib/string/String#indexOf
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 54208
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 55200
    i32.store offset=16
    i32.const 54208
    i32.const 55200
    local.get $2
    call $~lib/string/String#indexOf
    local.tee $3
    i32.const -1
    i32.ne
    local.get $2
    i32.const -1
    i32.ne
    i32.and
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 54208
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 54208
     local.get $2
     i32.const 1
     i32.add
     local.get $3
     call $~lib/string/String#substring
     local.tee $2
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=16
     i32.const 1
     global.set $~argumentsLength
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=4
     local.get $2
     call $~lib/string/String#split
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     local.get $6
     i32.store offset=24
     loop $for-loop|0
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=12
      local.get $6
      call $~lib/array/Array<u32>#get:length
      local.get $5
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store offset=16
       local.get $6
       local.get $5
       call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=12
       local.get $2
       local.get $3
       call $~lib/string/String#trim
       local.tee $3
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       i32.const 55264
       i32.store offset=16
       local.get $3
       i32.const 55264
       i32.const 0
       call $~lib/string/String#indexOf
       local.tee $7
       i32.const -1
       i32.ne
       if
        global.get $~lib/memory/__stack_pointer
        local.set $2
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store offset=16
        local.get $3
        i32.const 0
        local.get $7
        call $~lib/string/String#substring
        local.set $8
        global.get $~lib/memory/__stack_pointer
        local.get $8
        i32.store offset=12
        local.get $2
        local.get $8
        call $~lib/string/String#trim
        local.tee $2
        i32.store offset=32
        global.get $~lib/memory/__stack_pointer
        local.set $8
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store offset=16
        i32.const 1
        global.set $~argumentsLength
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 119640
        i32.lt_s
        br_if $folding-inner1
        global.get $~lib/memory/__stack_pointer
        i32.const 0
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store
        local.get $3
        local.get $7
        i32.const 1
        i32.add
        i32.const 2147483647
        call $~lib/string/String#substring
        local.set $3
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store offset=12
        local.get $8
        local.get $3
        call $~lib/string/String#trim
        local.tee $3
        i32.store offset=36
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        i32.const 55296
        i32.store offset=16
        local.get $2
        i32.const 55296
        call $~lib/string/String#startsWith
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store offset=12
         global.get $~lib/memory/__stack_pointer
         i32.const 55296
         i32.store offset=16
         i32.const 1
         global.set $~argumentsLength
         local.get $2
         call $~lib/string/String#endsWith@varargs
        else
         i32.const 0
        end
        if
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store offset=16
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.const 1
         local.get $2
         i32.const 20
         i32.sub
         i32.load offset=16
         i32.const 1
         i32.shr_u
         i32.const 1
         i32.sub
         call $~lib/string/String#substring
         local.tee $2
         i32.store offset=32
        end
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        i32.const 55296
        i32.store offset=16
        local.get $3
        i32.const 55296
        call $~lib/string/String#startsWith
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store offset=12
         global.get $~lib/memory/__stack_pointer
         i32.const 55296
         i32.store offset=16
         i32.const 1
         global.set $~argumentsLength
         local.get $3
         call $~lib/string/String#endsWith@varargs
        else
         i32.const 0
        end
        if
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store offset=16
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.const 1
         local.get $3
         i32.const 20
         i32.sub
         i32.load offset=16
         i32.const 1
         i32.shr_u
         i32.const 1
         i32.sub
         call $~lib/string/String#substring
         local.tee $3
         i32.store offset=36
        end
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store offset=12
        local.get $2
        i32.const 20
        i32.sub
        i32.load offset=16
        i32.const 1
        i32.shr_u
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store offset=12
         local.get $3
         i32.const 20
         i32.sub
         i32.load offset=16
         i32.const 1
         i32.shr_u
        else
         i32.const 0
        end
        if
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store offset=16
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store offset=40
         local.get $0
         local.get $2
         local.get $3
         call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
        end
       end
       local.get $5
       i32.const 1
       i32.add
       local.set $5
       br $for-loop|0
      end
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 54208
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 55328
   i32.store offset=16
   i32.const 54208
   i32.const 55328
   i32.const 0
   call $~lib/string/String#indexOf
   local.tee $2
   i32.const -1
   i32.ne
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 54208
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 55376
    i32.store offset=16
    i32.const 54208
    i32.const 55376
    local.get $2
    call $~lib/string/String#indexOf
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 54208
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 55408
    i32.store offset=16
    i32.const 54208
    i32.const 55408
    local.get $2
    call $~lib/string/String#indexOf
    local.tee $3
    i32.const -1
    i32.ne
    local.get $2
    i32.const -1
    i32.ne
    i32.and
    if
     global.get $~lib/memory/__stack_pointer
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 54208
     i32.store offset=16
     i32.const 54208
     local.get $2
     i32.const 1
     i32.add
     local.get $3
     call $~lib/string/String#substring
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $5
     local.get $2
     call $~lib/string/String#trim
     local.tee $2
     i32.store offset=44
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     i32.const 10
     i32.gt_u
     if
      global.get $~lib/memory/__stack_pointer
      call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
      local.tee $2
      i32.store offset=48
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 55440
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      i32.const 55472
      i32.store offset=40
      local.get $2
      i32.const 55440
      i32.const 55472
      call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 2
      i32.const 91
      i32.const 55504
      call $~lib/rt/__newArray
      local.tee $3
      i32.store offset=52
      global.get $~lib/memory/__stack_pointer
      local.set $5
      global.get $~lib/memory/__stack_pointer
      i32.const 55536
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 55584
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=40
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=56
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 119640
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.const 203
      call $~lib/rt/itcms/__new
      local.tee $6
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 55536
      i32.store offset=8
      local.get $6
      i32.const 55536
      i32.store
      local.get $6
      i32.const 55536
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 55584
      i32.store offset=8
      local.get $6
      i32.const 55584
      i32.store offset=4
      local.get $6
      i32.const 55584
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=4
      local.get $6
      i32.const 1
      i32.store8 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=8
      local.get $6
      local.get $2
      i32.store offset=12
      local.get $6
      local.get $2
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=8
      local.get $6
      local.get $3
      i32.store offset=16
      local.get $6
      local.get $3
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=4
      local.get $6
      i32.const 10
      i32.store offset=20
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $5
      local.get $6
      i32.store offset=60
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=16
      local.get $1
      local.get $6
      call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 54208
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 55632
   i32.store offset=16
   i32.const 54208
   i32.const 55632
   i32.const 0
   call $~lib/string/String#indexOf
   local.tee $2
   i32.const -1
   i32.ne
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 54208
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 55168
    i32.store offset=16
    i32.const 54208
    i32.const 55168
    local.get $2
    call $~lib/string/String#indexOf
    i32.const -1
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 54208
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 55680
     i32.store offset=16
     i32.const 54208
     i32.const 55680
     i32.const 0
     call $~lib/string/String#indexOf
     i32.const -1
     i32.ne
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 2
      i32.const 204
      i32.const 55728
      call $~lib/rt/__newArray
      local.tee $2
      i32.store offset=64
      global.get $~lib/memory/__stack_pointer
      local.set $3
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 119640
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.const 206
      call $~lib/rt/itcms/__new
      local.tee $5
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      i32.const 16
      call $~lib/arraybuffer/ArrayBuffer#constructor
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=8
      local.get $5
      local.get $6
      i32.store
      local.get $5
      local.get $6
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      local.get $5
      i32.const 3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      i32.const 48
      call $~lib/arraybuffer/ArrayBuffer#constructor
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=8
      local.get $5
      local.get $6
      i32.store offset=8
      local.get $5
      local.get $6
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      local.get $5
      i32.const 4
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      local.get $5
      i32.const 0
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      local.get $5
      i32.const 0
      i32.store offset=20
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $3
      local.get $5
      i32.store offset=68
      global.get $~lib/memory/__stack_pointer
      i32.const 55760
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=40
      global.get $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 119640
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.const 205
      call $~lib/rt/itcms/__new
      local.tee $3
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.store
      local.get $3
      i32.const 0
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.store offset=8
      local.get $3
      i32.const 0
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.store offset=12
      local.get $3
      i32.const 0
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 55760
      i32.store offset=8
      local.get $3
      i32.const 55760
      i32.store
      local.get $3
      i32.const 55760
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store offset=8
      local.get $3
      i32.const 0
      i32.store offset=4
      local.get $3
      i32.const 0
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=8
      local.get $3
      local.get $2
      i32.store offset=8
      local.get $3
      local.get $2
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=8
      local.get $3
      local.get $5
      i32.store offset=12
      local.get $3
      local.get $5
      i32.const 0
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=72
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 55760
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=40
      local.get $4
      i32.const 55760
      local.get $3
      call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 202
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=4
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/constants/generateUniqueId (result i32)
  (local $0 i32)
  (local $1 i64)
  (local $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  local.set $1
  call $~lib/math/NativeMath.random
  f64.const 1e4
  f64.mul
  f64.floor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 56768
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/util/number/itoa64
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $~lib/number/F64#toString
  local.tee $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 56800
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 56768
  i32.store offset=16
  i32.const 56800
  i32.const 56768
  i32.store
  i32.const 56800
  i32.const 56768
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 56800
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  i32.const 56808
  local.get $0
  i32.store
  i32.const 56800
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 56800
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  i32.const 56816
  local.get $3
  i32.store
  i32.const 56800
  local.get $3
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 56800
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=16
  i32.const 56800
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/resolang/EntangledNode#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=8
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.const 0
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $4
   local.get $0
   i32.store
   local.get $4
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   i32.store offset=20
   local.get $0
   i32.const 0
   local.get $1
   call $~lib/array/Array<u32>#__set
   local.get $0
   i32.const 1
   local.get $2
   call $~lib/array/Array<u32>#__set
   local.get $0
   i32.const 2
   local.get $3
   call $~lib/array/Array<u32>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 2
   i32.shl
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $2
   local.get $0
   i32.load offset=4
   local.get $1
   memory.copy
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $4
   local.get $2
   i32.store offset=4
   local.get $4
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $4
   local.get $0
   i32.store offset=8
   local.get $4
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.const 0
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/functionalBlocks.test/createTestNode (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f64) (param $5 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/resolang/EntangledNode#constructor
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $4
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $0
  local.get $5
  i32.store offset=8
  local.get $0
  local.get $5
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/functionalBlocks/stabilize (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $1
  i32.store
  local.get $1
  call $assembly/utils/entropyRate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 4
  call $assembly/utils/toFixed
  local.tee $4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp
  i32.const 4
  call $assembly/utils/toFixed
  local.tee $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 59520
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=20
  i32.const 59524
  local.get $3
  i32.store
  i32.const 59520
  local.get $3
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 59520
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=20
  i32.const 59532
  local.get $4
  i32.store
  i32.const 59520
  local.get $4
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 59520
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  i32.const 59540
  local.get $1
  i32.store
  i32.const 59520
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 59520
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  i32.const 59520
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/console/console.log
  local.get $2
  f64.const -0.03
  f64.lt
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp
   f64.const 0.9
   f64.gt
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   f64.load offset=16
   f64.const 0.05
   f64.add
   f64.const 1
   f64.min
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   f64.load offset=16
   i32.const 4
   call $assembly/utils/toFixed
   local.tee $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 59680
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   i32.const 59684
   local.get $1
   i32.store
   i32.const 59680
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 59680
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   i32.const 59692
   local.get $0
   i32.store
   i32.const 59680
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 59680
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=20
   i32.const 59680
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 59856
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  i32.const 59860
  local.get $0
  i32.store
  i32.const 59856
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 59856
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  i32.const 59856
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/resolang/ResonantFragment#constructor (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 208
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $4
   local.get $0
   i32.store
   local.get $4
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 3
   i32.const 7
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $5
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.load offset=4
   i32.store offset=20
   local.get $5
   i32.const 0
   local.get $1
   call $~lib/array/Array<f64>#__set
   local.get $5
   i32.const 1
   local.get $2
   call $~lib/array/Array<f64>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.shl
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 209
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $6
   local.get $5
   i32.load offset=4
   local.get $0
   memory.copy
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   local.get $4
   local.get $6
   i32.store offset=4
   local.get $4
   local.get $6
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $3
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/serialization/JSONBuilder#constructor@varargs (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 119640
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 13
    i32.const 211
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    call $~lib/object/Object#constructor
    local.tee $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.const 0
    i32.store8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.const 0
    i32.store8 offset=1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 61600
    i32.store offset=8
    local.get $0
    i32.const 61600
    i32.store offset=4
    local.get $0
    i32.const 61600
    i32.const 0
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.const 10
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.const 0
    i32.store8 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.get $0
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 17
   i32.const 210
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store8 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 0
   call $~lib/array/Array<~lib/string/String>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 1
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store8 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/serialization/JSONBuilder#startObject (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 55168
  i32.store offset=4
  local.get $1
  i32.const 55168
  call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 1
  i32.store8 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.add
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store8 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#repeat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.set $4
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $4
   i64.extend_i32_s
   local.get $1
   i64.extend_i32_s
   i64.mul
   i64.const 268435456
   i64.gt_u
  end
  if
   i32.const 1792
   i32.const 61904
   i32.const 334
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.eqz
  local.get $1
  i32.eqz
  i32.or
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 14928
   return
  end
  local.get $1
  i32.const 1
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $4
  i32.mul
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store offset=4
  local.get $4
  i32.const 1
  i32.shl
  local.tee $4
  local.get $1
  i32.mul
  local.set $1
  loop $while-continue|0
   local.get $1
   local.get $2
   i32.gt_u
   if
    local.get $2
    local.get $3
    i32.add
    local.get $0
    local.get $4
    memory.copy
    local.get $2
    local.get $4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/core/serialization/escapeJSON (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   i32.const 14928
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $7
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $7
     call $~lib/string/String#charAt
     local.tee $2
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     block $break|1
      block $case7|1
       block $case6|1
        block $case5|1
         block $case4|1
          block $case3|1
           block $case2|1
            block $case1|1
             local.get $2
             i32.const 0
             call $~lib/string/String#charCodeAt
             local.tee $1
             i32.const 34
             i32.ne
             if
              local.get $1
              i32.const 92
              i32.eq
              br_if $case1|1
              local.get $1
              i32.const 8
              i32.eq
              br_if $case2|1
              local.get $1
              i32.const 12
              i32.eq
              br_if $case3|1
              local.get $1
              i32.const 10
              i32.eq
              br_if $case4|1
              local.get $1
              i32.const 13
              i32.eq
              br_if $case5|1
              local.get $1
              i32.const 9
              i32.eq
              br_if $case6|1
              br $case7|1
             end
             global.get $~lib/memory/__stack_pointer
             local.get $11
             i32.store offset=4
             global.get $~lib/memory/__stack_pointer
             i32.const 61952
             i32.store offset=12
             global.get $~lib/memory/__stack_pointer
             local.get $11
             i32.const 61952
             call $~lib/string/String.__concat
             local.tee $11
             i32.store
             br $break|1
            end
            global.get $~lib/memory/__stack_pointer
            local.get $11
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            i32.const 61984
            i32.store offset=12
            global.get $~lib/memory/__stack_pointer
            local.get $11
            i32.const 61984
            call $~lib/string/String.__concat
            local.tee $11
            i32.store
            br $break|1
           end
           global.get $~lib/memory/__stack_pointer
           local.get $11
           i32.store offset=4
           global.get $~lib/memory/__stack_pointer
           i32.const 62016
           i32.store offset=12
           global.get $~lib/memory/__stack_pointer
           local.get $11
           i32.const 62016
           call $~lib/string/String.__concat
           local.tee $11
           i32.store
           br $break|1
          end
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.store offset=4
          global.get $~lib/memory/__stack_pointer
          i32.const 62048
          i32.store offset=12
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.const 62048
          call $~lib/string/String.__concat
          local.tee $11
          i32.store
          br $break|1
         end
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store offset=4
         global.get $~lib/memory/__stack_pointer
         i32.const 62080
         i32.store offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.const 62080
         call $~lib/string/String.__concat
         local.tee $11
         i32.store
         br $break|1
        end
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        i32.const 62112
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.const 62112
        call $~lib/string/String.__concat
        local.tee $11
        i32.store
        br $break|1
       end
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       i32.const 62144
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.const 62144
       call $~lib/string/String.__concat
       local.tee $11
       i32.store
       br $break|1
      end
      local.get $1
      i32.const 32
      i32.lt_s
      local.get $1
      i32.const 126
      i32.gt_s
      i32.or
      if
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.set $5
       global.get $~lib/memory/__stack_pointer
       i32.const 62176
       i32.store offset=16
       local.get $1
       i32.const 16
       call $~lib/number/I32#toString
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store offset=24
       global.get $~lib/memory/__stack_pointer
       i32.const 15216
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 119640
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       i64.const 0
       i64.store
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store
       local.get $2
       i32.const 20
       i32.sub
       i32.load offset=16
       i32.const -2
       i32.and
       local.set $6
       global.get $~lib/memory/__stack_pointer
       i32.const 15216
       i32.store
       block $__inlined_func$~lib/string/String#padStart$3907
        i32.const 15212
        i32.load
        i32.const -2
        i32.and
        local.tee $10
        i32.eqz
        local.get $6
        i32.const 8
        i32.gt_u
        i32.or
        if
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         br $__inlined_func$~lib/string/String#padStart$3907
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.const 2
        call $~lib/rt/itcms/__new
        local.tee $1
        i32.store offset=4
        i32.const 8
        local.get $6
        i32.sub
        local.tee $9
        local.get $10
        i32.gt_u
        if
         local.get $9
         local.get $9
         i32.const 2
         i32.sub
         local.get $10
         i32.div_u
         local.get $10
         i32.mul
         local.tee $3
         i32.sub
         local.set $4
         i32.const 0
         local.set $8
         loop $while-continue|0
          local.get $3
          local.get $8
          i32.gt_u
          if
           local.get $1
           local.get $8
           i32.add
           i32.const 15216
           local.get $10
           memory.copy
           local.get $8
           local.get $10
           i32.add
           local.set $8
           br $while-continue|0
          end
         end
         local.get $1
         local.get $3
         i32.add
         i32.const 15216
         local.get $4
         memory.copy
        else
         local.get $1
         i32.const 15216
         local.get $9
         memory.copy
        end
        local.get $1
        local.get $9
        i32.add
        local.get $2
        local.get $6
        memory.copy
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $1
        local.set $2
       end
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store offset=20
       i32.const 62176
       local.get $2
       call $~lib/string/String.__concat
       local.set $1
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       local.get $5
       local.get $11
       local.get $1
       call $~lib/string/String.__concat
       local.tee $11
       i32.store
      else
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $11
       local.get $2
       call $~lib/string/String.__concat
       local.tee $11
       i32.store
      end
     end
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/serialization/JSONBuilder#addFieldInternal (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load8_u offset=16
  if
   i32.const 61712
   i32.const 61792
   i32.const 269
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load8_u offset=4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 55232
   i32.store offset=4
   local.get $3
   i32.const 55232
   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $3
  i32.store
  local.get $3
  i32.load8_u offset=1
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 61872
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $4
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=4
   local.tee $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $4
   local.get $0
   i32.load offset=12
   call $~lib/string/String#repeat
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   i32.const 61872
   local.get $4
   call $~lib/string/String.__concat
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   local.get $4
   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 55296
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  call $assembly/core/serialization/escapeJSON
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  i32.const 55296
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 62208
  i32.store offset=12
  local.get $1
  i32.const 62208
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $3
  local.get $1
  call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $1
  i32.store
  local.get $1
  i32.load8_u offset=1
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 62240
   i32.store offset=4
   local.get $1
   i32.const 62240
   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $1
  local.get $2
  call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store8 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/serialization/JSONBuilder#addNumberField (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  block $__inlined_func$assembly/core/serialization/serializeNumber$1751 (result i32)
   i32.const 61680
   local.get $2
   local.get $2
   f64.ne
   br_if $__inlined_func$assembly/core/serialization/serializeNumber$1751
   drop
   i32.const 61680
   local.get $2
   local.get $2
   f64.sub
   f64.const 0
   f64.ne
   br_if $__inlined_func$assembly/core/serialization/serializeNumber$1751
   drop
   local.get $2
   call $~lib/number/F64#toString
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $3
  call $assembly/core/serialization/JSONBuilder#addFieldInternal
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/staticarray/StaticArray<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 1584
   i32.const 62320
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/core/serialization/JSONBuilder#addRawField (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/core/serialization/JSONBuilder#addFieldInternal
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/serialization/JSONBuilder#endObject (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.sub
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $1
  i32.store
  local.get $1
  i32.load8_u offset=1
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load8_u offset=4
  else
   i32.const 1
  end
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 61872
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   local.tee $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $2
   local.get $0
   i32.load offset=12
   call $~lib/string/String#repeat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   i32.const 61872
   local.get $2
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 55200
  i32.store offset=4
  local.get $1
  i32.const 55200
  call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store8 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/string/String>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $0
  local.get $1
  call $~lib/util/string/joinStringArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/serialization/JSONBuilder#build (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=4
  local.get $0
  i32.const 14928
  call $~lib/array/Array<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/resolang/ResonantFragment#toJSON (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  i32.const 0
  global.set $~argumentsLength
  global.get $~lib/memory/__stack_pointer
  call $assembly/core/serialization/JSONBuilder#constructor@varargs
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $assembly/core/serialization/JSONBuilder#startObject
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 61632
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $1
  i32.const 61632
  local.get $0
  f64.load offset=8
  call $assembly/core/serialization/JSONBuilder#addNumberField
  drop
  global.get $~lib/memory/__stack_pointer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.const 0
  call $~lib/staticarray/StaticArray<f64>#__get
  call $~lib/number/F64#toString
  local.tee $5
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $6
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  call $~lib/staticarray/StaticArray<f64>#__get
  call $~lib/number/F64#toString
  local.tee $6
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 62272
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  i32.const 62276
  local.get $5
  i32.store
  i32.const 62272
  local.get $5
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 62272
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  i32.const 62284
  local.get $6
  i32.store
  i32.const 62272
  local.get $6
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 62272
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=8
  local.get $1
  i32.const 62272
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.tee $1
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 62384
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $2
  i32.const 62384
  local.get $1
  call $assembly/core/serialization/JSONBuilder#addRawField
  drop
  i32.const 55168
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 55168
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $6
  i32.store offset=32
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   call $~lib/array/Array<u32>#get:length
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=4
    local.get $6
    local.get $3
    call $~lib/array/Array<u32>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=4
    local.get $7
    local.get $5
    call $"~lib/map/Map<u32,f64>#get"
    local.set $4
    local.get $3
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 55232
     call $~lib/string/String.__concat
     local.tee $1
     i32.store offset=28
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.const 10
    call $~lib/util/number/utoa32
    local.tee $8
    i32.store offset=36
    global.get $~lib/memory/__stack_pointer
    local.get $4
    call $~lib/number/F64#toString
    local.tee $5
    i32.store offset=40
    global.get $~lib/memory/__stack_pointer
    i32.const 62416
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=44
    i32.const 62420
    local.get $8
    i32.store
    i32.const 62416
    local.get $8
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 62416
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=44
    i32.const 62428
    local.get $5
    i32.store
    i32.const 62416
    local.get $5
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 62416
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 14928
    i32.store offset=44
    i32.const 62416
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $7
    local.get $1
    local.get $5
    call $~lib/string/String.__concat
    local.tee $1
    i32.store offset=28
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 55200
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 55200
  call $~lib/string/String.__concat
  local.tee $0
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 62464
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=44
  local.get $2
  i32.const 62464
  local.get $0
  call $assembly/core/serialization/JSONBuilder#addRawField
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  call $assembly/core/serialization/JSONBuilder#endObject
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/core/serialization/JSONBuilder#build
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/resolang/ResonantFragment#toString (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/resolang/ResonantFragment#toJSON
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/functionalBlocks/teleport (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  global.get $assembly/resolang/currentNode
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 60768
   i32.store
   i32.const 60768
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/resolang/currentNode
  local.tee $2
  i32.store offset=4
  local.get $2
  i32.eqz
  if
   i32.const 25808
   i32.const 60912
   i32.const 50
   i32.const 34
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp
  f64.const 0.8
  f64.gt
  local.tee $2
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp
   f64.const 0.8
   f64.gt
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load offset=8
  i32.const 4
  call $assembly/utils/toFixed
  local.tee $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.set $4
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/resolang/currentNode
  local.tee $5
  i32.store offset=16
  local.get $5
  i32.eqz
  if
   i32.const 25808
   i32.const 60912
   i32.const 52
   i32.const 98
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $4
  local.get $5
  i32.load
  local.tee $4
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $5
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 28192
  i32.const 28224
  local.get $2
  select
  local.tee $6
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp
  i32.const 4
  call $assembly/utils/toFixed
  local.tee $7
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 61312
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=36
  i32.const 61316
  local.get $3
  i32.store
  i32.const 61312
  local.get $3
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 61312
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=36
  i32.const 61324
  local.get $4
  i32.store
  i32.const 61312
  local.get $4
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 61312
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=36
  i32.const 61332
  local.get $5
  i32.store
  i32.const 61312
  local.get $5
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 61312
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=36
  i32.const 61340
  local.get $6
  i32.store
  i32.const 61312
  local.get $6
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 61312
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=36
  i32.const 61348
  local.get $7
  i32.store
  i32.const 61312
  local.get $7
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 61312
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=36
  i32.const 61312
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/console/console.log
  local.get $2
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp
   f64.const 0.85
   f64.gt
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/resolang/ResonantFragment#toString
   local.tee $0
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $1
   i32.store offset=44
   global.get $~lib/memory/__stack_pointer
   i32.const 61552
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=36
   i32.const 61556
   local.get $0
   i32.store
   i32.const 61552
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 61552
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=36
   i32.const 61564
   local.get $1
   i32.store
   i32.const 61552
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 61552
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=36
   i32.const 61552
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 62496
  i32.store
  i32.const 62496
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/functionalBlocks/entangled (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp
  f64.const 0.8
  f64.gt
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp
   f64.const 0.8
   f64.gt
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/functionalBlocks/observe (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 64496
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store offset=8
  i32.const 64496
  local.get $1
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  f64.const 0.7
  f64.gt
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=8
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   f64.load offset=16
   i32.const 4
   call $assembly/utils/toFixed
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 64816
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   i32.const 64820
   local.get $1
   i32.store
   i32.const 64816
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 64816
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   i32.const 64828
   local.get $0
   i32.store
   i32.const 64816
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 64816
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=8
   i32.const 64816
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/console/console.log
   i32.const 0
   call $~lib/array/Array<f64>#constructor
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/functionalBlocks.test/runAllFunctionalBlocksTests
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 59136
   i32.store
   i32.const 59136
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 5
   i32.const 3
   i32.const 7
   i32.const 59264
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.95
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.load offset=16
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $assembly/functionalBlocks/stabilize
   i32.const 1
   i32.ne
   if
    i32.const 59888
    i32.const 60000
    i32.const 27
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $1
   local.get $2
   f64.load offset=16
   f64.lt
   i32.eqz
   if
    i32.const 60112
    i32.const 60000
    i32.const 28
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 60224
   i32.store
   i32.const 60224
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 5
   i32.const 3
   i32.const 7
   i32.const 60352
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.5
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $assembly/functionalBlocks/stabilize
   if
    i32.const 60416
    i32.const 60000
    i32.const 34
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 60544
   i32.store
   i32.const 60544
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 60672
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.9
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 60736
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   i32.const 60704
   i32.const 7
   i32.const 11
   i32.const 13
   f64.const 0.9
   local.get $4
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 2
   f64.const 0.5
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   f64.const 0
   f64.const 0
   f64.const 0.1
   call $assembly/resolang/ResonantFragment#constructor
   local.tee $4
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.set $assembly/resolang/currentNode
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $4
   local.get $3
   call $assembly/functionalBlocks/teleport
   i32.const 1
   i32.ne
   if
    i32.const 62608
    i32.const 60000
    i32.const 46
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $assembly/resolang/currentNode
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 62784
   i32.store
   i32.const 62784
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 62880
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 60704
   i32.const 7
   i32.const 11
   i32.const 13
   f64.const 0.9
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   i32.const 2
   f64.const 0.5
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   f64.const 0
   f64.const 0
   f64.const 0.1
   call $assembly/resolang/ResonantFragment#constructor
   local.tee $3
   i32.store offset=16
   i32.const 0
   global.set $assembly/resolang/currentNode
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $3
   local.get $2
   call $assembly/functionalBlocks/teleport
   if
    i32.const 62912
    i32.const 60000
    i32.const 60
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 63024
   i32.store
   i32.const 63024
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 63152
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.5
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 63184
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   i32.const 60704
   i32.const 7
   i32.const 11
   i32.const 13
   f64.const 0.9
   local.get $4
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 2
   f64.const 0.5
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   f64.const 0
   f64.const 0
   f64.const 0.1
   call $assembly/resolang/ResonantFragment#constructor
   local.tee $4
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.set $assembly/resolang/currentNode
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $4
   local.get $3
   call $assembly/functionalBlocks/teleport
   if
    i32.const 63216
    i32.const 60000
    i32.const 72
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $assembly/resolang/currentNode
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 63344
   i32.store
   i32.const 63344
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 63456
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.9
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 63488
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   i32.const 60704
   i32.const 7
   i32.const 11
   i32.const 13
   f64.const 0.5
   local.get $4
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 2
   f64.const 0.5
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   f64.const 0
   f64.const 0
   f64.const 0.1
   call $assembly/resolang/ResonantFragment#constructor
   local.tee $4
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   global.set $assembly/resolang/currentNode
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $4
   local.get $3
   call $assembly/functionalBlocks/teleport
   if
    i32.const 63520
    i32.const 60000
    i32.const 85
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $assembly/resolang/currentNode
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 63648
   i32.store
   i32.const 63648
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 63776
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.85
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 63808
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   i32.const 60704
   i32.const 7
   i32.const 11
   i32.const 13
   f64.const 0.85
   local.get $4
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   local.get $3
   call $assembly/functionalBlocks/entangled
   i32.const 1
   i32.ne
   if
    i32.const 63840
    i32.const 60000
    i32.const 93
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 63968
   i32.store
   i32.const 63968
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 64096
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.85
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 64128
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   i32.const 60704
   i32.const 7
   i32.const 11
   i32.const 13
   f64.const 0.75
   local.get $4
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   local.get $3
   call $assembly/functionalBlocks/entangled
   if
    i32.const 64160
    i32.const 60000
    i32.const 100
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 64304
   i32.store
   i32.const 64304
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 64448
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.8
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $assembly/functionalBlocks/observe
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 64864
    i32.const 60000
    i32.const 106
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$assembly/core/arrays/arrayEquals<f64>$3721 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    i32.const 3
    i32.const 3
    i32.const 7
    i32.const 64992
    call $~lib/rt/__newArray
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 119640
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    call $~lib/array/Array<u32>#get:length
    local.get $4
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     br $__inlined_func$assembly/core/arrays/arrayEquals<f64>$3721
    end
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     call $~lib/array/Array<u32>#get:length
     local.get $0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store
      local.get $2
      local.get $0
      call $~lib/array/Array<f64>#__get
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      local.get $3
      local.get $0
      call $~lib/array/Array<f64>#__get
      local.get $1
      f64.ne
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$assembly/core/arrays/arrayEquals<f64>$3721
      end
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   i32.eqz
   if
    i32.const 65040
    i32.const 60000
    i32.const 107
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 65152
   i32.store
   i32.const 65152
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 65296
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.5
   local.get $2
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/functionalBlocks/observe
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   if
    i32.const 65328
    i32.const 60000
    i32.const 113
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 65472
   i32.store
   i32.const 65472
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 65616
   i32.store
   i32.const 65616
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/operators.test/createTestFragment (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/resolang/ResonantFragment#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/operators/tensor (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $7
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $7
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $8
  i32.store offset=12
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   call $~lib/array/Array<u32>#get:length
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    local.get $3
    call $~lib/array/Array<u32>#__get
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=4
    local.get $7
    local.get $9
    call $"~lib/map/Map<u32,f64>#get"
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    local.get $9
    local.get $10
    call $"~lib/map/Map<u32,f64>#set"
    local.get $2
    local.get $10
    local.get $10
    f64.mul
    f64.add
    local.set $2
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $3
  i32.store offset=16
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $6
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    local.get $6
    call $~lib/array/Array<u32>#__get
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $8
    i32.store offset=4
    local.get $8
    local.get $7
    call $"~lib/map/Map<u32,f64>#get"
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    local.get $7
    call $"~lib/map/Map<u32,f64>#has"
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $2
     local.get $4
     local.get $7
     call $"~lib/map/Map<u32,f64>#get"
     local.tee $11
     local.get $11
     f64.mul
     f64.sub
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     local.get $7
     local.get $11
     local.get $10
     f64.add
     call $"~lib/map/Map<u32,f64>#set"
    else
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     local.get $7
     local.get $10
     call $"~lib/map/Map<u32,f64>#set"
    end
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $2
    local.get $4
    local.get $7
    call $"~lib/map/Map<u32,f64>#get"
    local.tee $2
    local.get $2
    f64.mul
    f64.add
    local.set $2
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  local.get $2
  f64.sqrt
  local.tee $2
  f64.const 0
  f64.gt
  if
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $6
   i32.store offset=20
   i32.const 0
   local.set $3
   loop $for-loop|2
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=4
    local.get $6
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=4
     local.get $6
     local.get $3
     call $~lib/array/Array<u32>#__get
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $4
     local.get $7
     local.get $4
     local.get $7
     call $"~lib/map/Map<u32,f64>#get"
     local.get $2
     f64.div
     call $"~lib/map/Map<u32,f64>#set"
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|2
    end
   end
  end
  f64.const 0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  call $"~lib/map/Map<u32,f64>#values"
  local.tee $3
  i32.store offset=24
  loop $for-loop|3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $5
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    local.get $5
    call $~lib/array/Array<f64>#__get
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $10
    local.get $3
    local.get $5
    call $~lib/array/Array<f64>#__get
    f64.mul
    local.tee $10
    f64.const 0
    f64.gt
    if
     local.get $2
     local.get $10
     local.get $10
     call $~lib/math/NativeMath.log
     f64.mul
     f64.sub
     local.set $2
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|3
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.load offset=8
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $10
  local.get $1
  f64.load offset=8
  f64.add
  local.tee $10
  f64.const 0
  f64.gt
  if (result f64)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=8
   local.get $10
   f64.div
  else
   f64.const 0.5
  end
  local.set $11
  local.get $10
  f64.const 0
  f64.gt
  if (result f64)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.load offset=8
   local.get $10
   f64.div
  else
   f64.const 0.5
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store offset=4
  local.get $3
  i32.const 0
  call $~lib/staticarray/StaticArray<f64>#__get
  local.get $11
  f64.mul
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $3
  i32.store offset=4
  local.get $12
  local.get $3
  i32.const 0
  call $~lib/staticarray/StaticArray<f64>#__get
  local.get $10
  f64.mul
  f64.add
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store offset=4
  local.get $0
  i32.const 1
  call $~lib/staticarray/StaticArray<f64>#__get
  local.get $11
  f64.mul
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $0
  i32.store offset=4
  local.get $11
  local.get $0
  i32.const 1
  call $~lib/staticarray/StaticArray<f64>#__get
  local.get $10
  f64.mul
  f64.add
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $12
  local.get $10
  local.get $2
  call $assembly/resolang/ResonantFragment#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<u32,f64>#get:size" (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=20
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/operators.test/testCollapseOperation
  (local $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 2
   f64.const 0.6
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   f64.const 0.8
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   f64.const 1
   f64.const 2
   f64.const 1.2
   call $assembly/tests/operators.test/createTestFragment
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $7
   i32.store offset=12
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $7
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     local.get $7
     local.get $0
     call $~lib/array/Array<u32>#__get
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load
     local.tee $8
     i32.store offset=4
     local.get $8
     local.get $1
     call $"~lib/map/Map<u32,f64>#get"
     local.tee $9
     local.get $9
     f64.mul
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     local.get $1
     local.get $9
     call $"~lib/map/Map<u32,f64>#set"
     local.get $2
     local.get $9
     f64.add
     local.set $2
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   call $~lib/math/NativeMath.random
   local.get $2
   f64.mul
   local.set $9
   f64.const 0
   local.set $2
   i32.const 0
   local.set $0
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $7
    call $~lib/array/Array<u32>#get:length
    local.get $6
    i32.gt_s
    if
     block $for-break1
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=4
      local.get $7
      local.get $6
      call $~lib/array/Array<u32>#__get
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      local.get $9
      local.get $2
      local.get $5
      local.get $1
      call $"~lib/map/Map<u32,f64>#get"
      f64.add
      local.tee $2
      f64.lt
      if
       local.get $1
       local.set $0
       br $for-break1
      end
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|1
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $1
   i32.store offset=16
   local.get $0
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    local.get $0
    f64.const 1
    call $"~lib/map/Map<u32,f64>#set"
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=4
   local.tee $0
   i32.store offset=8
   local.get $0
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#__get
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=4
   local.tee $0
   i32.store offset=8
   local.get $1
   local.get $2
   local.get $0
   i32.const 1
   call $~lib/staticarray/StaticArray<f64>#__get
   f64.const 0
   call $assembly/resolang/ResonantFragment#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   local.get $1
   call $"~lib/map/Map<u32,f64>#get:size"
   i32.const 1
   i32.ne
   if
    i32.const 70688
    i32.const 70192
    i32.const 54
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=8
   f64.const 0
   f64.ne
   if
    i32.const 70816
    i32.const 70192
    i32.const 55
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#__get
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#__get
   local.get $2
   f64.ne
   if
    i32.const 70928
    i32.const 70192
    i32.const 56
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 1
   call $~lib/staticarray/StaticArray<f64>#__get
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 1
   call $~lib/staticarray/StaticArray<f64>#__get
   local.get $2
   f64.ne
   if
    i32.const 71008
    i32.const 70192
    i32.const 57
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 0
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    i32.const 0
    call $~lib/array/Array<u32>#__get
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $0
    i32.store offset=4
    local.get $0
    local.get $1
    call $"~lib/map/Map<u32,f64>#get"
    f64.const 1
    f64.ne
    if
     i32.const 71088
     i32.const 70192
     i32.const 63
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/operators.test/testRotatePhaseOperation
  (local $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 71280
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 71328
   call $~lib/rt/__newArray
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   i32.const 71280
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.8
   local.get $4
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   f64.load offset=16
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load offset=8
    local.tee $4
    i32.store
    local.get $4
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load offset=8
     local.tee $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load offset=8
     local.tee $5
     i32.store offset=4
     local.get $4
     local.get $0
     local.get $5
     local.get $0
     call $~lib/array/Array<f64>#__get
     f64.const 0.7853981633974483
     f64.add
     f64.const 6.283185307179586
     call $~lib/math/NativeMath.mod
     call $~lib/array/Array<f64>#__set
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load offset=8
     local.tee $4
     i32.store
     local.get $4
     local.get $0
     call $~lib/array/Array<f64>#__get
     f64.const 0
     f64.lt
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.load offset=8
      local.tee $4
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.load offset=8
      local.tee $5
      i32.store offset=4
      local.get $4
      local.get $0
      local.get $5
      local.get $0
      call $~lib/array/Array<f64>#__get
      f64.const 6.283185307179586
      f64.add
      call $~lib/array/Array<f64>#__set
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   local.get $3
   f64.load offset=16
   f64.const -0.0125
   f64.add
   f64.const 0
   f64.max
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=8
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<f64>#__get
   f64.const 0.5
   f64.gt
   i32.eqz
   if
    i32.const 71376
    i32.const 70192
    i32.const 74
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=8
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<f64>#__get
   f64.const 1
   f64.gt
   i32.eqz
   if
    i32.const 71456
    i32.const 70192
    i32.const 75
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=8
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<f64>#__get
   f64.const 1.5
   f64.gt
   i32.eqz
   if
    i32.const 71536
    i32.const 70192
    i32.const 76
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $2
   local.get $3
   f64.load offset=16
   f64.gt
   i32.eqz
   if
    i32.const 71616
    i32.const 70192
    i32.const 77
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load offset=8
    local.tee $0
    i32.store
    local.get $0
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load offset=8
     local.tee $0
     i32.store
     local.get $0
     local.get $1
     call $~lib/array/Array<f64>#__get
     f64.const 0
     f64.ge
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.load offset=8
      local.tee $0
      i32.store
      local.get $0
      local.get $1
      call $~lib/array/Array<f64>#__get
      f64.const 6.283185307179586
      f64.lt
     else
      i32.const 0
     end
     i32.eqz
     if
      i32.const 71712
      i32.const 70192
      i32.const 81
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/operators/linkEntanglement (param $0 i32) (param $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  (local $7 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $1
  f64.load offset=16
  f64.add
  f64.const 0.5
  f64.mul
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $6
  i32.store
  local.get $6
  call $~lib/array/Array<u32>#get:length
  f64.convert_i32_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=8
  local.tee $6
  i32.store
  local.get $4
  local.get $6
  call $~lib/array/Array<u32>#get:length
  f64.convert_i32_s
  f64.min
  local.set $4
  loop $for-loop|0
   local.get $3
   f64.convert_i32_s
   local.get $4
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $6
    i32.store
    local.get $6
    local.get $3
    call $~lib/array/Array<f64>#__get
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=8
    local.tee $6
    i32.store
    local.get $2
    local.get $7
    local.get $6
    local.get $3
    call $~lib/array/Array<f64>#__get
    f64.sub
    f64.abs
    f64.add
    local.set $2
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $5
  f64.const 1
  local.get $2
  local.get $4
  f64.div
  local.get $2
  local.get $4
  f64.const 0
  f64.gt
  select
  f64.const 6.283185307179586
  f64.div
  f64.sub
  f64.mul
  local.tee $2
  f64.const 0.75
  f64.gt
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   f64.load offset=16
   local.get $2
   f64.const -0.75
   f64.add
   f64.const 5
   f64.div
   local.tee $2
   f64.add
   f64.const 1
   f64.min
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $1
   f64.load offset=16
   local.get $2
   f64.add
   f64.const 1
   f64.min
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $6
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   f64.load offset=16
   i32.const 4
   call $assembly/utils/toFixed
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   f64.load offset=16
   i32.const 4
   call $assembly/utils/toFixed
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 72224
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=24
   i32.const 72228
   local.get $3
   i32.store
   i32.const 72224
   local.get $3
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 72224
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=24
   i32.const 72236
   local.get $6
   i32.store
   i32.const 72224
   local.get $6
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 72224
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   i32.const 72244
   local.get $0
   i32.store
   i32.const 72224
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 72224
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=24
   i32.const 72252
   local.get $1
   i32.store
   i32.const 72224
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 72224
   i32.store offset=4
   i32.const 72224
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $1
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.const 4
   call $assembly/utils/toFixed
   local.tee $3
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 72400
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   i32.const 72404
   local.get $0
   i32.store
   i32.const 72400
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 72400
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=24
   i32.const 72412
   local.get $1
   i32.store
   i32.const 72400
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 72400
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=24
   i32.const 72420
   local.get $3
   i32.store
   i32.const 72400
   local.get $3
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 72400
   i32.store offset=4
   i32.const 72400
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=24
  local.get $0
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/operators/route~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/operators/route (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 60
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $9
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $6
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 73536
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=12
   local.tee $7
   i32.const 2
   i32.const 91
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i32.load offset=4
   local.set $11
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $4
    local.get $7
    local.get $2
    i32.load offset=12
    local.tee $12
    local.get $7
    local.get $12
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.const 2
     i32.shl
     local.tee $12
     local.get $2
     i32.load offset=4
     i32.add
     i32.load
     local.tee $13
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     i32.const 3
     global.set $~argumentsLength
     global.get $~lib/memory/__stack_pointer
     local.get $13
     local.get $4
     local.get $2
     i32.const 73536
     i32.load
     call_indirect (type $4)
     local.tee $13
     i32.store offset=16
     local.get $11
     local.get $12
     i32.add
     local.get $13
     i32.store
     local.get $8
     local.get $13
     i32.const 1
     call $~lib/rt/itcms/__link
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 73568
   i32.store offset=16
   local.get $10
   local.get $8
   i32.const 73568
   call $~lib/array/Array<~lib/string/String>#join
   local.tee $4
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 73488
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=16
   i32.const 73492
   local.get $9
   i32.store
   i32.const 73488
   local.get $9
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 73488
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=16
   i32.const 73500
   local.get $6
   i32.store
   i32.const 73488
   local.get $6
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 73488
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   i32.const 73508
   local.get $4
   i32.store
   i32.const 73488
   local.get $4
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 73488
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=16
   i32.const 73488
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   i32.const 0
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/array/Array<assembly/resolang/EntangledNode>#slice@varargs$110 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     i32.load offset=12
     local.tee $4
     i32.const 0
     local.get $4
     i32.const 0
     i32.le_s
     select
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $4
     local.get $6
     i32.sub
     local.tee $4
     i32.const 0
     local.get $4
     i32.const 0
     i32.gt_s
     select
     local.tee $4
     i32.const 2
     i32.const 212
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $7
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     i32.load offset=4
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     local.set $6
     i32.const 0
     local.set $2
     local.get $4
     i32.const 2
     i32.shl
     local.set $4
     loop $while-continue|0
      local.get $2
      local.get $4
      i32.lt_u
      if
       local.get $2
       local.get $8
       i32.add
       local.get $2
       local.get $6
       i32.add
       i32.load
       local.tee $9
       i32.store
       local.get $7
       local.get $9
       i32.const 1
       call $~lib/rt/itcms/__link
       local.get $2
       i32.const 4
       i32.add
       local.set $2
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     br $__inlined_func$~lib/array/Array<assembly/resolang/EntangledNode>#slice@varargs$110
    end
    br $folding-inner1
   end
   local.tee $2
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $2
   local.get $1
   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     local.get $3
     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
     local.tee $1
     i32.store offset=40
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     f64.load offset=16
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $14
     local.get $1
     f64.load offset=16
     f64.add
     f64.const 0.5
     f64.mul
     local.tee $14
     f64.const 0.5
     f64.lt
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load
      local.tee $0
      i32.store offset=44
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load
      local.tee $1
      i32.store offset=48
      global.get $~lib/memory/__stack_pointer
      i32.const 73728
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=16
      i32.const 73732
      local.get $0
      i32.store
      i32.const 73728
      local.get $0
      i32.const 1
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      i32.const 73728
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=16
      i32.const 73740
      local.get $1
      i32.store
      i32.const 73728
      local.get $1
      i32.const 1
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      i32.const 73728
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 14928
      i32.store offset=16
      i32.const 73728
      call $~lib/staticarray/StaticArray<~lib/string/String>#join
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store
      local.get $0
      call $~lib/console/console.log
      global.get $~lib/memory/__stack_pointer
      i32.const 60
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      return
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $5
     f64.const 1
     local.get $14
     f64.div
     f64.const 1
     local.get $0
     f64.load offset=16
     f64.sub
     f64.const 0.5
     f64.mul
     f64.add
     f64.add
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $1
     local.tee $0
     i32.store offset=32
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $5
   local.get $2
   call $~lib/array/Array<u32>#get:length
   f64.convert_i32_s
   f64.const 2.5
   f64.mul
   f64.lt
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.const 4
    call $assembly/utils/toFixed
    local.tee $0
    i32.store offset=52
    global.get $~lib/memory/__stack_pointer
    i32.const 73904
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    i32.const 73908
    local.get $0
    i32.store
    i32.const 73904
    local.get $0
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 73904
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 14928
    i32.store offset=16
    i32.const 73904
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $~lib/console/console.log
    global.get $~lib/memory/__stack_pointer
    i32.const 60
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.const 4
    call $assembly/utils/toFixed
    local.tee $0
    i32.store offset=56
    global.get $~lib/memory/__stack_pointer
    i32.const 74112
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    i32.const 74116
    local.get $0
    i32.store
    i32.const 74112
    local.get $0
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 74112
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 14928
    i32.store offset=16
    i32.const 74112
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $~lib/console/console.log
    global.get $~lib/memory/__stack_pointer
    i32.const 60
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
   end
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/operators.test/runAllOperatorTests
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 65888
   i32.store
   i32.const 65888
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   f64.const 0.5
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   f64.const 0.3
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   f64.const 1
   f64.const 2
   f64.const 0.5
   call $assembly/tests/operators.test/createTestFragment
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 3
   f64.const 0.2
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 5
   f64.const 0.7
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   f64.const 3
   f64.const 4
   f64.const 0.8
   call $assembly/tests/operators.test/createTestFragment
   local.tee $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $2
   call $assembly/operators/tensor
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=4
   local.get $2
   i32.const 2
   call $"~lib/map/Map<u32,f64>#has"
   i32.eqz
   if
    i32.const 70080
    i32.const 70192
    i32.const 40
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=4
   local.get $2
   i32.const 3
   call $"~lib/map/Map<u32,f64>#has"
   i32.eqz
   if
    i32.const 70288
    i32.const 70192
    i32.const 41
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=4
   local.get $2
   i32.const 5
   call $"~lib/map/Map<u32,f64>#has"
   i32.eqz
   if
    i32.const 70416
    i32.const 70192
    i32.const 42
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=8
   f64.const 0
   f64.ge
   i32.eqz
   if
    i32.const 70528
    i32.const 70192
    i32.const 43
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 70608
   i32.store
   i32.const 70608
   call $~lib/console/console.log
   call $assembly/tests/operators.test/testCollapseOperation
   global.get $~lib/memory/__stack_pointer
   i32.const 71200
   i32.store
   i32.const 71200
   call $~lib/console/console.log
   call $assembly/tests/operators.test/testRotatePhaseOperation
   global.get $~lib/memory/__stack_pointer
   i32.const 71808
   i32.store
   i32.const 71808
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 71904
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.9
   local.get $2
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 71952
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 60704
   i32.const 7
   i32.const 11
   i32.const 13
   f64.const 0.85
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=16
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.load offset=16
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $2
   call $assembly/operators/linkEntanglement
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $1
   local.get $0
   f64.load offset=16
   f64.le
   i32.eqz
   if
    i32.const 72448
    i32.const 70192
    i32.const 95
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $4
   local.get $2
   f64.load offset=16
   f64.le
   i32.eqz
   if
    i32.const 72544
    i32.const 70192
    i32.const 96
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 72640
   i32.store
   i32.const 72640
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 72736
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   i32.const 59232
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.3
   local.get $2
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 72784
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 60704
   i32.const 7
   i32.const 11
   i32.const 13
   f64.const 0.4
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=16
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.load offset=16
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $2
   call $assembly/operators/linkEntanglement
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $1
   local.get $0
   f64.load offset=16
   f64.ne
   if
    i32.const 72832
    i32.const 70192
    i32.const 109
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $4
   local.get $2
   f64.load offset=16
   f64.ne
   if
    i32.const 72944
    i32.const 70192
    i32.const 110
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 73056
   i32.store
   i32.const 73056
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 36
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 73152
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 73184
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   i32.const 73152
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.9
   local.get $2
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 73216
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 73264
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 73216
   i32.const 7
   i32.const 11
   i32.const 13
   f64.const 0.8
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 73296
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 73328
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $3
   i32.const 73296
   i32.const 17
   i32.const 19
   i32.const 23
   f64.const 0.85
   local.get $5
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 212
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $6
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.load offset=4
   i32.store offset=24
   local.get $6
   i32.const 0
   local.get $2
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $5
   local.get $6
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=32
   local.get $0
   local.get $3
   local.get $6
   call $assembly/operators/route
   i32.const 1
   i32.ne
   if
    i32.const 74144
    i32.const 70192
    i32.const 121
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 74256
   i32.store
   i32.const 74256
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 36
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 73152
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 74336
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   i32.const 73152
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.4
   local.get $2
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 73216
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 74368
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $2
   i32.const 73216
   i32.const 7
   i32.const 11
   i32.const 13
   f64.const 0.1
   local.get $3
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 73296
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 74400
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $3
   i32.const 73296
   i32.const 17
   i32.const 19
   i32.const 23
   f64.const 0.3
   local.get $5
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 212
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $6
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.load offset=4
   i32.store offset=24
   local.get $6
   i32.const 0
   local.get $2
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $5
   local.get $6
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=32
   local.get $0
   local.get $3
   local.get $6
   call $assembly/operators/route
   if
    i32.const 74432
    i32.const 70192
    i32.const 132
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 74544
   i32.store
   i32.const 74544
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 71280
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 0
   i32.const 3
   i32.const 7
   i32.const 74624
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   i32.const 71280
   i32.const 2
   i32.const 3
   i32.const 5
   f64.const 0.75
   local.get $2
   call $assembly/tests/functionalBlocks.test/createTestNode
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTimestamp
   f64.const 0.75
   f64.ne
   if
    i32.const 74656
    i32.const 70192
    i32.const 139
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 74800
   i32.store
   i32.const 74800
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   f64.const 0.5
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   f64.const 0
   f64.const 0
   f64.const 1.23
   call $assembly/tests/operators.test/createTestFragment
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   f64.const 1.23
   f64.ne
   if
    i32.const 74880
    i32.const 70192
    i32.const 148
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 75024
   i32.store
   i32.const 75024
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 75104
   i32.store
   i32.const 75104
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/resolang/ResonantFragment.encode (result i32)
  (local $0 f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $3
  i32.store
  i32.const 2
  local.set $1
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   i32.const 56768
   i32.store offset=4
   local.get $2
   i32.const 56764
   i32.load
   i32.const 1
   i32.shr_u
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 56768
    i32.store offset=4
    i32.const 56768
    local.get $2
    call $~lib/string/String#charCodeAt
    local.set $7
    loop $while-continue|1
     i32.const 0
     local.set $6
     block $__inlined_func$assembly/core/math/isPrime$1923
      local.get $1
      i32.const 1
      i32.le_s
      br_if $__inlined_func$assembly/core/math/isPrime$1923
      i32.const 1
      local.set $6
      local.get $1
      i32.const 3
      i32.le_s
      br_if $__inlined_func$assembly/core/math/isPrime$1923
      i32.const 0
      local.set $6
      local.get $1
      i32.const 1
      i32.and
      if (result i32)
       local.get $1
       i32.const 3
       i32.rem_s
      else
       i32.const 0
      end
      i32.eqz
      br_if $__inlined_func$assembly/core/math/isPrime$1923
      i32.const 5
      local.set $4
      loop $while-continue|0
       local.get $4
       local.get $4
       i32.mul
       local.get $1
       i32.le_s
       if
        local.get $1
        local.get $4
        i32.rem_s
        if (result i32)
         local.get $1
         local.get $4
         i32.const 2
         i32.add
         i32.rem_s
        else
         i32.const 0
        end
        i32.eqz
        br_if $__inlined_func$assembly/core/math/isPrime$1923
        local.get $4
        i32.const 6
        i32.add
        local.set $4
        br $while-continue|0
       end
      end
      i32.const 1
      local.set $6
     end
     local.get $6
     i32.eqz
     if
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|1
     end
    end
    local.get $7
    f64.convert_i32_s
    f64.const 255
    f64.div
    f64.const -0.5
    call $~lib/math/NativeMath.exp
    f64.mul
    local.get $1
    f64.convert_i32_u
    f64.const 0.7853981633974483
    f64.mul
    call $~lib/math/NativeMath.cos
    f64.mul
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    local.get $1
    local.get $8
    call $"~lib/map/Map<u32,f64>#set"
    local.get $5
    local.get $8
    local.get $8
    f64.mul
    f64.add
    local.set $5
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $5
  f64.sqrt
  local.tee $8
  f64.const 0
  f64.gt
  if
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $1
   i32.store offset=8
   i32.const 0
   local.set $2
   loop $for-loop|2
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     local.get $2
     call $~lib/array/Array<u32>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=12
     local.get $3
     local.get $4
     local.get $3
     local.get $4
     call $"~lib/map/Map<u32,f64>#get"
     local.get $8
     f64.div
     call $"~lib/map/Map<u32,f64>#set"
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|2
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $"~lib/map/Map<u32,f64>#values"
  local.tee $2
  i32.store offset=16
  i32.const 0
  local.set $1
  loop $for-loop|3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    local.get $1
    call $~lib/array/Array<f64>#__get
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $8
    local.get $2
    local.get $1
    call $~lib/array/Array<f64>#__get
    f64.mul
    local.tee $8
    f64.const 0
    f64.gt
    if
     local.get $0
     local.get $8
     local.get $8
     call $~lib/math/NativeMath.log
     f64.mul
     f64.sub
     local.set $0
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|3
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 56768
  i32.store offset=4
  i32.const 56764
  i32.load
  i32.const 1
  i32.shr_u
  f64.convert_i32_s
  f64.const 0.5
  f64.mul
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 56768
  i32.store offset=4
  local.get $5
  i32.const 56764
  i32.load
  i32.const 1
  i32.shr_u
  f64.convert_i32_s
  f64.div
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $8
  local.get $5
  local.get $0
  call $assembly/resolang/ResonantFragment#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/tests/resonlang.test/createSimpleFragment (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 7
  f64.const 0.5
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 11
  f64.const 0.5
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 1
  f64.const 2
  f64.const 0.5
  call $assembly/resolang/ResonantFragment#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#includes (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/string/String#indexOf
  i32.const -1
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/staticarray/StaticArray<u32>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 1584
   i32.const 62320
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/resonlang.test/createSimpleNode (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 2
  i32.const 3
  i32.const 5
  call $assembly/resolang/EntangledNode#constructor
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 3
  i32.const 3
  i32.const 7
  i32.const 78576
  call $~lib/rt/__newArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/serialization/JSONBuilder#addStringField (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 55296
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $2
   call $assembly/core/serialization/escapeJSON
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   i32.const 55296
   local.get $2
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 55296
   i32.store offset=4
   local.get $2
   i32.const 55296
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $1
   local.get $2
   call $assembly/core/serialization/JSONBuilder#addFieldInternal
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/resolang/EntangledNode#toJSON (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  i32.const 0
  global.set $~argumentsLength
  global.get $~lib/memory/__stack_pointer
  call $assembly/core/serialization/JSONBuilder#constructor@varargs
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  local.get $3
  call $assembly/core/serialization/JSONBuilder#startObject
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 78624
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $4
  i32.store offset=12
  local.get $1
  i32.const 78624
  local.get $4
  call $assembly/core/serialization/JSONBuilder#addStringField
  drop
  global.get $~lib/memory/__stack_pointer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 0
  call $~lib/staticarray/StaticArray<u32>#__get
  i32.const 10
  call $~lib/util/number/utoa32
  local.tee $4
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.const 1
  call $~lib/staticarray/StaticArray<u32>#__get
  i32.const 10
  call $~lib/util/number/utoa32
  local.tee $5
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $6
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 2
  call $~lib/staticarray/StaticArray<u32>#__get
  i32.const 10
  call $~lib/util/number/utoa32
  local.tee $6
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  i32.const 78656
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  i32.const 78660
  local.get $4
  i32.store
  i32.const 78656
  local.get $4
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 78656
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  i32.const 78668
  local.get $5
  i32.store
  i32.const 78656
  local.get $5
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 78656
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  i32.const 78676
  local.get $6
  i32.store
  i32.const 78656
  local.get $6
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 78656
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=8
  local.get $1
  i32.const 78656
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.tee $1
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 78704
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $3
  i32.const 78704
  local.get $1
  call $assembly/core/serialization/JSONBuilder#addRawField
  drop
  i32.const 55376
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 55376
  i32.store offset=36
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $4
   i32.store offset=4
   local.get $4
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 55232
     call $~lib/string/String.__concat
     local.tee $1
     i32.store offset=36
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $5
    i32.store offset=12
    local.get $5
    local.get $2
    call $~lib/array/Array<f64>#__get
    call $~lib/number/F64#toString
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $4
    local.get $1
    local.get $5
    call $~lib/string/String.__concat
    local.tee $1
    i32.store offset=36
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 55408
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 55408
  call $~lib/string/String.__concat
  local.tee $1
  i32.store offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 78736
  i32.store offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  local.get $3
  i32.const 78736
  local.get $1
  call $assembly/core/serialization/JSONBuilder#addRawField
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 78784
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $1
  i32.const 78784
  local.get $0
  f64.load offset=16
  call $assembly/core/serialization/JSONBuilder#addNumberField
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  call $assembly/core/serialization/JSONBuilder#endObject
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/core/serialization/JSONBuilder#build
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/resolang/TeleportationChannel#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 214
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=16
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.store
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $3
  local.get $1
  i32.store offset=4
  local.get $3
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  f64.const 0.9
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $3
  local.get $2
  i32.store offset=16
  local.get $3
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/resolang/TeleportationChannel#toJSON (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const -64
  i32.add
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 64
  memory.fill
  i32.const 0
  global.set $~argumentsLength
  global.get $~lib/memory/__stack_pointer
  call $assembly/core/serialization/JSONBuilder#constructor@varargs
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=56
  local.get $1
  call $assembly/core/serialization/JSONBuilder#startObject
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  global.get $~lib/memory/__stack_pointer
  i32.const 73152
  i32.store offset=48
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=60
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=56
  local.get $2
  call $assembly/resolang/EntangledNode#toJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=52
  local.get $1
  i32.const 73152
  local.get $2
  call $assembly/core/serialization/JSONBuilder#addRawField
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 73296
  i32.store offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=48
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store offset=44
  local.get $2
  call $assembly/resolang/EntangledNode#toJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=40
  local.get $1
  i32.const 73296
  local.get $2
  call $assembly/core/serialization/JSONBuilder#addRawField
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 80000
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=32
  local.get $1
  i32.const 80000
  local.get $0
  f64.load offset=8
  call $assembly/core/serialization/JSONBuilder#addNumberField
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 80048
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $0
  i32.store offset=24
  local.get $0
  call $assembly/resolang/ResonantFragment#toJSON
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  local.get $1
  i32.const 80048
  local.get $0
  call $assembly/core/serialization/JSONBuilder#addRawField
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $0
  call $assembly/core/serialization/JSONBuilder#endObject
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  call $assembly/core/serialization/JSONBuilder#build
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const -64
  i32.sub
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/resolang/Attractor#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 215
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store
  local.get $4
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=8
  local.get $4
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $4
  local.get $0
  i32.store offset=8
  local.get $4
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $4
  local.get $1
  i32.store
  local.get $4
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $4
  local.get $2
  i32.store offset=4
  local.get $4
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $3
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/resolang/Attractor#toJSON (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  i32.const 0
  global.set $~argumentsLength
  global.get $~lib/memory/__stack_pointer
  call $assembly/core/serialization/JSONBuilder#constructor@varargs
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=24
  local.get $3
  call $assembly/core/serialization/JSONBuilder#startObject
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 82656
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $5
  i32.store offset=20
  local.get $1
  i32.const 82656
  local.get $5
  call $assembly/core/serialization/JSONBuilder#addStringField
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 78784
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $1
  i32.const 78784
  local.get $0
  f64.load offset=16
  call $assembly/core/serialization/JSONBuilder#addNumberField
  drop
  i32.const 55376
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 55376
  i32.store offset=28
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $5
   i32.store offset=4
   local.get $5
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 55232
     call $~lib/string/String.__concat
     local.tee $1
     i32.store offset=28
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $6
    i32.store offset=12
    local.get $6
    local.get $2
    call $~lib/array/Array<u32>#__get
    i32.const 10
    call $~lib/util/number/utoa32
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=8
    local.get $5
    local.get $1
    local.get $6
    call $~lib/string/String.__concat
    local.tee $1
    i32.store offset=28
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 55408
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 55408
  call $~lib/string/String.__concat
  local.tee $1
  i32.store offset=28
  i32.const 55376
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 55376
  i32.store offset=32
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $5
   i32.store offset=4
   local.get $5
   call $~lib/array/Array<u32>#get:length
   local.get $4
   i32.gt_s
   if
    local.get $4
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.const 55232
     call $~lib/string/String.__concat
     local.tee $2
     i32.store offset=32
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $6
    i32.store offset=12
    local.get $6
    local.get $4
    call $~lib/array/Array<f64>#__get
    call $~lib/number/F64#toString
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=8
    local.get $5
    local.get $2
    local.get $6
    call $~lib/string/String.__concat
    local.tee $2
    i32.store offset=32
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 55408
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 55408
  call $~lib/string/String.__concat
  local.tee $0
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 82688
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=36
  local.get $3
  i32.const 82688
  local.get $1
  call $assembly/core/serialization/JSONBuilder#addRawField
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 82720
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $1
  i32.const 82720
  local.get $0
  call $assembly/core/serialization/JSONBuilder#addRawField
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  call $assembly/core/serialization/JSONBuilder#endObject
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/core/serialization/JSONBuilder#build
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/resonlang.test/runAllResoLangTests
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 75344
   i32.store
   i32.const 75344
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   f64.const 0.5
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   f64.const 0.5
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   f64.const 1
   f64.const 2
   f64.const 0.1
   call $assembly/resolang/ResonantFragment#constructor
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 2
   call $"~lib/map/Map<u32,f64>#has"
   i32.eqz
   if
    i32.const 75424
    i32.const 75536
    i32.const 34
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 3
   call $"~lib/map/Map<u32,f64>#get"
   f64.const 0.5
   f64.ne
   if
    i32.const 75632
    i32.const 75536
    i32.const 35
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#__get
   f64.const 1
   f64.ne
   if
    i32.const 75760
    i32.const 75536
    i32.const 36
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 1
   call $~lib/staticarray/StaticArray<f64>#__get
   f64.const 2
   f64.ne
   if
    i32.const 75856
    i32.const 75536
    i32.const 37
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=8
   f64.const 0.1
   f64.ne
   if
    i32.const 75952
    i32.const 75536
    i32.const 38
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 76048
   i32.store
   i32.const 76048
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 56768
   i32.store
   i32.const 1
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 56768
   i32.store
   call $assembly/resolang/ResonantFragment.encode
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $0
   i32.store
   local.get $0
   call $"~lib/map/Map<u32,f64>#get:size"
   i32.const 0
   i32.le_s
   if
    i32.const 76160
    i32.const 75536
    i32.const 45
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   f64.load offset=8
   f64.const 0
   f64.gt
   i32.eqz
   if
    i32.const 76272
    i32.const 75536
    i32.const 46
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#__get
   f64.const 0
   f64.gt
   i32.eqz
   if
    i32.const 76384
    i32.const 75536
    i32.const 47
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/staticarray/StaticArray<f64>#__get
   f64.const 0
   f64.gt
   i32.eqz
   if
    i32.const 76496
    i32.const 75536
    i32.const 48
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 76608
   i32.store
   i32.const 76608
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/tests/resonlang.test/createSimpleFragment
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/resolang/ResonantFragment#toJSON
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 76704
   i32.store offset=12
   local.get $0
   i32.const 76704
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 76752
    i32.const 75536
    i32.const 54
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 76832
   i32.store offset=12
   local.get $0
   i32.const 76832
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 76896
    i32.const 75536
    i32.const 55
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 76976
   i32.store offset=12
   local.get $0
   i32.const 76976
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 77056
    i32.const 75536
    i32.const 56
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 77152
   i32.store
   i32.const 77152
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/tests/resonlang.test/createSimpleFragment
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/resolang/ResonantFragment#toString
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 76704
   i32.store offset=12
   local.get $0
   i32.const 76704
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 77248
    i32.const 75536
    i32.const 62
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 77328
   i32.store
   i32.const 77328
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   i32.const 2
   i32.const 3
   i32.const 5
   call $assembly/resolang/EntangledNode#constructor
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   i32.store offset=8
   local.get $1
   i32.const 77424
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 77456
    i32.const 75536
    i32.const 67
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store
   local.get $1
   i32.const 0
   call $~lib/staticarray/StaticArray<u32>#__get
   i32.const 2
   i32.ne
   if
    i32.const 77536
    i32.const 75536
    i32.const 68
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=16
   f64.const 0
   f64.ne
   if
    i32.const 77616
    i32.const 75536
    i32.const 69
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   if
    i32.const 77712
    i32.const 75536
    i32.const 70
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 77808
   i32.store
   i32.const 77808
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 10
   call $~lib/util/number/utoa32
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11
   i32.const 10
   call $~lib/util/number/utoa32
   local.tee $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 13
   i32.const 10
   call $~lib/util/number/utoa32
   local.tee $6
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 77968
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   i32.const 77972
   local.get $2
   i32.store
   i32.const 77968
   local.get $2
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 77968
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=16
   i32.const 77980
   local.get $5
   i32.store
   i32.const 77968
   local.get $5
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 77968
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=16
   i32.const 77988
   local.get $6
   i32.store
   i32.const 77968
   local.get $6
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 77968
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=16
   local.get $1
   i32.const 77968
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 7
   i32.const 11
   i32.const 13
   call $assembly/resolang/EntangledNode#constructor
   local.tee $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $2
   i32.store offset=12
   local.get $2
   f64.const 7
   f64.const 100
   call $~lib/math/NativeMath.mod
   f64.const 100
   f64.div
   f64.const 2
   f64.mul
   f64.const 3.141592653589793
   f64.mul
   call $~lib/array/Array<f64>#push
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $2
   i32.store offset=12
   local.get $2
   f64.const 11
   f64.const 100
   call $~lib/math/NativeMath.mod
   f64.const 100
   f64.div
   f64.const 2
   f64.mul
   f64.const 3.141592653589793
   f64.mul
   call $~lib/array/Array<f64>#push
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $2
   i32.store offset=12
   local.get $2
   f64.const 13
   f64.const 100
   call $~lib/math/NativeMath.mod
   f64.const 100
   f64.div
   f64.const 2
   f64.mul
   f64.const 3.141592653589793
   f64.mul
   call $~lib/array/Array<f64>#push
   f64.const 1001
   f64.const 0.3333333333333333
   call $~lib/math/NativeMath.pow
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   local.get $4
   call $~lib/math/NativeMath.log
   f64.const 10
   f64.div
   f64.const 1
   f64.min
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 77904
   i32.store offset=8
   local.get $0
   i32.const 77904
   call $~lib/string/String#startsWith
   i32.eqz
   if
    i32.const 78016
    i32.const 75536
    i32.const 75
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $0
   i32.store offset=4
   local.get $0
   i32.const 0
   call $~lib/staticarray/StaticArray<u32>#__get
   i32.const 7
   i32.ne
   if
    i32.const 78128
    i32.const 75536
    i32.const 76
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.load offset=16
   f64.const 0
   f64.gt
   i32.eqz
   if
    i32.const 78240
    i32.const 75536
    i32.const 77
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 78352
    i32.const 75536
    i32.const 78
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 78480
   i32.store
   i32.const 78480
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   f64.const 0.7
   call $assembly/tests/resonlang.test/createSimpleNode
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/resolang/EntangledNode#toJSON
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 78832
   i32.store offset=12
   local.get $0
   i32.const 78832
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 78880
    i32.const 75536
    i32.const 84
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 78944
   i32.store offset=12
   local.get $0
   i32.const 78944
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 78992
    i32.const 75536
    i32.const 85
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 79072
   i32.store offset=12
   local.get $0
   i32.const 79072
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 79136
    i32.const 75536
    i32.const 86
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 79216
   i32.store
   i32.const 79216
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   f64.const 0.7
   call $assembly/tests/resonlang.test/createSimpleNode
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/resolang/EntangledNode#toJSON
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 78832
   i32.store offset=12
   local.get $0
   i32.const 78832
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 79312
    i32.const 75536
    i32.const 92
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 79392
   i32.store
   i32.const 79392
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 73152
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 73152
   f64.const 0.5
   call $assembly/tests/resonlang.test/createSimpleNode
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 73296
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 73296
   f64.const 0.5
   call $assembly/tests/resonlang.test/createSimpleNode
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/tests/resonlang.test/createSimpleFragment
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   local.get $2
   call $assembly/resolang/TeleportationChannel#constructor
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 73152
   i32.store offset=16
   local.get $1
   i32.const 73152
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 79488
    i32.const 75536
    i32.const 101
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 73296
   i32.store offset=16
   local.get $1
   i32.const 73296
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 79584
    i32.const 75536
    i32.const 102
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=8
   f64.const 0.9
   f64.ne
   if
    i32.const 79680
    i32.const 75536
    i32.const 103
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=16
   local.tee $0
   i32.store
   local.get $0
   f64.load offset=8
   f64.const 0.5
   f64.ne
   if
    i32.const 79776
    i32.const 75536
    i32.const 104
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 79888
   i32.store
   i32.const 79888
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 73152
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 73152
   f64.const 0.5
   call $assembly/tests/resonlang.test/createSimpleNode
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 73296
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 73296
   f64.const 0.5
   call $assembly/tests/resonlang.test/createSimpleNode
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/tests/resonlang.test/createSimpleFragment
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   local.get $2
   call $assembly/resolang/TeleportationChannel#constructor
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/resolang/TeleportationChannel#toJSON
   local.tee $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 80112
   i32.store offset=16
   local.get $0
   i32.const 80112
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 80160
    i32.const 75536
    i32.const 113
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 80256
   i32.store offset=16
   local.get $0
   i32.const 80256
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 80304
    i32.const 75536
    i32.const 114
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 80400
   i32.store offset=16
   local.get $0
   i32.const 80400
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 80448
    i32.const 75536
    i32.const 115
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 80528
   i32.store offset=16
   local.get $0
   i32.const 80528
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 80592
    i32.const 75536
    i32.const 116
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 80688
   i32.store
   i32.const 80688
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 73152
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 73152
   f64.const 0.5
   call $assembly/tests/resonlang.test/createSimpleNode
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 73296
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 73296
   f64.const 0.5
   call $assembly/tests/resonlang.test/createSimpleNode
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/tests/resonlang.test/createSimpleFragment
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   local.get $2
   call $assembly/resolang/TeleportationChannel#constructor
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/resolang/TeleportationChannel#toJSON
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 80400
   i32.store offset=16
   local.get $0
   i32.const 80400
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 80800
    i32.const 75536
    i32.const 125
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 80880
   i32.store
   i32.const 80880
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 80992
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 80992
   f64.const 0.5
   call $assembly/tests/resonlang.test/createSimpleNode
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   global.set $assembly/resolang/currentNode
   global.get $assembly/resolang/currentNode
   i32.eqz
   if
    i32.const 81040
    i32.const 75536
    i32.const 131
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/resolang/currentNode
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.eqz
   if
    i32.const 25808
    i32.const 75536
    i32.const 132
    i32.const 10
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 80992
   i32.store offset=8
   local.get $0
   i32.const 80992
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 81152
    i32.const 75536
    i32.const 132
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $assembly/resolang/currentNode
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 81376
   i32.store
   i32.const 81376
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<u32>#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 5
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 81456
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 81504
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 81504
   local.get $0
   local.get $1
   f64.const 0.8
   call $assembly/resolang/Attractor#constructor
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 81504
   i32.store offset=12
   local.get $1
   i32.const 81504
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 81536
    i32.const 75536
    i32.const 145
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 81632
    i32.const 75536
    i32.const 146
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 81744
    i32.const 75536
    i32.const 147
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=16
   f64.const 0.8
   f64.ne
   if
    i32.const 81856
    i32.const 75536
    i32.const 148
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 81952
   i32.store
   i32.const 81952
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 82048
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<u32>#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.tee $5
   i32.store offset=4
   i32.const 2
   local.set $0
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    i32.const 82048
    i32.store offset=8
    local.get $3
    i32.const 82044
    i32.load
    i32.const 1
    i32.shr_u
    i32.lt_s
    if
     loop $while-continue|1
      i32.const 0
      local.set $2
      block $__inlined_func$assembly/core/math/isPrime$2016
       local.get $0
       i32.const 1
       i32.le_s
       br_if $__inlined_func$assembly/core/math/isPrime$2016
       i32.const 1
       local.set $2
       local.get $0
       i32.const 3
       i32.le_s
       br_if $__inlined_func$assembly/core/math/isPrime$2016
       i32.const 0
       local.set $2
       local.get $0
       i32.const 1
       i32.and
       if (result i32)
        local.get $0
        i32.const 3
        i32.rem_s
       else
        i32.const 0
       end
       i32.eqz
       br_if $__inlined_func$assembly/core/math/isPrime$2016
       i32.const 5
       local.set $1
       loop $while-continue|0
        local.get $1
        local.get $1
        i32.mul
        local.get $0
        i32.le_s
        if
         local.get $0
         local.get $1
         i32.rem_s
         if (result i32)
          local.get $0
          local.get $1
          i32.const 2
          i32.add
          i32.rem_s
         else
          i32.const 0
         end
         i32.eqz
         br_if $__inlined_func$assembly/core/math/isPrime$2016
         local.get $1
         i32.const 6
         i32.add
         local.set $1
         br $while-continue|0
        end
       end
       i32.const 1
       local.set $2
      end
      local.get $2
      i32.eqz
      if
       local.get $0
       i32.const 1
       i32.add
       local.set $0
       br $while-continue|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     local.get $7
     local.get $0
     call $~lib/array/Array<u32>#push
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 82048
     i32.store offset=12
     local.get $5
     i32.const 82048
     local.get $3
     call $~lib/string/String#charCodeAt
     f64.convert_i32_s
     f64.const 255
     f64.div
     f64.const 2
     f64.mul
     f64.const 3.141592653589793
     f64.mul
     call $~lib/array/Array<f64>#push
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 82048
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=16
   i32.const 82048
   local.get $7
   local.get $5
   f64.const 0.9
   call $assembly/resolang/Attractor#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 82048
   i32.store offset=8
   local.get $1
   i32.const 82048
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 82096
    i32.const 75536
    i32.const 153
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 0
   i32.le_s
   if
    i32.const 82208
    i32.const 75536
    i32.const 154
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 0
   i32.le_s
   if
    i32.const 82304
    i32.const 75536
    i32.const 155
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=16
   f64.const 0.9
   f64.ne
   if
    i32.const 82416
    i32.const 75536
    i32.const 156
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 82528
   i32.store
   i32.const 82528
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<u32>#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 5
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 82608
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 81504
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 81504
   local.get $0
   local.get $1
   f64.const 0.8
   call $assembly/resolang/Attractor#constructor
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/resolang/Attractor#toJSON
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 82768
   i32.store offset=12
   local.get $0
   i32.const 82768
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 82832
    i32.const 75536
    i32.const 167
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 82912
   i32.store offset=12
   local.get $0
   i32.const 82912
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 79136
    i32.const 75536
    i32.const 168
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 82976
   i32.store offset=12
   local.get $0
   i32.const 82976
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 83040
    i32.const 75536
    i32.const 169
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 83120
   i32.store offset=12
   local.get $0
   i32.const 83120
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 83200
    i32.const 75536
    i32.const 170
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 83296
   i32.store
   i32.const 83296
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<u32>#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 5
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 3
   i32.const 7
   i32.const 83376
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 81504
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 81504
   local.get $0
   local.get $1
   f64.const 0.8
   call $assembly/resolang/Attractor#constructor
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/resolang/Attractor#toJSON
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 82768
   i32.store offset=12
   local.get $0
   i32.const 82768
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 83424
    i32.const 75536
    i32.const 181
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 83504
   i32.store
   i32.const 83504
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 83584
   i32.store
   i32.const 83584
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/Complex#divide (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  f64.load
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  f64.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=8
  f64.mul
  f64.add
  local.tee $3
  f64.const 0
  f64.eq
  if
   i32.const 85328
   i32.const 85392
   i32.const 71
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  f64.load
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $4
  local.get $1
  f64.load offset=8
  f64.mul
  f64.add
  local.get $3
  f64.div
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  f64.load
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $2
  local.get $5
  local.get $1
  f64.load offset=8
  f64.mul
  f64.sub
  local.get $3
  f64.div
  call $assembly/types/Complex#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/Complex#div (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/types/Complex#divide
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/Complex#magnitudeSquared (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  f64.load
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=8
  f64.mul
  f64.add
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/Complex#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load
  i32.const 4
  call $assembly/utils/toFixed
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load offset=8
  i32.const 4
  call $assembly/utils/toFixed
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  f64.const 0
  f64.ge
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 87376
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   i32.const 87376
   local.get $1
   i32.store
   i32.const 87376
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 87376
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   i32.const 87384
   local.get $2
   i32.store
   i32.const 87376
   local.get $2
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 87376
   i32.store
   i32.const 87376
  else
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 87424
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   i32.const 87424
   local.get $1
   i32.store
   i32.const 87424
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 87424
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   i32.const 87428
   local.get $2
   i32.store
   i32.const 87424
   local.get $2
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 87424
   i32.store
   i32.const 87424
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $0
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/Complex#exp (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  call $~lib/math/NativeMath.exp
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  f64.load offset=8
  call $~lib/math/NativeMath.cos
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $1
  local.get $0
  f64.load offset=8
  call $~lib/math/NativeMath.sin
  f64.mul
  call $assembly/types/Complex#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/types.test/testResonantFragmentConstructorTypes
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 10
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<u32>#constructor
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 2
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 3
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 216
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i64.const 0
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=24
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.store
   local.get $2
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   f64.const 0.5
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i64.const 123456789
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store offset=24
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load
   local.tee $0
   i32.store offset=8
   local.get $0
   i32.load offset=8
   i32.const 10
   i32.ne
   if
    i32.const 89296
    i32.const 83952
    i32.const 155
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   f64.load offset=8
   f64.const 0.5
   f64.ne
   if
    i32.const 89392
    i32.const 83952
    i32.const 156
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   i64.load offset=16
   i64.const 123456789
   i64.ne
   if
    i32.const 89472
    i32.const 83952
    i32.const 157
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=24
   local.tee $0
   i32.store offset=8
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 89568
    i32.const 83952
    i32.const 158
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/PrimeFieldElement#constructor (param $0 i64) (param $1 i64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 219
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $0
  local.get $1
  i64.rem_s
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i64.load
  i64.const 0
  i64.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   local.get $2
   i64.load
   i64.add
   i64.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $1
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/PrimeFieldElement#multiply (param $0 i32) (param $1 i32) (result i32)
  (local $2 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  i64.load offset=8
  i64.ne
  if
   i32.const 91376
   i32.const 85392
   i32.const 327
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  i64.load
  i64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  i64.load offset=8
  call $assembly/types/PrimeFieldElement#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/types.test/runAllTypesTests
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  (local $10 i64)
  (local $11 i32)
  (local $12 f64)
  (local $13 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 83808
   i32.store
   i32.const 83808
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 0
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load
   f64.const 0
   f64.ne
   if
    i32.const 83872
    i32.const 83952
    i32.const 16
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load offset=8
   f64.const 0
   f64.ne
   if
    i32.const 84032
    i32.const 83952
    i32.const 17
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load
   f64.const 3
   f64.ne
   if
    i32.const 84112
    i32.const 83952
    i32.const 20
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load offset=8
   f64.const 4
   f64.ne
   if
    i32.const 84176
    i32.const 83952
    i32.const 21
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 84240
   i32.store
   i32.const 84240
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   f64.const 4
   f64.const 3
   call $~lib/math/NativeMath.atan2
   local.tee $9
   call $~lib/math/NativeMath.cos
   f64.const 5
   f64.mul
   local.get $9
   call $~lib/math/NativeMath.sin
   f64.const 5
   f64.mul
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load
   f64.const -3
   f64.add
   f64.abs
   f64.const 0.0001
   f64.lt
   i32.eqz
   if
    i32.const 84336
    i32.const 83952
    i32.const 26
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load offset=8
   f64.const -4
   f64.add
   f64.abs
   f64.const 0.0001
   f64.lt
   i32.eqz
   if
    i32.const 84448
    i32.const 83952
    i32.const 27
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 84560
   i32.store
   i32.const 84560
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $9
   local.get $8
   f64.load
   f64.add
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load offset=8
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $9
   local.get $12
   local.get $8
   f64.load offset=8
   f64.add
   call $assembly/types/Complex#constructor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   local.get $7
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load
   f64.const 4
   f64.ne
   if
    i32.const 84640
    i32.const 83952
    i32.const 34
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load offset=8
   f64.const 6
   f64.ne
   if
    i32.const 84704
    i32.const 83952
    i32.const 35
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 84768
   i32.store
   i32.const 84768
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 5
   f64.const 7
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 2
   call $assembly/types/Complex#constructor
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $9
   local.get $8
   f64.load
   f64.sub
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load offset=8
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $9
   local.get $12
   local.get $8
   f64.load offset=8
   f64.sub
   call $assembly/types/Complex#constructor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   local.get $7
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load
   f64.const 2
   f64.ne
   if
    i32.const 84848
    i32.const 83952
    i32.const 42
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load offset=8
   f64.const 5
   f64.ne
   if
    i32.const 84928
    i32.const 83952
    i32.const 43
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 85008
   i32.store
   i32.const 85008
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $9
   local.get $8
   f64.load
   f64.mul
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load offset=8
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $9
   local.get $12
   local.get $8
   f64.load offset=8
   f64.mul
   f64.sub
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $9
   local.get $8
   f64.load offset=8
   f64.mul
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load offset=8
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $12
   local.get $9
   local.get $13
   local.get $8
   f64.load
   f64.mul
   f64.add
   call $assembly/types/Complex#constructor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   local.get $7
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load
   f64.const -5
   f64.ne
   if
    i32.const 85088
    i32.const 83952
    i32.const 50
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load offset=8
   f64.const 10
   f64.ne
   if
    i32.const 85168
    i32.const 83952
    i32.const 51
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 85248
   i32.store
   i32.const 85248
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $7
   local.get $8
   call $assembly/types/Complex#divide
   local.tee $7
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load
   f64.const -0.44
   f64.add
   f64.abs
   f64.const 0.0001
   f64.lt
   i32.eqz
   if
    i32.const 85456
    i32.const 83952
    i32.const 58
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load offset=8
   f64.const -0.08
   f64.add
   f64.abs
   f64.const 0.0001
   f64.lt
   i32.eqz
   if
    i32.const 85568
    i32.const 83952
    i32.const 59
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 85680
   i32.store
   i32.const 85680
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $7
   local.get $8
   call $assembly/types/Complex#div
   local.tee $7
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load
   f64.const -0.44
   f64.add
   f64.abs
   f64.const 0.0001
   f64.lt
   i32.eqz
   if
    i32.const 85760
    i32.const 83952
    i32.const 66
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   f64.load offset=8
   f64.const -0.08
   f64.add
   f64.abs
   f64.const 0.0001
   f64.lt
   i32.eqz
   if
    i32.const 85872
    i32.const 83952
    i32.const 67
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 85984
   i32.store
   i32.const 85984
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load
   f64.const 2
   f64.mul
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $9
   local.get $7
   f64.load offset=8
   f64.const 2
   f64.mul
   call $assembly/types/Complex#constructor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load
   f64.const 6
   f64.ne
   if
    i32.const 86064
    i32.const 83952
    i32.const 73
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load offset=8
   f64.const 8
   f64.ne
   if
    i32.const 86128
    i32.const 83952
    i32.const 74
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 86192
   i32.store
   i32.const 86192
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $9
   local.get $7
   f64.load offset=8
   f64.neg
   call $assembly/types/Complex#constructor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load
   f64.const 3
   f64.ne
   if
    i32.const 86272
    i32.const 83952
    i32.const 80
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load offset=8
   f64.const -4
   f64.ne
   if
    i32.const 86352
    i32.const 83952
    i32.const 81
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 86432
   i32.store
   i32.const 86432
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   call $assembly/types/Complex#magnitude
   f64.const 5
   f64.ne
   if
    i32.const 86512
    i32.const 83952
    i32.const 86
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 86576
   i32.store
   i32.const 86576
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   call $assembly/types/Complex#magnitudeSquared
   f64.const 25
   f64.ne
   if
    i32.const 86656
    i32.const 83952
    i32.const 91
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 86736
   i32.store
   i32.const 86736
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   call $assembly/types/Complex#abs
   f64.const 5
   f64.ne
   if
    i32.const 86832
    i32.const 83952
    i32.const 96
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 86896
   i32.store
   i32.const 86896
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   call $assembly/types/Complex#magnitudeSquared
   f64.const 25
   f64.ne
   if
    i32.const 86976
    i32.const 83952
    i32.const 101
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 87056
   i32.store
   i32.const 87056
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 1
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load offset=8
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $9
   local.get $7
   f64.load
   call $~lib/math/NativeMath.atan2
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   f64.const 1.5707963267948966
   f64.ne
   if
    i32.const 87152
    i32.const 83952
    i32.const 106
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 87232
   i32.store
   i32.const 87232
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   call $assembly/types/Complex#toString
   local.tee $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 87456
   i32.store offset=12
   local.get $7
   i32.const 87456
   call $~lib/string/String#includes
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 87488
    i32.store offset=12
    local.get $7
    i32.const 87488
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 87536
    i32.const 83952
    i32.const 112
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const -4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   call $assembly/types/Complex#toString
   local.tee $7
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 87456
   i32.store offset=12
   local.get $7
   i32.const 87456
   call $~lib/string/String#includes
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 87648
    i32.store offset=12
    local.get $7
    i32.const 87648
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 87696
    i32.const 83952
    i32.const 116
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   f64.const 3.123
   f64.const 4.567
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   call $assembly/types/Complex#toString
   local.tee $7
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 87808
   i32.store offset=12
   local.get $7
   i32.const 87808
   call $~lib/string/String#includes
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 87840
    i32.store offset=12
    local.get $7
    i32.const 87840
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 87888
    i32.const 83952
    i32.const 120
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 0
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   call $assembly/types/Complex#toString
   local.tee $7
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 88016
   i32.store offset=12
   local.get $7
   i32.const 88016
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 88064
    i32.const 83952
    i32.const 124
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 88192
   i32.store
   i32.const 88192
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   i32.const 0
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   call $assembly/core/serialization/JSONBuilder#constructor@varargs
   local.tee $11
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=28
   local.get $11
   call $assembly/core/serialization/JSONBuilder#startObject
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 88272
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=28
   local.get $11
   i32.const 88272
   local.get $7
   f64.load
   call $assembly/core/serialization/JSONBuilder#addNumberField
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 88304
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=20
   local.get $11
   i32.const 88304
   local.get $7
   f64.load offset=8
   call $assembly/core/serialization/JSONBuilder#addNumberField
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   call $assembly/core/serialization/JSONBuilder#endObject
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   call $assembly/core/serialization/JSONBuilder#build
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 88336
   i32.store offset=12
   local.get $7
   i32.const 88336
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 88384
    i32.const 83952
    i32.const 130
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 88464
   i32.store offset=12
   local.get $7
   i32.const 88464
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 88512
    i32.const 83952
    i32.const 131
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 88592
   i32.store
   i32.const 88592
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 3
   f64.const 4
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   f64.load
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $9
   local.get $7
   f64.load offset=8
   call $assembly/types/Complex#constructor
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   local.get $11
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=4
   local.get $9
   local.get $11
   f64.load
   f64.ne
   if
    i32.const 88672
    i32.const 83952
    i32.const 137
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load offset=8
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=4
   local.get $9
   local.get $11
   f64.load offset=8
   f64.ne
   if
    i32.const 88752
    i32.const 83952
    i32.const 138
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $7
   local.get $11
   i32.eq
   if
    i32.const 88832
    i32.const 83952
    i32.const 139
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 88944
   i32.store
   i32.const 88944
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 1.5707963267948966
   call $assembly/types/Complex#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   call $assembly/types/Complex#exp
   local.tee $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load
   f64.abs
   f64.const 0.0001
   f64.lt
   i32.eqz
   if
    i32.const 89024
    i32.const 83952
    i32.const 145
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   f64.load offset=8
   f64.const -1
   f64.add
   f64.abs
   f64.const 0.0001
   f64.lt
   i32.eqz
   if
    i32.const 89120
    i32.const 83952
    i32.const 146
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 89216
   i32.store
   i32.const 89216
   call $~lib/console/console.log
   call $assembly/tests/types.test/testResonantFragmentConstructorTypes
   global.get $~lib/memory/__stack_pointer
   i32.const 89680
   i32.store
   i32.const 89680
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 89792
   i32.store
   i32.const 89792
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 89872
   i32.store
   i32.const 89872
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 89952
   i32.store
   i32.const 89952
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 217
   call $~lib/rt/itcms/__new
   local.tee $8
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i32.const 0
   i32.store
   local.get $8
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i32.const 0
   i32.store offset=4
   local.get $8
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i64.const 0
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i64.const 0
   i64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store offset=8
   local.get $8
   i32.const 59232
   i32.store
   local.get $8
   i32.const 59232
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store offset=8
   local.get $8
   i32.const 60704
   i32.store offset=4
   local.get $8
   i32.const 60704
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   f64.const 0.9
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i64.const 100
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i64.const 200
   i64.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $8
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.load
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 59232
   i32.store offset=4
   local.get $7
   i32.const 59232
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 90032
    i32.const 83952
    i32.const 180
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.load offset=4
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 60704
   i32.store offset=4
   local.get $7
   i32.const 60704
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 90112
    i32.const 83952
    i32.const 181
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   f64.load offset=8
   f64.const 0.9
   f64.ne
   if
    i32.const 90192
    i32.const 83952
    i32.const 182
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i64.load offset=16
   i64.const 100
   i64.ne
   if
    i32.const 90256
    i32.const 83952
    i32.const 183
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i64.load offset=24
   i64.const 200
   i64.ne
   if
    i32.const 90336
    i32.const 83952
    i32.const 184
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 90400
   i32.store
   i32.const 90400
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 90512
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 218
   call $~lib/rt/itcms/__new
   local.tee $8
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i32.const 0
   i32.store
   local.get $8
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   f64.const 0
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i32.const 0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i64.const 0
   i64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 90512
   i32.store offset=8
   local.get $8
   i32.const 90512
   i32.store
   local.get $8
   i32.const 90512
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   f64.const 0.8
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   f64.const 0.1
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i32.const 50
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i64.const 300
   i64.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.load
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 90512
   i32.store offset=8
   local.get $7
   i32.const 90512
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 90544
    i32.const 83952
    i32.const 189
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   f64.load offset=8
   f64.const 0.8
   f64.ne
   if
    i32.const 90624
    i32.const 83952
    i32.const 190
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   f64.load offset=16
   f64.const 0.1
   f64.ne
   if
    i32.const 90704
    i32.const 83952
    i32.const 191
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i32.load offset=24
   i32.const 50
   i32.ne
   if
    i32.const 90768
    i32.const 83952
    i32.const 192
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i64.load offset=32
   i64.const 300
   i64.ne
   if
    i32.const 90848
    i32.const 83952
    i32.const 193
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 90928
   i32.store
   i32.const 90928
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i64.const 10
   i64.const 3
   call $assembly/types/PrimeFieldElement#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load
   i64.const 1
   i64.ne
   if
    i32.const 91024
    i32.const 83952
    i32.const 198
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load offset=8
   i64.const 3
   i64.ne
   if
    i32.const 91104
    i32.const 83952
    i32.const 199
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i64.const -5
   i64.const 3
   call $assembly/types/PrimeFieldElement#constructor
   local.tee $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load
   i64.const 1
   i64.ne
   if
    i32.const 91168
    i32.const 83952
    i32.const 202
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 91264
   i32.store
   i32.const 91264
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i64.const 1
   i64.const 3
   call $assembly/types/PrimeFieldElement#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   i64.const 2
   i64.const 3
   call $assembly/types/PrimeFieldElement#constructor
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   i64.load offset=8
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $0
   local.get $8
   i64.load offset=8
   i64.ne
   if
    i32.const 91376
    i32.const 85392
    i32.const 320
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   i64.load
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $0
   local.get $8
   i64.load
   i64.add
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $0
   local.get $7
   i64.load offset=8
   call $assembly/types/PrimeFieldElement#constructor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   local.get $7
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   i64.load
   i64.const 0
   i64.ne
   if
    i32.const 91440
    i32.const 83952
    i32.const 209
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 91536
   i32.store
   i32.const 91536
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i64.const 2
   i64.const 5
   call $assembly/types/PrimeFieldElement#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   i64.const 3
   i64.const 5
   call $assembly/types/PrimeFieldElement#constructor
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $7
   local.get $8
   call $assembly/types/PrimeFieldElement#multiply
   local.tee $7
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   i64.load
   i64.const 1
   i64.ne
   if
    i32.const 91632
    i32.const 83952
    i32.const 216
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 91744
   i32.store
   i32.const 91744
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i64.const 2
   i64.const 5
   call $assembly/types/PrimeFieldElement#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   i64.const 3
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   i64.const 1
   local.get $7
   i64.load offset=8
   call $assembly/types/PrimeFieldElement#constructor
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   i64.load
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $7
   i64.load offset=8
   call $assembly/types/PrimeFieldElement#constructor
   local.tee $7
   i32.store offset=8
   loop $while-continue|0
    local.get $0
    i64.const 0
    i64.gt_s
    if
     local.get $0
     i64.const 1
     i64.and
     i32.wrap_i64
     if
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $8
      local.get $7
      call $assembly/types/PrimeFieldElement#multiply
      local.tee $8
      i32.store offset=4
     end
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $7
     local.get $7
     call $assembly/types/PrimeFieldElement#multiply
     local.tee $7
     i32.store offset=8
     local.get $0
     i64.const 1
     i64.shr_s
     local.set $0
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   local.get $8
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i64.load
   i64.const 3
   i64.ne
   if
    i32.const 91840
    i32.const 83952
    i32.const 222
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 91936
   i32.store
   i32.const 91936
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i64.const 3
   i64.const 7
   call $assembly/types/PrimeFieldElement#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   i64.load
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   i64.load offset=8
   local.set $1
   i64.const 1
   local.set $4
   i64.const 1
   local.set $3
   loop $while-continue|07
    local.get $1
    i64.const 0
    i64.ne
    if
     local.get $2
     local.get $1
     i64.div_s
     local.set $10
     local.get $2
     local.get $1
     local.tee $0
     i64.rem_s
     local.set $1
     local.get $0
     local.set $2
     local.get $3
     local.get $5
     local.tee $0
     local.get $10
     i64.mul
     i64.sub
     local.set $5
     local.get $0
     local.set $3
     local.get $6
     local.get $4
     local.tee $0
     local.get $10
     i64.mul
     i64.sub
     local.set $4
     local.get $0
     local.set $6
     br $while-continue|07
    end
   end
   local.get $2
   i64.const 1
   i64.ne
   if
    i32.const 92032
    i32.const 85392
    i32.const 373
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $3
   local.get $7
   i64.load offset=8
   call $assembly/types/PrimeFieldElement#constructor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load
   i64.const 5
   i64.ne
   if
    i32.const 92096
    i32.const 83952
    i32.const 228
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 92176
   i32.store
   i32.const 92176
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 92272
   i32.store
   i32.const 92272
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/RISAEngine#getControlFlowManager (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/runtime.test/testRISAEngineLoadProgramAndReset
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $assembly/runtime/RISAEngine#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 121
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 6032
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 120
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load offset=4
  i32.store offset=28
  local.get $3
  i32.const 0
  i32.const 10
  call $assembly/runtime/argument/Argument.fromInt
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $3
  i32.const 1
  i32.const 20
  call $assembly/runtime/argument/Argument.fromInt
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $1
  i32.const 0
  i32.const 6032
  local.get $3
  call $assembly/runtime/IRISAInstruction#constructor
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 3888
  i32.store offset=12
  i32.const 0
  i32.const 2
  i32.const 120
  i32.const 93056
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $1
  i32.const 1
  i32.const 3888
  local.get $3
  call $assembly/runtime/IRISAInstruction#constructor
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $2
  local.get $1
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $0
  local.get $1
  call $assembly/runtime/RISAEngine#loadProgram
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $0
  call $assembly/core/builders/QuantumCircuitBuilder#getGates
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  i32.load
  if
   i32.const 93088
   i32.const 92672
   i32.const 98
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  local.get $0
  call $assembly/core/builders/QuantumCircuitBuilder#getGates
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $1
  i32.store offset=12
  local.get $1
  i32.load8_u
  if
   i32.const 93184
   i32.const 92672
   i32.const 99
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  local.get $0
  call $assembly/core/builders/QuantumCircuitBuilder#getGates
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=8
  local.tee $1
  i32.store offset=12
  local.get $1
  i32.load
  if
   i32.const 93296
   i32.const 92672
   i32.const 100
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $0
  call $assembly/core/builders/QuantumCircuitBuilder#getGates
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  i32.const 5
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $0
  call $assembly/runtime/RISAEngine#reset
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $0
  call $assembly/core/builders/QuantumCircuitBuilder#getGates
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $0
  i32.load
  if
   i32.const 93392
   i32.const 92672
   i32.const 104
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/runtime/RISAEngine#getRegisterState (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $0
  i32.load offset=28
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/runtime.test/testRISAEngineStep
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $assembly/runtime/RISAEngine#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 121
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 6032
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 120
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load offset=4
  i32.store offset=28
  local.get $3
  i32.const 0
  i32.const 5
  call $assembly/runtime/argument/Argument.fromInt
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $3
  i32.const 1
  i32.const 5
  call $assembly/runtime/argument/Argument.fromInt
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $1
  i32.const 0
  i32.const 6032
  local.get $3
  call $assembly/runtime/IRISAInstruction#constructor
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 3888
  i32.store offset=12
  i32.const 0
  i32.const 2
  i32.const 120
  i32.const 94320
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $1
  i32.const 1
  i32.const 3888
  local.get $3
  call $assembly/runtime/IRISAInstruction#constructor
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $2
  local.get $1
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $0
  local.get $1
  call $assembly/runtime/RISAEngine#loadProgram
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  local.get $0
  call $assembly/core/builders/QuantumCircuitBuilder#getGates
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $1
  i32.store offset=12
  local.get $1
  i32.const 1
  i32.store8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $0
  call $assembly/runtime/RISAEngine#step
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  local.get $0
  call $assembly/runtime/RISAEngine#getRegisterState
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 93696
  i32.store offset=16
  local.get $1
  i32.const 93696
  call $assembly/runtime/state/registerState/RegisterState#getRegister
  f64.const 10
  f64.ne
  if
   i32.const 94352
   i32.const 92672
   i32.const 144
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $0
  call $assembly/core/builders/QuantumCircuitBuilder#getGates
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  i32.load
  i32.const 1
  i32.ne
  if
   i32.const 94448
   i32.const 92672
   i32.const 145
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $0
  call $assembly/runtime/RISAEngine#step
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  local.get $0
  call $assembly/core/builders/QuantumCircuitBuilder#getGates
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $1
  i32.store offset=12
  local.get $1
  i32.load8_u offset=1
  i32.eqz
  if
   i32.const 94544
   i32.const 92672
   i32.const 148
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  local.get $0
  call $assembly/core/builders/QuantumCircuitBuilder#getGates
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store offset=12
  local.get $0
  i32.load8_u
  if
   i32.const 94640
   i32.const 92672
   i32.const 149
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/runtime/state/registerState/RegisterState#setRegister (param $0 i32) (param $1 i32) (param $2 f64) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 136
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $2
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $4
   local.get $1
   i32.store offset=16
   local.get $4
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $6
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $0
   local.get $1
   local.get $4
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/state/registerState/RegisterState#setRegister@varargs (param $0 i32) (param $1 i32) (param $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  block $1of1
   block $outOfRange
    global.get $~argumentsLength
    i32.const 2
    i32.sub
    br_table $1of1 $1of1 $outOfRange
   end
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  i32.const 0
  call $assembly/runtime/state/registerState/RegisterState#setRegister
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/runtime/RISAEngine#parseValue (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 119640
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 24
    memory.fill
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    call $assembly/runtime/argument/Argument#isFloat
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     f64.load offset=8
     local.set $2
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 119640
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $3
    i32.store
    local.get $3
    i32.const 0
    call $~lib/string/String.__eq
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     f64.load offset=8
     f64.const 0
     f64.eq
    else
     i32.const 0
    end
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     i32.load offset=16
     f64.convert_i32_s
     local.set $2
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    call $assembly/runtime/argument/Argument#isString
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $3
     local.get $1
     i32.eqz
     if
      i32.const 25808
      i32.const 94832
      i32.const 191
      i32.const 23
      call $~lib/builtins/abort
      unreachable
     end
     local.get $3
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $3
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load offset=28
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $3
     local.get $1
     call $"~lib/map/Map<~lib/string/String,i32>#has"
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=4
      local.tee $0
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=28
      local.tee $0
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=12
      local.get $0
      local.get $1
      call $assembly/runtime/state/registerState/RegisterState#getRegister
      local.set $2
      br $folding-inner1
     end
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     call $~lib/number/F64.parseFloat
     local.tee $2
     local.get $2
     f64.eq
     br_if $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    f64.const 0
    return
   end
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/runtime/argument/Argument.fromString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  call $assembly/runtime/argument/Argument#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/runtime/RISAEngine#parsePrime (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/runtime/RISAEngine#parseValue
  local.tee $2
  f64.const 2
  f64.lt
  if (result i32)
   i32.const 0
  else
   block $__inlined_func$assembly/runtime/RISAEngine#isPrime$2288 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    i32.const 0
    local.get $2
    f64.floor
    i32.trunc_sat_f64_s
    local.tee $1
    i32.const 2
    i32.lt_s
    br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$2288
    drop
    i32.const 1
    local.get $1
    i32.const 2
    i32.eq
    br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$2288
    drop
    i32.const 0
    local.get $1
    i32.const 1
    i32.and
    i32.eqz
    br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$2288
    drop
    i32.const 3
    local.set $0
    loop $for-loop|0
     local.get $0
     local.get $0
     i32.mul
     local.get $1
     i32.le_s
     if
      i32.const 0
      local.get $1
      local.get $0
      i32.rem_s
      i32.eqz
      br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$2288
      drop
      local.get $0
      i32.const 2
      i32.add
      local.set $0
      br $for-loop|0
     end
    end
    i32.const 1
   end
  end
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  f64.floor
  i32.trunc_sat_f64_s
 )
 (func $assembly/tests/runtime.test/testRISAEngineIsPrime
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  call $assembly/runtime/RISAEngine#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  block $__inlined_func$assembly/runtime/RISAEngine#isPrime$2292 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 3
   local.set $0
   loop $for-loop|00
    local.get $0
    local.get $0
    i32.mul
    i32.const 3
    i32.le_s
    if
     i32.const 0
     i32.const 3
     local.get $0
     i32.rem_s
     i32.eqz
     br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$2292
     drop
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     br $for-loop|00
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 6736
   i32.const 92672
   i32.const 175
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$assembly/runtime/RISAEngine#isPrime$2293 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 3
   local.set $0
   loop $for-loop|01
    local.get $0
    local.get $0
    i32.mul
    i32.const 5
    i32.le_s
    if
     i32.const 0
     i32.const 5
     local.get $0
     i32.rem_s
     i32.eqz
     br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$2293
     drop
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     br $for-loop|01
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 6800
   i32.const 92672
   i32.const 176
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$assembly/runtime/RISAEngine#isPrime$2294 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 3
   local.set $0
   loop $for-loop|02
    local.get $0
    local.get $0
    i32.mul
    i32.const 7
    i32.le_s
    if
     i32.const 0
     i32.const 7
     local.get $0
     i32.rem_s
     i32.eqz
     br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$2294
     drop
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     br $for-loop|02
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 6864
   i32.const 92672
   i32.const 177
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$assembly/runtime/RISAEngine#isPrime$2295 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 3
   local.set $0
   loop $for-loop|03
    local.get $0
    local.get $0
    i32.mul
    i32.const 11
    i32.le_s
    if
     i32.const 0
     i32.const 11
     local.get $0
     i32.rem_s
     i32.eqz
     br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$2295
     drop
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     br $for-loop|03
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 6928
   i32.const 92672
   i32.const 178
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$assembly/runtime/RISAEngine#isPrime$2296 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 3
   local.set $0
   loop $for-loop|04
    local.get $0
    local.get $0
    i32.mul
    i32.const 13
    i32.le_s
    if
     i32.const 0
     i32.const 13
     local.get $0
     i32.rem_s
     i32.eqz
     br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$2296
     drop
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     br $for-loop|04
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 6992
   i32.const 92672
   i32.const 179
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  block $__inlined_func$assembly/runtime/RISAEngine#isPrime$2299 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 3
   local.set $0
   loop $for-loop|07
    local.get $0
    local.get $0
    i32.mul
    i32.const 9
    i32.le_s
    if
     i32.const 0
     i32.const 9
     local.get $0
     i32.rem_s
     i32.eqz
     br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$2299
     drop
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     br $for-loop|07
    end
   end
   i32.const 1
  end
  if
   i32.const 7376
   i32.const 92672
   i32.const 182
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/runtime/RISAEngine#getGlobalState (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $0
  i32.load offset=40
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/RISAEngine#getPrimeEngine (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $0
  i32.load offset=32
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/RISAEngine#getMemory (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $0
  i32.load offset=36
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/runtime.test/testRISAEngineJumpInstruction
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 72
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 72
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $assembly/runtime/RISAEngine#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 6
  i32.const 2
  i32.const 121
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 6032
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 120
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load offset=4
  i32.store offset=28
  local.get $3
  i32.const 0
  i32.const 1
  call $assembly/runtime/argument/Argument.fromInt
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $3
  i32.const 1
  i32.const 1
  call $assembly/runtime/argument/Argument.fromInt
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $0
  i32.const 0
  i32.const 6032
  local.get $3
  call $assembly/runtime/IRISAInstruction#constructor
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 6080
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 120
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load offset=4
  i32.store offset=36
  global.get $~lib/memory/__stack_pointer
  i32.const 96480
  i32.store offset=40
  local.get $3
  i32.const 0
  i32.const 96480
  call $assembly/runtime/argument/Argument.fromString
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $0
  i32.const 1
  i32.const 6080
  local.get $3
  call $assembly/runtime/IRISAInstruction#constructor
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 6032
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 120
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store offset=44
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load offset=4
  i32.store offset=48
  local.get $3
  i32.const 0
  i32.const 100
  call $assembly/runtime/argument/Argument.fromInt
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $3
  i32.const 1
  i32.const 100
  call $assembly/runtime/argument/Argument.fromInt
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $0
  i32.const 2
  i32.const 6032
  local.get $3
  call $assembly/runtime/IRISAInstruction#constructor
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 6112
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 120
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store offset=52
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load offset=4
  i32.store offset=56
  global.get $~lib/memory/__stack_pointer
  i32.const 96480
  i32.store offset=40
  local.get $3
  i32.const 0
  i32.const 96480
  call $assembly/runtime/argument/Argument.fromString
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $0
  i32.const 3
  i32.const 6112
  local.get $3
  call $assembly/runtime/IRISAInstruction#constructor
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 6032
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 120
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store offset=60
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load offset=4
  i32.store offset=64
  local.get $3
  i32.const 0
  i32.const 2
  call $assembly/runtime/argument/Argument.fromInt
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $3
  i32.const 1
  i32.const 2
  call $assembly/runtime/argument/Argument.fromInt
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $0
  i32.const 4
  i32.const 6032
  local.get $3
  call $assembly/runtime/IRISAInstruction#constructor
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 3888
  i32.store offset=12
  i32.const 0
  i32.const 2
  i32.const 120
  i32.const 96528
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=20
  local.get $0
  i32.const 5
  i32.const 3888
  local.get $3
  call $assembly/runtime/IRISAInstruction#constructor
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $2
  local.get $0
  i32.store offset=68
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $1
  local.get $0
  call $assembly/runtime/RISAEngine#loadProgram
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $assembly/runtime/RISAEngine#execute
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  local.get $1
  call $assembly/runtime/RISAEngine#getRegisterState
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 93696
  i32.store offset=16
  local.get $0
  i32.const 93696
  call $assembly/runtime/state/registerState/RegisterState#getRegister
  f64.const 4
  f64.ne
  if
   i32.const 96560
   i32.const 92672
   i32.const 207
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $1
  call $assembly/core/builders/QuantumCircuitBuilder#getGates
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $0
  i32.load
  i32.const 5
  i32.ne
  if
   i32.const 96672
   i32.const 92672
   i32.const 208
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 72
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/tests/runtime.test/runAllRuntimeTests
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 92512
   i32.store
   i32.const 92512
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   call $assembly/runtime/RISAEngine#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/core/builders/QuantumCircuitBuilder#getGates
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/runtime/RISAEngine#getControlFlowManager
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 92960
   i32.store
   i32.const 92960
   call $~lib/console/console.log
   call $assembly/tests/runtime.test/testRISAEngineLoadProgramAndReset
   global.get $~lib/memory/__stack_pointer
   i32.const 93472
   i32.store
   i32.const 93472
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $assembly/runtime/RISAEngine#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 121
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 6032
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 120
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=4
   i32.store offset=28
   local.get $3
   i32.const 0
   i32.const 10
   call $assembly/runtime/argument/Argument.fromInt
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $3
   i32.const 1
   i32.const 20
   call $assembly/runtime/argument/Argument.fromInt
   call $~lib/array/Array<~lib/string/String>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=20
   local.get $2
   i32.const 0
   i32.const 6032
   local.get $3
   call $assembly/runtime/IRISAInstruction#constructor
   call $~lib/array/Array<~lib/string/String>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 3888
   i32.store offset=12
   i32.const 0
   i32.const 2
   i32.const 120
   i32.const 93584
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=20
   local.get $2
   i32.const 1
   i32.const 3888
   local.get $3
   call $assembly/runtime/IRISAInstruction#constructor
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $1
   local.get $2
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $0
   local.get $2
   call $assembly/runtime/RISAEngine#loadProgram
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/runtime/RISAEngine#execute
   local.tee $1
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load8_u
   i32.eqz
   if
    i32.const 93616
    i32.const 92672
    i32.const 116
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $0
   call $assembly/runtime/RISAEngine#getRegisterState
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 93696
   i32.store offset=16
   local.get $0
   i32.const 93696
   call $assembly/runtime/state/registerState/RegisterState#getRegister
   f64.const 30
   f64.ne
   if
    i32.const 93728
    i32.const 92672
    i32.const 117
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load offset=16
   i32.const 2
   i32.ne
   if
    i32.const 93808
    i32.const 92672
    i32.const 118
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 93904
   i32.store
   i32.const 93904
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $assembly/runtime/RISAEngine#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 121
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 3888
   i32.store offset=12
   i32.const 0
   i32.const 2
   i32.const 120
   i32.const 94016
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=20
   local.get $2
   i32.const 0
   i32.const 3888
   local.get $3
   call $assembly/runtime/IRISAInstruction#constructor
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $1
   local.get $2
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $0
   local.get $2
   call $assembly/runtime/RISAEngine#loadProgram
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/runtime/RISAEngine#execute
   local.tee $1
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load8_u
   i32.eqz
   if
    i32.const 93616
    i32.const 92672
    i32.const 129
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $0
   call $assembly/core/builders/QuantumCircuitBuilder#getGates
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store offset=12
   local.get $0
   i32.load8_u offset=1
   i32.eqz
   if
    i32.const 94048
    i32.const 92672
    i32.const 130
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load offset=16
   i32.const 1
   i32.ne
   if
    i32.const 94128
    i32.const 92672
    i32.const 131
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 94224
   i32.store
   i32.const 94224
   call $~lib/console/console.log
   call $assembly/tests/runtime.test/testRISAEngineStep
   global.get $~lib/memory/__stack_pointer
   i32.const 94720
   i32.store
   i32.const 94720
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/runtime/RISAEngine#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   call $assembly/runtime/RISAEngine#getRegisterState
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 94800
   i32.store offset=8
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   i32.const 94800
   f64.const 123.45
   call $assembly/runtime/state/registerState/RegisterState#setRegister@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 10
   call $assembly/runtime/argument/Argument.fromInt
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parseValue
   f64.const 10
   f64.ne
   if
    i32.const 94896
    i32.const 92672
    i32.const 156
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   f64.const 10.5
   call $assembly/runtime/argument/Argument.fromFloat
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parseValue
   f64.const 10.5
   f64.ne
   if
    i32.const 94960
    i32.const 92672
    i32.const 157
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 94800
   i32.store offset=12
   i32.const 94800
   call $assembly/runtime/argument/Argument.fromString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parseValue
   f64.const 123.45
   f64.ne
   if
    i32.const 95024
    i32.const 92672
    i32.const 158
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 95104
   i32.store offset=12
   i32.const 95104
   call $assembly/runtime/argument/Argument.fromString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parseValue
   f64.const 78.9
   f64.ne
   if
    i32.const 95136
    i32.const 92672
    i32.const 159
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 95216
   i32.store offset=12
   i32.const 95216
   call $assembly/runtime/argument/Argument.fromString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parseValue
   f64.const 0
   f64.ne
   if
    i32.const 95264
    i32.const 92672
    i32.const 160
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 95344
   i32.store
   i32.const 95344
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/runtime/RISAEngine#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 7
   call $assembly/runtime/argument/Argument.fromInt
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parsePrime
   i32.const 7
   i32.ne
   if
    i32.const 95440
    i32.const 92672
    i32.const 165
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 95504
   i32.store offset=12
   i32.const 95504
   call $assembly/runtime/argument/Argument.fromString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parsePrime
   i32.const 13
   i32.ne
   if
    i32.const 95536
    i32.const 92672
    i32.const 166
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 4
   call $assembly/runtime/argument/Argument.fromInt
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parsePrime
   if
    i32.const 95616
    i32.const 92672
    i32.const 167
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 1
   call $assembly/runtime/argument/Argument.fromInt
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parsePrime
   if
    i32.const 95712
    i32.const 92672
    i32.const 168
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 95216
   i32.store offset=12
   i32.const 95216
   call $assembly/runtime/argument/Argument.fromString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parsePrime
   if
    i32.const 95792
    i32.const 92672
    i32.const 169
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 95888
   i32.store
   i32.const 95888
   call $~lib/console/console.log
   call $assembly/tests/runtime.test/testRISAEngineIsPrime
   global.get $~lib/memory/__stack_pointer
   i32.const 95984
   i32.store
   i32.const 95984
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   call $assembly/runtime/RISAEngine#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/runtime/RISAEngine#getGlobalState
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/runtime/RISAEngine#getPrimeEngine
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/runtime/RISAEngine#getRegisterState
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/runtime/RISAEngine#getMemory
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 96400
   i32.store
   i32.const 96400
   call $~lib/console/console.log
   call $assembly/tests/runtime.test/testRISAEngineJumpInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 96768
   i32.store
   i32.const 96768
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 96864
   i32.store
   i32.const 96864
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quantum/prime-state/PrimeState#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 186
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<u32,f64>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 0
  i32.const 2
  i32.const 8
  i32.const 97280
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 0
  i32.const 2
  i32.const 187
  i32.const 97312
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quantum/prime-state/PrimeState#syncArraysFromMap (param $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 0
  i32.const 2
  i32.const 8
  i32.const 97344
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $3
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 0
  i32.const 2
  i32.const 187
  i32.const 97376
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $3
  i32.store offset=8
  local.get $0
  local.get $3
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $3
  i32.store offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    local.get $1
    call $~lib/array/Array<u32>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $5
    i32.store
    local.get $5
    local.get $4
    call $~lib/array/Array<u32>#push
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $5
    i32.store
    local.get $5
    local.get $4
    call $"~lib/map/Map<u32,f64>#get"
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $4
    i32.store
    local.get $2
    f64.const 0
    call $assembly/types/Complex#constructor
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $4
    local.get $5
    call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,f64>#clear" (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 96
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/quantum/prime-state/PrimeState#normalize (param $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   i32.const 0
   i32.gt_s
   if
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $3
     i32.store
     local.get $3
     call $~lib/array/Array<u32>#get:length
     local.get $1
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $3
      i32.store offset=4
      local.get $3
      local.get $1
      call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      local.get $2
      local.get $3
      call $assembly/types/Complex#magnitudeSquared
      f64.add
      local.set $2
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $3
    i32.store
    local.get $3
    call $"~lib/map/Map<u32,f64>#get:size"
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     call $"~lib/map/Map<u32,f64>#keys"
     local.tee $3
     i32.store offset=12
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      local.get $3
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store
       local.get $3
       local.get $1
       call $~lib/array/Array<u32>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $5
       i32.store
       local.get $2
       local.get $5
       local.get $4
       call $"~lib/map/Map<u32,f64>#get"
       local.tee $2
       local.get $2
       f64.mul
       f64.add
       local.set $2
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|1
      end
     end
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
   end
   local.get $2
   f64.const 0
   f64.gt
   if
    f64.const 1
    local.get $2
    f64.sqrt
    f64.div
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $1
    i32.store
    local.get $1
    call $~lib/array/Array<u32>#get:length
    i32.const 0
    i32.gt_s
    if
     i32.const 0
     local.set $1
     loop $for-loop|2
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $3
      i32.store
      local.get $3
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $3
       i32.store offset=4
       local.get $3
       local.get $1
       call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $4
       i32.store offset=8
       local.get $4
       local.get $1
       call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=4
       local.get $3
       local.get $4
       f64.load
       local.get $2
       f64.mul
       f64.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $3
       i32.store offset=4
       local.get $3
       local.get $1
       call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $4
       i32.store offset=8
       local.get $4
       local.get $1
       call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=4
       local.get $3
       local.get $4
       f64.load offset=8
       local.get $2
       f64.mul
       f64.store offset=8
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|2
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $1
     i32.store
     local.get $1
     call $"~lib/map/Map<u32,f64>#clear"
     i32.const 0
     local.set $1
     loop $for-loop|00
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=4
      local.tee $3
      i32.store
      local.get $3
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $3
       i32.store offset=4
       local.get $3
       local.get $1
       call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store
       local.get $3
       call $assembly/types/Complex#magnitude
       local.tee $2
       f64.const 0
       f64.gt
       if
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load
        local.tee $3
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load offset=4
        local.tee $4
        i32.store offset=4
        local.get $3
        local.get $4
        local.get $1
        call $~lib/array/Array<u32>#__get
        local.get $2
        call $"~lib/map/Map<u32,f64>#set"
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|00
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     call $"~lib/map/Map<u32,f64>#keys"
     local.tee $4
     i32.store offset=20
     i32.const 0
     local.set $1
     loop $for-loop|3
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $4
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       local.get $4
       local.get $1
       call $~lib/array/Array<u32>#__get
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $3
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $6
       i32.store offset=4
       local.get $3
       local.get $5
       local.get $6
       local.get $5
       call $"~lib/map/Map<u32,f64>#get"
       local.get $2
       f64.mul
       call $"~lib/map/Map<u32,f64>#set"
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|3
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     call $assembly/quantum/prime-state/PrimeState#syncArraysFromMap
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quantum/prime-state/PrimeState.fromAmplitudes (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  call $assembly/quantum/prime-state/PrimeState#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $assembly/quantum/prime-state/PrimeState#syncArraysFromMap
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $assembly/quantum/prime-state/PrimeState#normalize
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quantum-ops-impl/superpose (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  (local $10 i32)
  (local $11 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $assembly/quantum/prime-state/PrimeState#constructor
  local.tee $1
  i32.store
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.get $5
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $5
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
    local.tee $6
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.load
    local.tee $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    call $"~lib/map/Map<u32,f64>#keys"
    local.tee $7
    i32.store offset=16
    i32.const 0
    local.set $4
    loop $for-loop|1
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     local.get $7
     call $~lib/array/Array<u32>#get:length
     local.get $4
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=4
      local.get $7
      local.get $4
      call $~lib/array/Array<u32>#__get
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.load
      local.tee $10
      i32.store offset=4
      local.get $10
      local.get $8
      call $"~lib/map/Map<u32,f64>#get"
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load
      local.tee $10
      i32.store offset=4
      local.get $10
      local.get $8
      call $"~lib/map/Map<u32,f64>#has"
      if
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.load
       local.tee $10
       i32.store offset=4
       local.get $10
       local.get $8
       call $"~lib/map/Map<u32,f64>#get"
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.load
       local.tee $10
       i32.store offset=4
       local.get $10
       local.get $8
       local.get $9
       local.get $11
       f64.add
       call $"~lib/map/Map<u32,f64>#set"
      else
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.load
       local.tee $10
       i32.store offset=4
       local.get $10
       local.get $8
       local.get $11
       call $"~lib/map/Map<u32,f64>#set"
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|1
     end
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $0
  i32.store offset=20
  loop $for-loop|2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    local.get $3
    local.get $4
    local.get $0
    local.get $2
    call $~lib/array/Array<u32>#__get
    call $"~lib/map/Map<u32,f64>#get"
    local.tee $3
    local.get $3
    f64.mul
    f64.add
    local.set $3
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|2
   end
  end
  local.get $3
  f64.sqrt
  local.tee $3
  f64.const 0
  f64.gt
  if
   i32.const 0
   local.set $2
   loop $for-loop|3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $2
     call $~lib/array/Array<u32>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $5
     i32.store offset=4
     local.get $5
     local.get $4
     call $"~lib/map/Map<u32,f64>#get"
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $5
     i32.store offset=4
     local.get $5
     local.get $4
     local.get $9
     local.get $3
     f64.div
     call $"~lib/map/Map<u32,f64>#set"
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|3
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/tests/quantum-ops-impl.test/testSuperposeOperation
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 2
  f64.const 0.6
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 3
  f64.const 0.8
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $assembly/quantum/prime-state/PrimeState.fromAmplitudes
  local.tee $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $2
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 3
  f64.const 0.5
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 5
  f64.const 0.7
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $assembly/quantum/prime-state/PrimeState.fromAmplitudes
  local.tee $4
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 220
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load offset=4
  i32.store offset=24
  local.get $2
  i32.const 0
  local.get $3
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $2
  i32.const 1
  local.get $4
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $5
  local.get $2
  call $assembly/quantum-ops-impl/superpose
  local.tee $2
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load
  local.tee $3
  i32.store offset=4
  local.get $3
  i32.const 2
  call $"~lib/map/Map<u32,f64>#has"
  i32.eqz
  if
   i32.const 97408
   i32.const 97504
   i32.const 19
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load
  local.tee $3
  i32.store offset=4
  local.get $3
  i32.const 3
  call $"~lib/map/Map<u32,f64>#has"
  i32.eqz
  if
   i32.const 97616
   i32.const 97504
   i32.const 20
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load
  local.tee $3
  i32.store offset=4
  local.get $3
  i32.const 5
  call $"~lib/map/Map<u32,f64>#has"
  i32.eqz
  if
   i32.const 97712
   i32.const 97504
   i32.const 21
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $3
  i32.store offset=36
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $0
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load
    local.tee $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=32
    local.get $1
    local.get $4
    local.get $3
    local.get $0
    call $~lib/array/Array<u32>#__get
    call $"~lib/map/Map<u32,f64>#get"
    local.tee $1
    local.get $1
    f64.mul
    f64.add
    local.set $1
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  local.get $1
  f64.const -1
  f64.add
  f64.abs
  f64.const 0.0001
  f64.lt
  i32.eqz
  if
   i32.const 97808
   i32.const 97504
   i32.const 30
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/tests/quantum-ops-impl.test/testMeasureOperation
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   f64.const 0.6
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   f64.const 0.8
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/quantum/prime-state/PrimeState.fromAmplitudes
   local.tee $3
   i32.store offset=8
   loop $for-loop|0
    local.get $4
    i32.const 100
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load
     local.tee $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     call $"~lib/map/Map<u32,f64>#keys"
     local.tee $8
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     call $~lib/array/Array<f64>#constructor
     local.tee $2
     i32.store offset=12
     f64.const 0
     local.set $1
     i32.const 0
     local.set $0
     loop $for-loop|00
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store
      local.get $8
      call $~lib/array/Array<u32>#get:length
      local.get $0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.load
       local.tee $7
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=4
       local.get $1
       local.get $7
       local.get $8
       local.get $0
       call $~lib/array/Array<u32>#__get
       call $"~lib/map/Map<u32,f64>#get"
       local.tee $1
       local.get $1
       f64.mul
       f64.add
       local.set $1
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store
       local.get $2
       local.get $1
       call $~lib/array/Array<f64>#push
       local.get $0
       i32.const 1
       i32.add
       local.set $0
       br $for-loop|00
      end
     end
     call $~lib/math/NativeMath.random
     local.set $1
     i32.const 0
     local.set $0
     block $__inlined_func$assembly/quantum-ops-impl/measure$3790 (result i32)
      loop $for-loop|1
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store
       local.get $2
       call $~lib/array/Array<u32>#get:length
       local.get $0
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store
        local.get $2
        local.get $0
        call $~lib/array/Array<f64>#__get
        local.get $1
        f64.ge
        if
         global.get $~lib/memory/__stack_pointer
         local.get $8
         i32.store
         local.get $8
         local.get $0
         call $~lib/array/Array<u32>#__get
         br $__inlined_func$assembly/quantum-ops-impl/measure$3790
        end
        local.get $0
        i32.const 1
        i32.add
        local.set $0
        br $for-loop|1
       end
      end
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=4
      local.get $8
      local.get $8
      call $~lib/array/Array<u32>#get:length
      i32.const 1
      i32.sub
      call $~lib/array/Array<u32>#__get
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     i32.const 2
     i32.eq
     if
      local.get $5
      i32.const 1
      i32.add
      local.set $5
     else
      local.get $0
      i32.const 3
      i32.eq
      if (result i32)
       local.get $6
       i32.const 1
       i32.add
      else
       i32.const 98000
       i32.const 97504
       i32.const 53
       i32.const 7
       call $~lib/builtins/abort
       unreachable
      end
      local.set $6
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $5
   i32.const 0
   i32.le_s
   if
    i32.const 98080
    i32.const 97504
    i32.const 58
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $6
   i32.const 0
   i32.le_s
   if
    i32.const 98192
    i32.const 97504
    i32.const 59
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quaternion/Quaternion#constructor (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 221
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $1
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $2
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $3
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Float64Array#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 223
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $0
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Float64Array#__set (param $0 i32) (param $1 i32) (param $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 1584
   i32.const 14960
   i32.const 1457
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  local.get $2
  f64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 222
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=16
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.store
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $3
  local.get $1
  i32.store offset=4
  local.get $3
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $2
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  i32.const 9
  call $~lib/typedarray/Float64Array#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.store offset=16
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  i32.const 0
  local.set $0
  loop $for-loop|0
   local.get $0
   i32.const 9
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load offset=16
    local.tee $1
    i32.store offset=4
    local.get $1
    local.get $0
    call $~lib/math/NativeMath.random
    f64.const -0.5
    f64.add
    f64.const 0.1
    f64.mul
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/quaternion-entanglement/EntangledQuaternionPair#getQuaternions (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 224
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  i32.const 0
  local.get $0
  i32.load
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  i32.const 1
  local.get $0
  i32.load offset=4
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quaternion/Quaternion#clone (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $3
  local.get $0
  f64.load offset=24
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/Quaternion#norm (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  f64.load
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=8
  f64.mul
  f64.add
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=16
  f64.mul
  f64.add
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=24
  f64.mul
  f64.add
  f64.sqrt
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quaternion/Quaternion#normalize (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quaternion/Quaternion#norm
  local.tee $1
  f64.const 1e-10
  f64.lt
  if
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.get $1
  f64.div
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.get $1
  f64.div
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.get $1
  f64.div
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $3
  local.get $4
  local.get $0
  f64.load offset=24
  local.get $1
  f64.div
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/Quaternion#toBlochVector (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $assembly/quaternion/Quaternion#normalize
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  i32.const 0
  local.get $1
  f64.load offset=8
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  i32.const 1
  local.get $1
  f64.load offset=16
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  i32.const 2
  local.get $1
  f64.load offset=24
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Float64Array#__get (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 1584
   i32.const 14960
   i32.const 1446
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/quaternion/Quaternion#rotate (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  f64.const 0.5
  f64.mul
  local.tee $1
  call $~lib/math/NativeMath.sin
  local.set $3
  local.get $1
  call $~lib/math/NativeMath.cos
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.load offset=8
  local.get $3
  f64.mul
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.load offset=16
  local.get $3
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $4
  local.get $5
  local.get $1
  local.get $0
  f64.load offset=24
  local.get $3
  f64.mul
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  call $assembly/quaternion/Quaternion#normalize
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/Quaternion#exp (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  f64.load offset=8
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=16
  f64.mul
  f64.add
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=24
  f64.mul
  f64.add
  f64.sqrt
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  call $~lib/math/NativeMath.exp
  local.set $2
  local.get $1
  f64.const 1e-10
  f64.lt
  if
   local.get $2
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  local.get $2
  local.get $1
  call $~lib/math/NativeMath.sin
  f64.mul
  local.get $1
  f64.div
  local.set $3
  local.get $2
  local.get $1
  call $~lib/math/NativeMath.cos
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $0
  f64.load offset=8
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $0
  f64.load offset=16
  f64.mul
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $1
  local.get $4
  local.get $3
  local.get $0
  f64.load offset=24
  f64.mul
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/Quaternion#multiply (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  f64.load
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=8
  f64.mul
  f64.sub
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=16
  f64.mul
  f64.sub
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=24
  f64.mul
  f64.sub
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $1
  f64.load offset=8
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $4
  local.get $1
  f64.load
  f64.mul
  f64.add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $4
  local.get $1
  f64.load offset=24
  f64.mul
  f64.add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $4
  local.get $1
  f64.load offset=16
  f64.mul
  f64.sub
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $1
  f64.load offset=16
  f64.mul
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $5
  local.get $1
  f64.load offset=24
  f64.mul
  f64.sub
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $5
  local.get $1
  f64.load
  f64.mul
  f64.add
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $5
  local.get $1
  f64.load offset=8
  f64.mul
  f64.add
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $5
  local.get $1
  f64.load offset=24
  f64.mul
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $5
  local.get $6
  local.get $1
  f64.load offset=16
  f64.mul
  f64.add
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $5
  local.get $6
  local.get $1
  f64.load offset=8
  f64.mul
  f64.sub
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  local.get $1
  f64.load
  f64.mul
  f64.add
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/Quaternion#conjugate (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  f64.neg
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  f64.neg
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $3
  local.get $0
  f64.load offset=24
  f64.neg
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $assembly/quaternion/Quaternion#toBlochVector
  local.tee $4
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $assembly/quaternion/Quaternion#toBlochVector
  local.tee $5
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 6.283185307179586
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 6.283185307179586
  f64.mul
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store offset=16
  local.get $1
  local.get $3
  f64.const 0.01
  f64.mul
  call $assembly/quaternion/Quaternion#rotate
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.store offset=16
  local.get $1
  local.get $7
  f64.const 0.01
  f64.mul
  call $assembly/quaternion/Quaternion#rotate
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $3
  local.get $4
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $3
  local.get $5
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store offset=16
  local.get $1
  local.get $3
  f64.const 0.01
  f64.mul
  call $assembly/quaternion/Quaternion#rotate
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.store offset=16
  local.get $1
  local.get $3
  f64.const -0.01
  f64.mul
  call $assembly/quaternion/Quaternion#rotate
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  loop $for-loop|0
   local.get $2
   i32.const 3
   i32.lt_s
   if
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 3
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=16
      local.tee $6
      i32.store
      local.get $6
      local.get $2
      i32.const 3
      i32.mul
      local.get $1
      i32.add
      call $~lib/typedarray/Float64Array#__get
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $3
      local.get $4
      local.get $2
      call $~lib/typedarray/Float64Array#__get
      f64.mul
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      local.get $3
      local.get $5
      local.get $1
      call $~lib/typedarray/Float64Array#__get
      f64.mul
      f64.const 0.01
      f64.mul
      local.tee $3
      f64.abs
      f64.const 1e-10
      f64.gt
      if
       global.get $~lib/memory/__stack_pointer
       f64.const 0
       f64.const 0
       local.get $3
       local.get $2
       select
       local.get $3
       f64.const 0
       local.get $2
       i32.const 1
       i32.eq
       select
       local.get $3
       f64.const 0
       local.get $2
       i32.const 2
       i32.eq
       select
       call $assembly/quaternion/Quaternion#constructor
       local.tee $8
       i32.store offset=24
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $9
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=28
       local.get $8
       call $assembly/quaternion/Quaternion#exp
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store offset=20
       local.get $9
       local.get $6
       call $assembly/quaternion/Quaternion#multiply
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store offset=4
       local.get $0
       local.get $6
       i32.store
       local.get $0
       local.get $6
       i32.const 0
       call $~lib/rt/itcms/__link
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $6
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=32
       local.get $8
       call $assembly/quaternion/Quaternion#conjugate
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=28
       local.get $8
       call $assembly/quaternion/Quaternion#exp
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=20
       local.get $6
       local.get $8
       call $assembly/quaternion/Quaternion#multiply
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store offset=4
       local.get $0
       local.get $6
       i32.store offset=4
       local.get $0
       local.get $6
       i32.const 0
       call $~lib/rt/itcms/__link
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store offset=16
  local.get $1
  call $assembly/quaternion/Quaternion#normalize
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.store offset=16
  local.get $1
  call $assembly/quaternion/Quaternion#normalize
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/tests/quaternion-entanglement.test/testEntangledQuaternionPairEvolve
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  f64.const 1
  f64.const 0.1
  f64.const 0.2
  f64.const 0.3
  call $assembly/quaternion/Quaternion#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  f64.const 0
  f64.const 0.4
  f64.const 0.5
  f64.const 0.6
  call $assembly/quaternion/Quaternion#constructor
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $2
  f64.const 0.5
  call $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor
  local.tee $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $assembly/quaternion/Quaternion#clone
  local.tee $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $assembly/quaternion/Quaternion#clone
  local.tee $2
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
  global.get $~lib/memory/__stack_pointer
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $3
  call $assembly/quaternion-entanglement/EntangledQuaternionPair#getQuaternions
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $4
  local.get $5
  i32.const 0
  call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
  local.tee $4
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $3
  call $assembly/quaternion-entanglement/EntangledQuaternionPair#getQuaternions
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $5
  local.get $3
  i32.const 1
  call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
  local.tee $3
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  f64.load
  f64.ne
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $4
   f64.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   f64.load offset=8
   f64.ne
  end
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $4
   f64.load offset=16
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   f64.load offset=16
   f64.ne
  end
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $4
   f64.load offset=24
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   f64.load offset=24
   f64.ne
  end
  i32.eqz
  if
   i32.const 99664
   i32.const 99344
   i32.const 26
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $1
  local.get $2
  f64.load
  f64.ne
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   f64.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   f64.load offset=8
   f64.ne
  end
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   f64.load offset=16
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   f64.load offset=16
   f64.ne
  end
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   f64.load offset=24
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   f64.load offset=24
   f64.ne
  end
  i32.eqz
  if
   i32.const 99744
   i32.const 99344
   i32.const 27
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $3
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store
  local.get $2
  local.get $3
  f64.load
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $3
  f64.load offset=8
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store
  local.get $2
  local.get $4
  local.get $3
  f64.load offset=8
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $3
  f64.load offset=16
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store
  local.get $2
  local.get $4
  local.get $3
  f64.load offset=16
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $3
  f64.load offset=24
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store
  local.get $2
  local.get $4
  local.get $3
  f64.load offset=24
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $3
  f64.load
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $4
  local.get $3
  f64.load
  f64.mul
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $3
  f64.load offset=8
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $4
  local.get $5
  local.get $3
  f64.load offset=8
  f64.mul
  f64.add
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $3
  f64.load offset=16
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $4
  local.get $5
  local.get $3
  f64.load offset=16
  f64.mul
  f64.add
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $2
  local.get $4
  local.get $5
  local.get $0
  f64.load offset=24
  f64.mul
  f64.add
  f64.mul
  f64.abs
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/quaternion-entanglement/EntangledQuaternionPair#optimizeEntanglement (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  loop $for-loop|0
   local.get $4
   i32.const 10
   i32.lt_s
   if
    block $for-break0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $0
     local.get $1
     call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
     f64.const 0.95
     f64.gt
     br_if $for-break0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $0
     f64.load offset=8
     f64.const 1e-06
     f64.add
     f64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $0
     local.get $1
     call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $0
     f64.load offset=8
     f64.const -2e-06
     f64.add
     f64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $0
     local.get $1
     call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $0
     f64.load offset=8
     f64.const 1e-06
     f64.add
     f64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $0
     f64.load offset=8
     local.get $3
     local.get $5
     f64.sub
     f64.const 2e-06
     f64.div
     f64.const 0.01
     f64.mul
     f64.add
     f64.store offset=8
     i32.const 0
     local.set $2
     loop $for-loop|1
      local.get $2
      i32.const 9
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $6
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $7
       i32.store offset=4
       local.get $6
       local.get $2
       local.get $7
       local.get $2
       call $~lib/typedarray/Float64Array#__get
       f64.const 1e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       local.get $0
       call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=4
       local.get $0
       local.get $1
       call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $6
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $7
       i32.store offset=4
       local.get $6
       local.get $2
       local.get $7
       local.get $2
       call $~lib/typedarray/Float64Array#__get
       f64.const -2e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       local.get $0
       call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=4
       local.get $0
       local.get $1
       call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $6
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $7
       i32.store offset=4
       local.get $6
       local.get $2
       local.get $7
       local.get $2
       call $~lib/typedarray/Float64Array#__get
       f64.const 1e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $6
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $7
       i32.store offset=4
       local.get $6
       local.get $2
       local.get $7
       local.get $2
       call $~lib/typedarray/Float64Array#__get
       local.get $3
       local.get $5
       f64.sub
       f64.const 2e-06
       f64.div
       f64.const 0.01
       f64.mul
       f64.add
       call $~lib/typedarray/Float64Array#__set
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/tests/quaternion-entanglement.test/runAllQuaternionEntanglementTests
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 99152
   i32.store
   i32.const 99152
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 1
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $2
   f64.const 0.7
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor
   local.tee $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=20
   local.get $3
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#getQuaternions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 0
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $4
   f64.load
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   f64.load
   f64.ne
   if
    i32.const 99264
    i32.const 99344
    i32.const 9
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=20
   local.get $3
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#getQuaternions
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   i32.const 1
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   f64.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   f64.load offset=8
   f64.ne
   if
    i32.const 99456
    i32.const 99344
    i32.const 10
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 99536
   i32.store
   i32.const 99536
   call $~lib/console/console.log
   call $assembly/tests/quaternion-entanglement.test/testEntangledQuaternionPairEvolve
   global.get $~lib/memory/__stack_pointer
   i32.const 99824
   i32.store
   i32.const 99824
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 44
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 1
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $2
   f64.const 0.5
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 1
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $3
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   f64.const 0.5
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor
   local.tee $2
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $0
   local.get $2
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
   f64.const 1
   f64.ne
   if
    i32.const 99936
    i32.const 99344
    i32.const 40
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 0
   f64.const 1
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 0
   f64.const 0
   f64.const 1
   call $assembly/quaternion/Quaternion#constructor
   local.tee $3
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   f64.const 0.5
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor
   local.tee $2
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $0
   local.get $2
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
   f64.const 0
   f64.ne
   if
    i32.const 100048
    i32.const 99344
    i32.const 47
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 100160
   i32.store
   i32.const 100160
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 1
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $2
   f64.const 0.1
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 1
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $3
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   f64.const 1
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor
   local.tee $2
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $0
   local.get $2
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $0
   local.get $2
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#optimizeEntanglement
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $0
   local.get $2
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
   local.get $1
   f64.ge
   i32.eqz
   if
    i32.const 100288
    i32.const 99344
    i32.const 63
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 100432
   i32.store
   i32.const 100432
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 100576
   i32.store
   i32.const 100576
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/quaternion.test/testQuaternionToJSON
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   f64.const 3
   f64.const 4
   call $assembly/quaternion/Quaternion#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 48
   memory.fill
   i32.const 0
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   call $assembly/core/serialization/JSONBuilder#constructor@varargs
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=44
   local.get $2
   call $assembly/core/serialization/JSONBuilder#startObject
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 103984
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=44
   local.get $2
   i32.const 103984
   local.get $1
   f64.load
   call $assembly/core/serialization/JSONBuilder#addNumberField
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 104016
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=36
   local.get $2
   i32.const 104016
   local.get $1
   f64.load offset=8
   call $assembly/core/serialization/JSONBuilder#addNumberField
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 104048
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=28
   local.get $2
   i32.const 104048
   local.get $1
   f64.load offset=16
   call $assembly/core/serialization/JSONBuilder#addNumberField
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 104080
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   local.get $2
   i32.const 104080
   local.get $1
   f64.load offset=24
   call $assembly/core/serialization/JSONBuilder#addNumberField
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   call $assembly/core/serialization/JSONBuilder#endObject
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $assembly/core/serialization/JSONBuilder#build
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 104112
   i32.store offset=12
   local.get $1
   i32.const 104112
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 104144
    i32.const 101040
    i32.const 81
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 104208
   i32.store offset=12
   local.get $1
   i32.const 104208
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 104240
    i32.const 101040
    i32.const 82
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 104304
   i32.store offset=12
   local.get $1
   i32.const 104304
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 104336
    i32.const 101040
    i32.const 83
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 104400
   i32.store offset=12
   local.get $1
   i32.const 104400
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 104432
    i32.const 101040
    i32.const 84
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quaternion/Quaternion#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load
  i32.const 1
  call $assembly/utils/toFixed
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load offset=8
  f64.const 0
  f64.ge
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 87312
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   f64.load offset=8
   i32.const 1
   call $assembly/utils/toFixed
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   i32.const 87312
   local.get $2
   call $~lib/string/String#concat
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=8
   i32.const 1
   call $assembly/utils/toFixed
  end
  local.tee $2
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load offset=16
  f64.const 0
  f64.ge
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 87312
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   f64.load offset=16
   i32.const 1
   call $assembly/utils/toFixed
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   i32.const 87312
   local.get $3
   call $~lib/string/String#concat
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=16
   i32.const 1
   call $assembly/utils/toFixed
  end
  local.tee $3
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load offset=24
  f64.const 0
  f64.ge
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 87312
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   f64.load offset=24
   i32.const 1
   call $assembly/utils/toFixed
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   i32.const 87312
   local.get $0
   call $~lib/string/String#concat
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=24
   i32.const 1
   call $assembly/utils/toFixed
  end
  local.tee $0
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 104672
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  i32.const 104676
  local.get $1
  i32.store
  i32.const 104672
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 104672
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  i32.const 104680
  local.get $2
  i32.store
  i32.const 104672
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 104672
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  i32.const 104688
  local.get $3
  i32.store
  i32.const 104672
  local.get $3
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 104672
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  i32.const 104696
  local.get $0
  i32.store
  i32.const 104672
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 104672
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 14928
  i32.store offset=8
  i32.const 104672
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/SplitPrimeFactorizer.factorizeGaussian (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $0
  f64.convert_i32_u
  f64.sqrt
  i32.trunc_sat_f64_s
  local.set $3
  i32.const 1
  local.set $1
  loop $for-loop|0
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $0
    local.get $1
    local.get $1
    i32.mul
    i32.sub
    local.tee $4
    f64.convert_i32_u
    f64.sqrt
    i32.trunc_sat_f64_s
    local.tee $2
    local.get $2
    i32.mul
    local.get $4
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     call $"~lib/map/Map<~lib/string/String,i32>#constructor"
     local.tee $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 39168
     i32.store offset=8
     local.get $0
     i32.const 39168
     local.get $1
     call $"~lib/map/Map<~lib/string/String,i32>#set"
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 39200
     i32.store offset=8
     local.get $0
     i32.const 39200
     local.get $2
     call $"~lib/map/Map<~lib/string/String,i32>#set"
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/quaternion/SplitPrimeFactorizer.factorizeEisenstein (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $0
  f64.convert_i32_u
  f64.sqrt
  i32.trunc_sat_f64_s
  local.set $3
  i32.const 1
  local.set $1
  loop $for-loop|0
   local.get $1
   local.get $3
   i32.le_s
   if
    i32.const 1
    local.set $2
    loop $for-loop|1
     local.get $2
     local.get $3
     i32.le_s
     if
      local.get $1
      local.get $1
      i32.mul
      local.get $1
      local.get $2
      i32.mul
      i32.add
      local.get $2
      local.get $2
      i32.mul
      i32.add
      local.get $0
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       call $"~lib/map/Map<~lib/string/String,i32>#constructor"
       local.tee $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       i32.const 41344
       i32.store offset=8
       local.get $0
       i32.const 41344
       local.get $1
       call $"~lib/map/Map<~lib/string/String,i32>#set"
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       i32.const 106480
       i32.store offset=8
       local.get $0
       i32.const 106480
       local.get $2
       call $"~lib/map/Map<~lib/string/String,i32>#set"
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $0
       return
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|1
     end
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/quaternion/SplitPrimeFactorizer.createQuaternion (result i32)
  (local $0 i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 13
  call $assembly/quaternion/SplitPrimeFactorizer.factorizeGaussian
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13
  call $assembly/quaternion/SplitPrimeFactorizer.factorizeEisenstein
  local.tee $3
  i32.store offset=4
  local.get $3
  i32.eqz
  local.get $0
  i32.eqz
  i32.or
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 39168
   i32.store offset=12
   local.get $0
   i32.const 39168
   call $"~lib/map/Map<~lib/string/String,i32>#get"
   f64.convert_i32_s
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 39200
   i32.store offset=12
   local.get $0
   i32.const 39200
   call $"~lib/map/Map<~lib/string/String,i32>#get"
   f64.convert_i32_s
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 41344
   i32.store offset=12
   local.get $3
   i32.const 41344
   call $"~lib/map/Map<~lib/string/String,i32>#get"
   f64.convert_i32_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 106480
   i32.store offset=12
   local.get $2
   local.get $4
   local.get $1
   local.get $3
   i32.const 106480
   call $"~lib/map/Map<~lib/string/String,i32>#get"
   f64.convert_i32_s
   local.tee $1
   f64.const 0.5
   f64.mul
   f64.sub
   local.get $1
   f64.const 1.7320508075688772
   f64.mul
   f64.const 0.5
   f64.mul
   call $assembly/quaternion/Quaternion#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/quaternion/QuaternionicResonanceField#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 225
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 226
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 3
   call $~lib/typedarray/Float64Array#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 6.283185307179586
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 0
   f64.const 0.1
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 1
   f64.const 0.05
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 2
   f64.const 0.02
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/typedarray/Float64Array#get:length (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  i32.const 3
  i32.shr_u
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<u32,assembly/quaternion/Quaternion>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=8
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/quaternion/QuaternionicResonanceField#addPrime (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/quaternion/SplitPrimeFactorizer.createQuaternion
   local.tee $2
   i32.store
   local.get $2
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i32.const 13
   i32.const -1037441527
   call $"~lib/map/Map<u32,assembly/quaternion/Quaternion>#find"
   local.tee $0
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $0
    local.get $2
    i32.store offset=4
    local.get $8
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
   else
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    i32.load offset=16
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $0
    local.get $8
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.load offset=20
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $0
     local.get $8
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=4
      local.get $8
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=4
      local.get $8
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.const 1
     i32.add
     local.tee $0
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $6
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     local.get $8
     i32.load offset=8
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     local.get $3
     local.get $8
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $7
     local.get $1
     local.set $0
     loop $while-continue|0
      local.get $3
      local.get $7
      i32.ne
      if
       local.get $3
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $0
        local.get $3
        i32.load
        local.tee $9
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.load offset=4
        local.tee $10
        i32.store offset=8
        local.get $0
        local.get $10
        i32.store offset=4
        local.get $0
        local.get $4
        local.get $5
        local.get $9
        i32.const -1028477379
        i32.mul
        i32.const 374761397
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $9
        i32.const 15
        i32.shr_u
        local.get $9
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $9
        i32.const 13
        i32.shr_u
        local.get $9
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $9
        i32.const 16
        i32.shr_u
        local.get $9
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $9
        i32.load
        i32.store offset=8
        local.get $9
        local.get $0
        i32.store
        local.get $0
        i32.const 12
        i32.add
        local.set $0
       end
       local.get $3
       i32.const 12
       i32.add
       local.set $3
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     local.get $8
     local.get $4
     i32.store
     local.get $8
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     local.get $8
     local.get $5
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     local.get $8
     local.get $1
     i32.store offset=8
     local.get $8
     local.get $1
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     local.get $8
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=12
     local.get $8
     local.get $8
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.load offset=8
    local.tee $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    local.get $8
    i32.load offset=16
    local.tee $1
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $0
    local.get $1
    i32.const 12
    i32.mul
    i32.add
    local.tee $0
    i32.const 13
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $0
    local.get $2
    i32.store offset=4
    local.get $8
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    local.get $8
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $0
    local.get $1
    local.get $8
    i32.load offset=4
    i32.const -1037441527
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $1
    i32.load
    i32.store offset=8
    local.get $1
    local.get $0
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quaternion/QuaternionicResonanceField#computeField (param $0 i32) (param $1 f64) (param $2 f64) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $9
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $5
   i32.store offset=4
   local.get $5
   call $"~lib/map/Map<u32,f64>#get:size"
   f64.convert_i32_s
   local.tee $7
   f64.const 0
   f64.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $9
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.load offset=8
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.load offset=16
   local.tee $12
   call $~lib/array/Array<u32>#constructor
   local.tee $5
   i32.store offset=4
   loop $for-loop|0
    local.get $4
    local.get $12
    i32.lt_s
    if
     local.get $11
     local.get $4
     i32.const 12
     i32.mul
     i32.add
     local.tee $13
     i32.load offset=8
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      local.get $5
      local.get $3
      local.get $13
      i32.load
      call $~lib/array/Array<u32>#__set
      local.get $3
      i32.const 1
      i32.add
      local.set $3
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $3
   call $~lib/array/Array<~lib/string/String>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   local.get $5
   i32.store offset=12
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $~lib/array/Array<u32>#get:length
    local.get $8
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     local.get $8
     call $~lib/array/Array<u32>#__get
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $10
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store
     local.get $10
     local.get $3
     local.get $3
     i32.const -1028477379
     i32.mul
     i32.const 374761397
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $3
     local.get $3
     i32.const 15
     i32.shr_u
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $3
     local.get $3
     i32.const 13
     i32.shr_u
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $3
     local.get $3
     i32.const 16
     i32.shr_u
     i32.xor
     call $"~lib/map/Map<u32,assembly/quaternion/Quaternion>#find"
     local.tee $3
     i32.eqz
     if
      i32.const 6192
      i32.const 6256
      i32.const 105
      i32.const 17
      call $~lib/builtins/abort
      unreachable
     end
     local.get $3
     i32.load offset=4
     local.set $10
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     local.get $10
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     f64.load offset=8
     local.get $2
     f64.mul
     local.set $6
     i32.const 0
     local.set $3
     loop $for-loop|01
      local.get $3
      i32.const 3
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       local.get $0
       f64.load offset=8
       local.get $3
       i32.const 1
       i32.add
       local.tee $4
       f64.convert_i32_s
       local.tee $14
       f64.mul
       local.set $15
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $11
       i32.store
       local.get $6
       local.get $11
       local.get $3
       call $~lib/typedarray/Float64Array#__get
       local.get $15
       local.get $2
       f64.mul
       local.get $1
       local.get $14
       f64.mul
       f64.add
       call $~lib/math/NativeMath.sin
       f64.mul
       f64.add
       local.set $6
       local.get $4
       local.set $3
       br $for-loop|01
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     f64.const 0
     local.get $6
     f64.const 0
     f64.const 0
     call $assembly/quaternion/Quaternion#constructor
     local.tee $3
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=24
     local.get $3
     call $assembly/quaternion/Quaternion#exp
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $4
     local.get $10
     local.get $3
     call $assembly/quaternion/Quaternion#multiply
     local.tee $3
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     f64.load
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $6
     local.get $3
     f64.load
     f64.add
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     f64.load offset=8
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $6
     local.get $3
     f64.load offset=8
     f64.add
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     f64.load offset=16
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $6
     local.get $3
     f64.load offset=16
     f64.add
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     f64.load offset=24
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $14
     local.get $15
     local.get $16
     local.get $6
     local.get $3
     f64.load offset=24
     f64.add
     call $assembly/quaternion/Quaternion#constructor
     local.tee $9
     i32.store
     local.get $8
     i32.const 1
     i32.add
     local.set $8
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   f64.load
   f64.const 1
   local.get $7
   f64.sqrt
   f64.div
   local.tee $1
   f64.mul
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   f64.load offset=8
   local.get $1
   f64.mul
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   f64.load offset=16
   local.get $1
   f64.mul
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $2
   local.get $6
   local.get $7
   local.get $9
   f64.load offset=24
   local.get $1
   f64.mul
   call $assembly/quaternion/Quaternion#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quaternion/QuaternionicResonanceField#computeFidelity (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  f64.load
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=8
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=16
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=24
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quaternion/Quaternion#norm
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $0
  call $assembly/quaternion/Quaternion#norm
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $1
  call $assembly/quaternion/Quaternion#norm
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $1
  call $assembly/quaternion/Quaternion#norm
  f64.mul
  f64.div
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/quaternion/QuaternionicResonanceField#optimizeParameters (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  loop $for-loop|0
   local.get $3
   i32.const 10
   i32.lt_s
   if
    block $for-break0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     f64.const 0
     f64.const 1
     call $assembly/quaternion/QuaternionicResonanceField#computeField
     local.tee $2
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     local.get $2
     local.get $1
     call $assembly/quaternion/QuaternionicResonanceField#computeFidelity
     f64.const 0.99
     f64.gt
     br_if $for-break0
     i32.const 0
     local.set $2
     loop $for-loop|1
      local.get $2
      i32.const 3
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $6
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $7
       i32.store offset=8
       local.get $6
       local.get $2
       local.get $7
       local.get $2
       call $~lib/typedarray/Float64Array#__get
       f64.const 1e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       f64.const 0
       f64.const 1
       call $assembly/quaternion/QuaternionicResonanceField#computeField
       local.tee $6
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       local.get $6
       local.get $1
       call $assembly/quaternion/QuaternionicResonanceField#computeFidelity
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $6
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $7
       i32.store offset=8
       local.get $6
       local.get $2
       local.get $7
       local.get $2
       call $~lib/typedarray/Float64Array#__get
       f64.const -2e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       f64.const 0
       f64.const 1
       call $assembly/quaternion/QuaternionicResonanceField#computeField
       local.tee $6
       i32.store offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       local.get $6
       local.get $1
       call $assembly/quaternion/QuaternionicResonanceField#computeFidelity
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $6
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $7
       i32.store offset=8
       local.get $6
       local.get $2
       local.get $7
       local.get $2
       call $~lib/typedarray/Float64Array#__get
       f64.const 1e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $6
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $7
       i32.store offset=8
       local.get $6
       local.get $2
       local.get $7
       local.get $2
       call $~lib/typedarray/Float64Array#__get
       local.get $4
       local.get $5
       f64.sub
       f64.const 2e-06
       f64.div
       f64.const 0.01
       f64.mul
       f64.add
       call $~lib/typedarray/Float64Array#__set
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/quaternion/TwistDynamics#constructor (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 227
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0.1
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0.05
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0.01
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/TwistDynamics#getTwistAngle (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quaternion/TwistDynamics#checkCollapse (param $0 i32) (param $1 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  f64.const 0.1
  f64.lt
  local.get $0
  f64.load
  f64.const 1.5707963267948966
  call $~lib/math/NativeMath.mod
  f64.abs
  f64.const 0.01
  f64.lt
  i32.and
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/QuaternionicProjector#constructor (param $0 f64) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 228
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  f64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quaternion/QuaternionPool#allocate (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  local.get $1
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#pop
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  f64.const 0
  f64.const 0
  f64.const 0
  f64.const 0
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/quaternion.test/testQuaternionPoolAllocateAndDeallocate
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 229
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 224
   i32.const 110000
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/quaternion/QuaternionPool#allocate
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/quaternion/QuaternionPool#allocate
   local.tee $2
   i32.store offset=12
   local.get $0
   i32.eqz
   if
    i32.const 110032
    i32.const 101040
    i32.const 215
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   i32.eqz
   if
    i32.const 110128
    i32.const 101040
    i32.const 216
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $2
   i32.store
   local.get $2
   call $~lib/array/Array<u32>#get:length
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $2
   local.get $1
   i32.load offset=4
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    f64.const 0
    f64.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    f64.const 0
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    f64.const 0
    f64.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    f64.const 0
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $2
    local.get $0
    call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   local.get $1
   call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/array/Array<u32>#get:length
   i32.const 1
   i32.ne
   if
    i32.const 110224
    i32.const 101040
    i32.const 219
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/quaternion/QuaternionPool#allocate
   local.tee $1
   i32.store offset=20
   local.get $0
   local.get $1
   i32.ne
   if
    i32.const 110320
    i32.const 101040
    i32.const 221
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/tests/quaternion.test/runAllQuaternionTests
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 100880
   i32.store
   i32.const 100880
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   f64.const 3
   f64.const 4
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load
   f64.const 1
   f64.ne
   if
    i32.const 100960
    i32.const 101040
    i32.const 6
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=8
   f64.const 2
   f64.ne
   if
    i32.const 101136
    i32.const 101040
    i32.const 7
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=16
   f64.const 3
   f64.ne
   if
    i32.const 101216
    i32.const 101040
    i32.const 8
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=24
   f64.const 4
   f64.ne
   if
    i32.const 101296
    i32.const 101040
    i32.const 9
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 101376
   i32.store
   i32.const 101376
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   f64.const 3
   f64.const 4
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 5
   f64.const 6
   f64.const 7
   f64.const 8
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $2
   call $assembly/quaternion/Quaternion#multiply
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   f64.load
   f64.const -60
   f64.ne
   if
    i32.const 101472
    i32.const 101040
    i32.const 17
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   f64.load offset=8
   f64.const 12
   f64.ne
   if
    i32.const 101568
    i32.const 101040
    i32.const 18
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   f64.load offset=16
   f64.const 30
   f64.ne
   if
    i32.const 101664
    i32.const 101040
    i32.const 19
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   f64.load offset=24
   f64.const 24
   f64.ne
   if
    i32.const 101760
    i32.const 101040
    i32.const 20
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 101856
   i32.store
   i32.const 101856
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   f64.const 3
   f64.const 4
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/quaternion/Quaternion#conjugate
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load
   f64.const 1
   f64.ne
   if
    i32.const 101952
    i32.const 101040
    i32.const 26
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=8
   f64.const -2
   f64.ne
   if
    i32.const 102048
    i32.const 101040
    i32.const 27
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=16
   f64.const -3
   f64.ne
   if
    i32.const 102144
    i32.const 101040
    i32.const 28
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=24
   f64.const -4
   f64.ne
   if
    i32.const 102240
    i32.const 101040
    i32.const 29
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 102336
   i32.store
   i32.const 102336
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   f64.const 3
   f64.const 4
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/quaternion/Quaternion#normalize
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/quaternion/Quaternion#norm
   f64.const -1
   f64.add
   f64.abs
   f64.const 1e-09
   f64.lt
   i32.eqz
   if
    i32.const 102416
    i32.const 101040
    i32.const 41
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 102528
   i32.store
   i32.const 102528
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/quaternion/Quaternion#toBlochVector
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   f64.const 0
   f64.ne
   if
    i32.const 102624
    i32.const 101040
    i32.const 47
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.const 0
   f64.ne
   if
    i32.const 102688
    i32.const 101040
    i32.const 48
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.const 0
   f64.ne
   if
    i32.const 102752
    i32.const 101040
    i32.const 49
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 1
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/quaternion/Quaternion#toBlochVector
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   f64.const 1
   f64.ne
   if
    i32.const 102816
    i32.const 101040
    i32.const 53
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 102896
   i32.store
   i32.const 102896
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 1.5707963267948966
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/quaternion/Quaternion#exp
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load
   f64.abs
   f64.const 1e-09
   f64.lt
   i32.eqz
   if
    i32.const 102992
    i32.const 101040
    i32.const 59
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=8
   f64.const -1
   f64.add
   f64.abs
   f64.const 1e-09
   f64.lt
   i32.eqz
   if
    i32.const 103104
    i32.const 101040
    i32.const 60
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=16
   f64.abs
   f64.const 1e-09
   f64.lt
   i32.eqz
   if
    i32.const 103216
    i32.const 101040
    i32.const 61
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=24
   f64.abs
   f64.const 1e-09
   f64.lt
   i32.eqz
   if
    i32.const 103328
    i32.const 101040
    i32.const 62
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 103440
   i32.store
   i32.const 103440
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 1
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   f64.const 3.141592653589793
   call $assembly/quaternion/Quaternion#rotate
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   f64.load
   f64.abs
   f64.const 1e-09
   f64.lt
   i32.eqz
   if
    i32.const 103520
    i32.const 101040
    i32.const 72
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   f64.load offset=8
   f64.const -1
   f64.add
   f64.abs
   f64.const 1e-09
   f64.lt
   i32.eqz
   if
    i32.const 103616
    i32.const 101040
    i32.const 73
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   f64.load offset=16
   f64.abs
   f64.const 1e-09
   f64.lt
   i32.eqz
   if
    i32.const 103712
    i32.const 101040
    i32.const 74
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   f64.load offset=24
   f64.abs
   f64.const 1e-09
   f64.lt
   i32.eqz
   if
    i32.const 103808
    i32.const 101040
    i32.const 75
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 103904
   i32.store
   i32.const 103904
   call $~lib/console/console.log
   call $assembly/tests/quaternion.test/testQuaternionToJSON
   global.get $~lib/memory/__stack_pointer
   i32.const 104496
   i32.store
   i32.const 104496
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   f64.const 3
   f64.const 4
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/quaternion/Quaternion#toString
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 104736
   i32.store offset=12
   local.get $0
   i32.const 104736
   call $~lib/string/String#includes
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 104768
    i32.store offset=12
    local.get $0
    i32.const 104768
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 104800
    i32.store offset=12
    local.get $0
    i32.const 104800
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 104832
    i32.store offset=12
    local.get $0
    i32.const 104832
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 104864
    i32.const 101040
    i32.const 90
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   f64.const 1.234
   f64.const -4.567
   f64.const 7.891
   f64.const -0.123
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/quaternion/Quaternion#toString
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 105008
   i32.store offset=12
   local.get $0
   i32.const 105008
   call $~lib/string/String#includes
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 105040
    i32.store offset=12
    local.get $0
    i32.const 105040
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 105072
    i32.store offset=12
    local.get $0
    i32.const 105072
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 105104
    i32.store offset=12
    local.get $0
    i32.const 105104
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 105136
    i32.const 101040
    i32.const 94
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 105312
   i32.store
   i32.const 105312
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   f64.const 3
   f64.const 4
   call $assembly/quaternion/Quaternion#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/quaternion/Quaternion#clone
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   f64.load
   f64.ne
   if
    i32.const 105408
    i32.const 101040
    i32.const 100
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   f64.load offset=8
   f64.ne
   if
    i32.const 105488
    i32.const 101040
    i32.const 101
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=16
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   f64.load offset=16
   f64.ne
   if
    i32.const 105568
    i32.const 101040
    i32.const 102
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=24
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   f64.load offset=24
   f64.ne
   if
    i32.const 105648
    i32.const 101040
    i32.const 103
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $2
   i32.eq
   if
    i32.const 88832
    i32.const 101040
    i32.const 104
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 105728
   i32.store
   i32.const 105728
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 105968
   i32.store
   i32.const 105968
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   call $assembly/quaternion/SplitPrimeFactorizer.factorizeGaussian
   local.tee $0
   i32.store
   local.get $0
   i32.eqz
   if
    i32.const 106080
    i32.const 101040
    i32.const 114
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   i32.eqz
   if
    i32.const 25808
    i32.const 101040
    i32.const 115
    i32.const 10
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 39168
   i32.store offset=8
   local.get $0
   i32.const 39168
   call $"~lib/map/Map<~lib/string/String,i32>#get"
   i32.const 1
   i32.eq
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    local.get $0
    i32.eqz
    if
     i32.const 25808
     i32.const 101040
     i32.const 115
     i32.const 35
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 39168
    i32.store offset=8
    local.get $0
    i32.const 39168
    call $"~lib/map/Map<~lib/string/String,i32>#get"
    i32.const 2
    i32.eq
   end
   i32.eqz
   if
    i32.const 106192
    i32.const 101040
    i32.const 115
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $0
   i32.eqz
   if
    i32.const 25808
    i32.const 101040
    i32.const 116
    i32.const 10
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 39200
   i32.store offset=8
   local.get $0
   i32.const 39200
   call $"~lib/map/Map<~lib/string/String,i32>#get"
   i32.const 1
   i32.eq
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=24
    local.get $0
    i32.eqz
    if
     i32.const 25808
     i32.const 101040
     i32.const 116
     i32.const 35
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 39200
    i32.store offset=8
    local.get $0
    i32.const 39200
    call $"~lib/map/Map<~lib/string/String,i32>#get"
    i32.const 2
    i32.eq
   end
   i32.eqz
   if
    i32.const 106272
    i32.const 101040
    i32.const 116
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 106352
   i32.store
   i32.const 106352
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   call $assembly/quaternion/SplitPrimeFactorizer.factorizeEisenstein
   local.tee $0
   i32.store
   local.get $0
   i32.eqz
   if
    i32.const 106512
    i32.const 101040
    i32.const 121
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   i32.eqz
   if
    i32.const 25808
    i32.const 101040
    i32.const 122
    i32.const 10
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 41344
   i32.store offset=8
   local.get $0
   i32.const 41344
   call $"~lib/map/Map<~lib/string/String,i32>#get"
   i32.const 1
   i32.eq
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    local.get $0
    i32.eqz
    if
     i32.const 25808
     i32.const 101040
     i32.const 122
     i32.const 35
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 41344
    i32.store offset=8
    local.get $0
    i32.const 41344
    call $"~lib/map/Map<~lib/string/String,i32>#get"
    i32.const 2
    i32.eq
   end
   i32.eqz
   if
    i32.const 106624
    i32.const 101040
    i32.const 122
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $0
   i32.eqz
   if
    i32.const 25808
    i32.const 101040
    i32.const 123
    i32.const 10
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 106480
   i32.store offset=8
   local.get $0
   i32.const 106480
   call $"~lib/map/Map<~lib/string/String,i32>#get"
   i32.const 1
   i32.eq
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=24
    local.get $0
    i32.eqz
    if
     i32.const 25808
     i32.const 101040
     i32.const 123
     i32.const 35
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 106480
    i32.store offset=8
    local.get $0
    i32.const 106480
    call $"~lib/map/Map<~lib/string/String,i32>#get"
    i32.const 2
    i32.eq
   end
   i32.eqz
   if
    i32.const 106704
    i32.const 101040
    i32.const 123
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 106784
   i32.store
   i32.const 106784
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/quaternion/SplitPrimeFactorizer.createQuaternion
   local.tee $0
   i32.store
   local.get $0
   i32.eqz
   if
    i32.const 106912
    i32.const 101040
    i32.const 128
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   i32.eqz
   if
    i32.const 25808
    i32.const 101040
    i32.const 129
    i32.const 10
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/quaternion/Quaternion#norm
   f64.const 0
   f64.gt
   i32.eqz
   if
    i32.const 107040
    i32.const 101040
    i32.const 129
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 107152
   i32.store
   i32.const 107152
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/quaternion/QuaternionicResonanceField#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $"~lib/map/Map<u32,f64>#get:size"
   if
    i32.const 107280
    i32.const 101040
    i32.const 134
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   call $assembly/core/builders/QuantumCircuitBuilder#getGates
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/typedarray/Float64Array#get:length
   i32.const 3
   i32.ne
   if
    i32.const 107376
    i32.const 101040
    i32.const 135
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 107488
   i32.store
   i32.const 107488
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/quaternion/QuaternionicResonanceField#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/quaternion/QuaternionicResonanceField#addPrime
   i32.eqz
   if
    i32.const 107616
    i32.const 101040
    i32.const 141
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $"~lib/map/Map<u32,f64>#get:size"
   i32.const 1
   i32.ne
   if
    i32.const 107712
    i32.const 101040
    i32.const 142
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 107840
   i32.store
   i32.const 107840
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/quaternion/QuaternionicResonanceField#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/quaternion/QuaternionicResonanceField#addPrime
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   f64.const 0.1
   f64.const 0.2
   call $assembly/quaternion/QuaternionicResonanceField#computeField
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/quaternion/Quaternion#norm
   f64.const 0
   f64.gt
   i32.eqz
   if
    i32.const 107968
    i32.const 101040
    i32.const 149
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 108080
   i32.store
   i32.const 108080
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/quaternion/QuaternionicResonanceField#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/quaternion/QuaternionicResonanceField#addPrime
   drop
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $0
   local.get $2
   call $assembly/quaternion/QuaternionicResonanceField#optimizeParameters
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 108208
   i32.store
   i32.const 108208
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   call $assembly/quaternion/TwistDynamics#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/quaternion/TwistDynamics#getTwistAngle
   f64.const 0
   f64.ne
   if
    i32.const 108352
    i32.const 101040
    i32.const 163
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 108448
   i32.store
   i32.const 108448
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/quaternion/TwistDynamics#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 1
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $1
   local.get $2
   f64.load offset=8
   f64.mul
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.load offset=16
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $1
   local.get $3
   local.get $2
   f64.load offset=16
   f64.mul
   f64.add
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.load offset=24
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $1
   local.get $3
   local.get $2
   f64.load offset=24
   f64.mul
   f64.add
   f64.sqrt
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $1
   local.get $2
   f64.load
   call $~lib/math/NativeMath.atan2
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   f64.const -0.7853981633974483
   f64.add
   f64.abs
   f64.const 1e-09
   f64.lt
   i32.eqz
   if
    i32.const 108544
    i32.const 101040
    i32.const 170
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 108656
   i32.store
   i32.const 108656
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   call $assembly/quaternion/TwistDynamics#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/quaternion/TwistDynamics#getTwistAngle
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   call $~lib/math/NativeMath.random
   f64.const -0.5
   f64.add
   f64.const 2
   f64.mul
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $3
   local.get $0
   f64.load offset=24
   f64.mul
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=8
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=16
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $4
   local.get $5
   local.get $0
   f64.load
   f64.const 2
   f64.mul
   call $~lib/math/NativeMath.sin
   f64.mul
   f64.add
   local.get $3
   f64.add
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   f64.load
   local.get $3
   f64.const 0.01
   f64.mul
   f64.add
   f64.store
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    f64.load
    f64.const 6.283185307179586
    f64.gt
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $0
     f64.load
     f64.const -6.283185307179586
     f64.add
     f64.store
     br $while-continue|0
    end
   end
   loop $while-continue|1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    f64.load
    f64.const 0
    f64.lt
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $0
     f64.load
     f64.const 6.283185307179586
     f64.add
     f64.store
     br $while-continue|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/quaternion/TwistDynamics#getTwistAngle
   local.get $1
   f64.eq
   if
    i32.const 108768
    i32.const 101040
    i32.const 177
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 108848
   i32.store
   i32.const 108848
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   call $assembly/quaternion/TwistDynamics#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0.5
   call $assembly/quaternion/TwistDynamics#checkCollapse
   if
    i32.const 108944
    i32.const 101040
    i32.const 183
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.const 0.005
   f64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0.05
   call $assembly/quaternion/TwistDynamics#checkCollapse
   i32.eqz
   if
    i32.const 109040
    i32.const 101040
    i32.const 187
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 109168
   i32.store
   i32.const 109168
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 0.05
   call $assembly/quaternion/QuaternionicProjector#constructor
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 109280
   i32.store
   i32.const 109280
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 0.01
   call $assembly/quaternion/QuaternionicProjector#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   f64.const 3
   f64.const 4
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   call $~lib/typedarray/Float64Array#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $7
   i32.const 0
   local.get $2
   f64.load offset=8
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i32.const 1
   f64.const -1
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   f64.load offset=16
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $3
   local.get $2
   f64.load offset=16
   f64.mul
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   f64.load offset=24
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $3
   local.get $4
   local.get $2
   f64.load offset=24
   f64.mul
   f64.add
   f64.sqrt
   f64.mul
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $7
   i32.const 0
   local.get $3
   local.get $1
   local.get $2
   f64.load offset=24
   f64.mul
   f64.add
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $7
   i32.const 1
   local.get $3
   local.get $1
   local.get $2
   f64.load offset=16
   f64.neg
   f64.mul
   f64.add
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   local.get $7
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   call $~lib/typedarray/Float64Array#get:length
   i32.const 2
   i32.ne
   if
    i32.const 109392
    i32.const 101040
    i32.const 199
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   f64.const 0
   f64.ne
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=8
    local.get $7
    i32.const 1
    call $~lib/typedarray/Float64Array#__get
    f64.const 0
    f64.ne
   end
   i32.eqz
   if
    i32.const 109488
    i32.const 101040
    i32.const 200
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 109584
   i32.store
   i32.const 109584
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 0.01
   call $assembly/quaternion/QuaternionicProjector#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   f64.const 3
   f64.const 4
   call $assembly/quaternion/Quaternion#constructor
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   call $~lib/typedarray/Float64Array#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   f64.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   f64.load offset=8
   f64.mul
   f64.sqrt
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $3
   local.get $0
   f64.load
   f64.mul
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   f64.load offset=16
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $4
   local.get $2
   f64.load offset=16
   f64.mul
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   f64.load offset=24
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $3
   local.get $4
   local.get $5
   local.get $2
   f64.load offset=24
   f64.mul
   f64.add
   f64.mul
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i32.const 0
   local.get $1
   local.get $3
   f64.add
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i32.const 1
   local.get $1
   f64.neg
   local.get $3
   f64.sub
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   local.get $7
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   call $~lib/typedarray/Float64Array#get:length
   i32.const 2
   i32.ne
   if
    i32.const 109696
    i32.const 101040
    i32.const 207
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   f64.const 0
   f64.ne
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=8
    local.get $7
    i32.const 1
    call $~lib/typedarray/Float64Array#__get
    f64.const 0
    f64.ne
   end
   i32.eqz
   if
    i32.const 109792
    i32.const 101040
    i32.const 208
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 109872
   i32.store
   i32.const 109872
   call $~lib/console/console.log
   call $assembly/tests/quaternion.test/testQuaternionPoolAllocateAndDeallocate
   global.get $~lib/memory/__stack_pointer
   i32.const 110400
   i32.store
   i32.const 110400
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 110528
   i32.store
   i32.const 110528
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/entropy-viz/EntropyFieldData#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.const 110
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=24
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,f64>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,f64>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<u32,f64>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=16
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<u32,f64>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=20
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 0
  call $~lib/array/Array<f64>#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=24
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/entropy-viz/EntropyFieldSampler#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 109
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  call $assembly/entropy-viz/EntropyFieldData#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0.1
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/tests/entropy-viz.test/createMockResonantFragment (param $0 f64) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.const 0
  local.get $0
  call $assembly/resolang/ResonantFragment#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/entropy-viz/EntropyFieldSampler#sampleFragment (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $2
  local.get $1
  f64.load offset=8
  call $"~lib/map/Map<~lib/string/String,f64>#set"
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/tests/entropy-viz.test/createMockEntangledNode (param $0 i32) (param $1 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 2
  i32.const 3
  i32.const 5
  call $assembly/resolang/EntangledNode#constructor
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/entropy-viz/EntropyFieldSampler#sampleNode (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $2
  local.get $1
  f64.load offset=16
  call $"~lib/map/Map<~lib/string/String,f64>#set"
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/entropy-viz/EntropyFieldSampler#samplePrimeState (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $3
  i32.store offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    local.get $2
    call $~lib/array/Array<u32>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $4
    i32.store
    local.get $4
    local.get $5
    call $"~lib/map/Map<u32,f64>#has"
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.load offset=16
     local.tee $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $6
     i32.store offset=4
     local.get $4
     local.get $5
     local.get $6
     local.get $5
     call $"~lib/map/Map<u32,f64>#get"
     call $"~lib/map/Map<u32,f64>#set"
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/entropy-viz/EntropyFieldSampler#sampleQuaternion (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f64)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  f64.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $1
  f64.load offset=8
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  f64.load offset=16
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $4
  local.get $1
  f64.load offset=16
  f64.mul
  f64.add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  f64.load offset=24
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $4
  local.get $1
  f64.load offset=24
  f64.mul
  f64.add
  f64.sqrt
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $1
  f64.load
  call $~lib/math/NativeMath.atan2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=20
  local.tee $0
  i32.store
  local.get $0
  local.get $2
  local.get $3
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/entropy-viz/EntropyFieldSampler#get:gridSize (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=16
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/entropy-viz.test/testEntropyFieldSamplerSampleField2D
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   local.tee $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 112912
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   f64.const 1
   local.get $6
   call $assembly/entropy-viz/EntropyFieldSampler#get:gridSize
   i32.const 1
   i32.sub
   f64.convert_i32_s
   f64.div
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   f64.const 1
   local.get $6
   call $assembly/entropy-viz/EntropyFieldSampler#get:gridSize
   i32.const 1
   i32.sub
   f64.convert_i32_s
   f64.div
   local.set $5
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=4
    local.get $6
    call $assembly/entropy-viz/EntropyFieldSampler#get:gridSize
    local.get $2
    i32.gt_s
    if
     i32.const 0
     local.set $1
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=4
      local.get $6
      call $assembly/entropy-viz/EntropyFieldSampler#get:gridSize
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       i32.const 2
       global.set $~argumentsLength
       local.get $0
       local.get $1
       f64.convert_i32_s
       local.get $4
       f64.mul
       f64.const 0
       f64.add
       local.get $2
       f64.convert_i32_s
       local.get $5
       f64.mul
       f64.const 0
       f64.add
       i32.const 112912
       i32.load
       call_indirect (type $8)
       call $~lib/array/Array<f64>#push
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|1
      end
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.load
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store offset=24
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 4
   i32.ne
   if
    i32.const 112944
    i32.const 110960
    i32.const 73
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   call $~lib/array/Array<f64>#__get
   f64.const 0
   f64.ne
   if
    i32.const 113040
    i32.const 110960
    i32.const 74
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   call $~lib/array/Array<f64>#__get
   f64.const 1
   f64.ne
   if
    i32.const 113104
    i32.const 110960
    i32.const 75
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   call $~lib/array/Array<f64>#__get
   f64.const 1
   f64.ne
   if
    i32.const 113168
    i32.const 110960
    i32.const 76
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   call $~lib/array/Array<f64>#__get
   f64.const 2
   f64.ne
   if
    i32.const 113232
    i32.const 110960
    i32.const 77
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/entropy-viz/EntropyFieldSampler#exportData (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 60
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 55168
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 55168
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 113440
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store offset=28
  local.get $3
  f64.load
  call $~lib/number/F64#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=24
  i32.const 113440
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 55232
  i32.store offset=16
  local.get $3
  i32.const 55232
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $1
  i32.const 55168
  local.get $3
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113488
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 113488
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load offset=8
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $"~lib/map/Map<~lib/string/String,f64>#keys"
  local.tee $3
  i32.store offset=36
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 55232
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $2
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
    local.tee $4
    i32.store offset=40
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 55296
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=32
    i32.const 55296
    local.get $4
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 62208
    i32.store offset=24
    local.get $6
    i32.const 62208
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.load offset=8
    local.tee $7
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=24
    local.get $7
    local.get $4
    call $"~lib/map/Map<~lib/string/String,f64>#get"
    call $~lib/number/F64#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $6
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $5
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113536
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 113536
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113568
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 113568
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load offset=12
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $"~lib/map/Map<~lib/string/String,f64>#keys"
  local.tee $3
  i32.store offset=44
  i32.const 0
  local.set $2
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 55232
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $2
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
    local.tee $4
    i32.store offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 55296
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=32
    i32.const 55296
    local.get $4
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 62208
    i32.store offset=24
    local.get $6
    i32.const 62208
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.load offset=12
    local.tee $7
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=24
    local.get $7
    local.get $4
    call $"~lib/map/Map<~lib/string/String,f64>#get"
    call $~lib/number/F64#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $6
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $5
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113536
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 113536
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113616
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 113616
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load offset=16
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $3
  i32.store offset=52
  i32.const 0
  local.set $2
  loop $for-loop|2
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 55232
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    local.get $2
    call $~lib/array/Array<u32>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 55296
    i32.store offset=28
    local.get $4
    i32.const 10
    call $~lib/util/number/utoa32
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=32
    i32.const 55296
    local.get $6
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 62208
    i32.store offset=24
    local.get $6
    i32.const 62208
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.load offset=16
    local.tee $7
    i32.store offset=20
    local.get $7
    local.get $4
    call $"~lib/map/Map<u32,f64>#get"
    call $~lib/number/F64#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $6
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $5
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113536
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 113536
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113664
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 113664
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load offset=20
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $3
  i32.store offset=56
  i32.const 0
  local.set $2
  loop $for-loop|3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 55232
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    local.get $2
    call $~lib/array/Array<u32>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 55296
    i32.store offset=28
    local.get $4
    i32.const 10
    call $~lib/util/number/utoa32
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=32
    i32.const 55296
    local.get $6
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 62208
    i32.store offset=24
    local.get $6
    i32.const 62208
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.load offset=20
    local.tee $7
    i32.store offset=20
    local.get $7
    local.get $4
    call $"~lib/map/Map<u32,f64>#get"
    call $~lib/number/F64#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $6
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $5
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|3
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113536
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 113536
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113728
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 113728
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  i32.const 0
  local.set $2
  loop $for-loop|4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=24
   local.tee $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 55232
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $4
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load offset=24
    local.tee $4
    i32.store offset=12
    local.get $4
    local.get $2
    call $~lib/array/Array<f64>#__get
    call $~lib/number/F64#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $3
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|4
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 55408
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 55408
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 55200
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 55200
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/entropy-viz.test/testEntropyFieldSamplerExportData
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 50
  call $assembly/entropy-viz/EntropyFieldSampler#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store offset=4
  local.get $1
  f64.const 12345
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  f64.const 0.1
  call $assembly/tests/entropy-viz.test/createMockResonantFragment
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 113408
  i32.store offset=12
  local.get $0
  local.get $1
  i32.const 113408
  call $assembly/entropy-viz/EntropyFieldSampler#sampleFragment
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 60704
  i32.store offset=12
  i32.const 60704
  f64.const 0.9
  call $assembly/tests/entropy-viz.test/createMockEntangledNode
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  call $assembly/entropy-viz/EntropyFieldSampler#sampleNode
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 17
  f64.const 0.5
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $assembly/quantum/prime-state/PrimeState.fromAmplitudes
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  call $assembly/entropy-viz/EntropyFieldSampler#samplePrimeState
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  f64.const 1
  f64.const 0
  f64.const 0
  f64.const 0
  call $assembly/quaternion/Quaternion#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 19
  call $assembly/entropy-viz/EntropyFieldSampler#sampleQuaternion
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $assembly/entropy-viz/EntropyFieldSampler#exportData
  local.tee $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113776
  i32.store offset=8
  local.get $0
  i32.const 113776
  call $~lib/string/String#includes
  i32.eqz
  if
   i32.const 113840
   i32.const 110960
   i32.const 91
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 113936
  i32.store offset=8
  local.get $0
  i32.const 113936
  call $~lib/string/String#includes
  i32.eqz
  if
   i32.const 114016
   i32.const 110960
   i32.const 92
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 114144
  i32.store offset=8
  local.get $0
  i32.const 114144
  call $~lib/string/String#includes
  i32.eqz
  if
   i32.const 114208
   i32.const 110960
   i32.const 93
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 114320
  i32.store offset=8
  local.get $0
  i32.const 114320
  call $~lib/string/String#includes
  i32.eqz
  if
   i32.const 114384
   i32.const 110960
   i32.const 94
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 114496
  i32.store offset=8
  local.get $0
  i32.const 114496
  call $~lib/string/String#includes
  i32.eqz
  if
   i32.const 114560
   i32.const 110960
   i32.const 95
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 114672
  i32.store offset=8
  local.get $0
  i32.const 114672
  call $~lib/string/String#includes
  i32.eqz
  if
   i32.const 114720
   i32.const 110960
   i32.const 96
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/entropy-viz/EntropyEvolutionTracker#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 113
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 114
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   local.get $1
   local.get $3
   i32.store
   local.get $1
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 50
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/resolang/ResonantFragment>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 231
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/resolang/EntangledNode>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 232
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/entropy-viz/EntropyEvolutionTracker#recordState (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#keys"
  local.tee $7
  i32.store offset=4
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   call $~lib/array/Array<u32>#get:length
   local.get $5
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $7
    local.get $5
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
    local.tee $8
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=12
    local.get $1
    local.get $8
    call $"~lib/map/Map<~lib/string/String,i32>#has"
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $6
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=24
     local.get $1
     local.get $8
     call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=16
     local.get $6
     local.get $9
     local.get $8
     call $assembly/entropy-viz/EntropyFieldSampler#sampleFragment
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#keys"
  local.tee $1
  i32.store offset=28
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/array/Array<u32>#get:length
   local.get $4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    local.get $4
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
    local.tee $5
    i32.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=12
    local.get $2
    local.get $5
    call $"~lib/map/Map<~lib/string/String,i32>#has"
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $6
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=20
     local.get $2
     local.get $5
     call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=12
     local.get $6
     local.get $5
     call $assembly/entropy-viz/EntropyFieldSampler#sampleNode
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  i32.const 0
  local.set $1
  loop $for-loop|2
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=16
    local.get $3
    local.get $1
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=12
    local.get $2
    local.get $4
    call $assembly/entropy-viz/EntropyFieldSampler#samplePrimeState
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  local.get $1
  call $~lib/array/Array<u32>#get:length
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=4
  i32.ge_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   local.get $1
   call $~lib/array/Array<assembly/runtime/state/globalState/IGlobalCoherence>#shift
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $2
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load
  local.tee $2
  i32.store offset=12
  local.get $1
  local.get $2
  call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 50
  call $assembly/entropy-viz/EntropyFieldSampler#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/tests/entropy-viz.test/testEntropyEvolutionTrackerRecordState
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  call $assembly/entropy-viz/EntropyEvolutionTracker#constructor
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<~lib/string/String,assembly/resolang/ResonantFragment>#constructor"
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 111888
  i32.store offset=12
  f64.const 0.1
  call $assembly/tests/entropy-viz.test/createMockResonantFragment
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $0
  i32.const 111888
  local.get $1
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<~lib/string/String,assembly/resolang/EntangledNode>#constructor"
  local.tee $4
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 77424
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 77424
  i32.store offset=24
  i32.const 77424
  f64.const 0.5
  call $assembly/tests/entropy-viz.test/createMockEntangledNode
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $4
  i32.const 77424
  local.get $1
  call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
  global.get $~lib/memory/__stack_pointer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 220
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  i32.store offset=32
  call $"~lib/map/Map<u32,f64>#constructor"
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $1
  i32.const 0
  local.get $2
  call $assembly/quantum/prime-state/PrimeState.fromAmplitudes
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $5
  local.get $1
  i32.store offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $3
  local.get $0
  local.get $4
  local.get $1
  call $assembly/entropy-viz/EntropyEvolutionTracker#recordState
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $3
  call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $~lib/array/Array<u32>#get:length
  i32.const 1
  i32.ne
  if
   i32.const 115360
   i32.const 110960
   i32.const 120
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $3
  local.get $0
  local.get $4
  local.get $1
  call $assembly/entropy-viz/EntropyEvolutionTracker#recordState
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $3
  call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $~lib/array/Array<u32>#get:length
  i32.const 2
  i32.ne
  if
   i32.const 115440
   i32.const 110960
   i32.const 123
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $3
  local.get $0
  local.get $4
  local.get $1
  call $assembly/entropy-viz/EntropyEvolutionTracker#recordState
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $3
  call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 2
  i32.ne
  if
   i32.const 115520
   i32.const 110960
   i32.const 126
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/entropy-viz/EntropyEvolutionTracker#findCriticalPoints (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 233
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 1
   local.set $2
   loop $for-loop|0
    local.get $2
    i32.const 9
    i32.lt_s
    if
     i32.const 1
     local.set $3
     loop $for-loop|1
      local.get $3
      i32.const 9
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       i32.const 116096
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $3
       f64.convert_i32_s
       f64.const 0.1111111111111111
       f64.mul
       f64.const 0
       f64.add
       local.tee $4
       local.get $2
       f64.convert_i32_s
       f64.const 0.1111111111111111
       f64.mul
       f64.const 0
       f64.add
       local.tee $5
       i32.const 116096
       call $assembly/entropy-viz/EntropyEvolutionTracker#getEntropyGradient
       local.tee $6
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store offset=4
       local.get $6
       i32.const 0
       call $~lib/array/Array<f64>#__get
       f64.abs
       f64.const 0.15
       f64.lt
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store offset=4
        local.get $6
        i32.const 1
        call $~lib/array/Array<f64>#__get
        f64.abs
        f64.const 0.15
        f64.lt
       else
        i32.const 0
       end
       if
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        i32.const 3
        i32.const 3
        i32.const 7
        i32.const 0
        call $~lib/rt/__newArray
        local.tee $6
        i32.store offset=16
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.load offset=4
        i32.store offset=20
        local.get $6
        i32.const 0
        local.get $4
        call $~lib/array/Array<f64>#__set
        local.get $6
        i32.const 1
        local.get $5
        call $~lib/array/Array<f64>#__set
        i32.const 2
        global.set $~argumentsLength
        local.get $6
        i32.const 2
        local.get $4
        local.get $5
        i32.const 116096
        i32.load
        call_indirect (type $8)
        call $~lib/array/Array<f64>#__set
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store offset=8
        local.get $1
        local.get $6
        call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
       end
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|1
      end
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/entropy-viz/EntropyEvolutionTracker#exportHistory (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  i32.const 55376
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 55376
  i32.store
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 55232
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 55232
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 116368
    i32.store offset=20
    local.get $2
    i32.const 10
    call $~lib/number/I32#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=24
    i32.const 116368
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 55200
    i32.store offset=16
    local.get $4
    i32.const 55200
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $3
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 55408
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 55408
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/tests/entropy-viz.test/runAllEntropyVizTests
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 110800
   i32.store
   i32.const 110800
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/entropy-viz/EntropyFieldData#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load
   f64.const 0
   f64.ne
   if
    i32.const 110896
    i32.const 110960
    i32.const 23
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.store offset=4
   local.get $1
   call $"~lib/map/Map<u32,f64>#get:size"
   if
    i32.const 111056
    i32.const 110960
    i32.const 24
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=12
   local.tee $1
   i32.store offset=4
   local.get $1
   call $"~lib/map/Map<u32,f64>#get:size"
   if
    i32.const 111152
    i32.const 110960
    i32.const 25
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=16
   local.tee $1
   i32.store offset=4
   local.get $1
   call $"~lib/map/Map<u32,f64>#get:size"
   if
    i32.const 111248
    i32.const 110960
    i32.const 26
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=20
   local.tee $1
   i32.store offset=4
   local.get $1
   call $"~lib/map/Map<u32,f64>#get:size"
   if
    i32.const 111344
    i32.const 110960
    i32.const 27
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=24
   local.tee $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   if
    i32.const 111440
    i32.const 110960
    i32.const 28
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 111552
   i32.store
   i32.const 111552
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 50
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.load
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 111776
   i32.store
   i32.const 111776
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 50
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 0.5
   call $assembly/tests/entropy-viz.test/createMockResonantFragment
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 111888
   i32.store offset=16
   local.get $0
   local.get $1
   i32.const 111888
   call $assembly/entropy-viz/EntropyFieldSampler#sampleFragment
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 111888
   i32.store offset=12
   local.get $0
   i32.const 111888
   call $"~lib/map/Map<~lib/string/String,f64>#get"
   f64.const 0.5
   f64.ne
   if
    i32.const 111920
    i32.const 110960
    i32.const 41
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 112016
   i32.store
   i32.const 112016
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 50
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   f64.const 0.8
   call $assembly/tests/entropy-viz.test/createMockEntangledNode
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $assembly/entropy-viz/EntropyFieldSampler#sampleNode
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=12
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   i32.store offset=12
   local.get $0
   i32.const 77424
   call $"~lib/map/Map<~lib/string/String,f64>#get"
   f64.const 0.8
   f64.ne
   if
    i32.const 112128
    i32.const 110960
    i32.const 48
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 112224
   i32.store
   i32.const 112224
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 50
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 2
   f64.const 0.6
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 3
   f64.const 0.8
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/quantum/prime-state/PrimeState.fromAmplitudes
   local.tee $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   local.get $0
   local.get $1
   call $assembly/entropy-viz/EntropyFieldSampler#samplePrimeState
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $1
   i32.store offset=8
   local.get $1
   i32.const 2
   call $"~lib/map/Map<u32,f64>#get"
   f64.const 0.6
   f64.ne
   if
    i32.const 112336
    i32.const 110960
    i32.const 58
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=16
   local.tee $0
   i32.store offset=8
   local.get $0
   i32.const 3
   call $"~lib/map/Map<u32,f64>#get"
   f64.const 0.8
   f64.ne
   if
    i32.const 112448
    i32.const 110960
    i32.const 59
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 112560
   i32.store
   i32.const 112560
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 50
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 7
   call $assembly/entropy-viz/EntropyFieldSampler#sampleQuaternion
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=20
   local.tee $0
   i32.store offset=8
   local.get $0
   i32.const 7
   call $"~lib/map/Map<u32,f64>#get"
   f64.const 0
   f64.ne
   if
    i32.const 112688
    i32.const 110960
    i32.const 66
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 112784
   i32.store
   i32.const 112784
   call $~lib/console/console.log
   call $assembly/tests/entropy-viz.test/testEntropyFieldSamplerSampleField2D
   global.get $~lib/memory/__stack_pointer
   i32.const 113296
   i32.store
   i32.const 113296
   call $~lib/console/console.log
   call $assembly/tests/entropy-viz.test/testEntropyFieldSamplerExportData
   global.get $~lib/memory/__stack_pointer
   i32.const 114848
   i32.store
   i32.const 114848
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 50
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   local.get $1
   f64.const 54321
   f64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store offset=4
   local.get $0
   f64.load
   f64.const 54321
   f64.ne
   if
    i32.const 114960
    i32.const 110960
    i32.const 102
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 115040
   i32.store
   i32.const 115040
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 100
   call $assembly/entropy-viz/EntropyEvolutionTracker#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   call $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTable
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   if
    i32.const 115152
    i32.const 110960
    i32.const 107
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 115232
   i32.store
   i32.const 115232
   call $~lib/console/console.log
   call $assembly/tests/entropy-viz.test/testEntropyEvolutionTrackerRecordState
   global.get $~lib/memory/__stack_pointer
   i32.const 115648
   i32.store
   i32.const 115648
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 100
   call $assembly/entropy-viz/EntropyEvolutionTracker#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 115776
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 2
   i32.const 115776
   call $assembly/entropy-viz/EntropyEvolutionTracker#getEntropyGradient
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   call $~lib/array/Array<f64>#__get
   f64.const -2
   f64.add
   f64.abs
   f64.const 0.001
   f64.lt
   i32.eqz
   if
    i32.const 115808
    i32.const 110960
    i32.const 133
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1
   call $~lib/array/Array<f64>#__get
   f64.const -4
   f64.add
   f64.abs
   f64.const 0.001
   f64.lt
   i32.eqz
   if
    i32.const 115888
    i32.const 110960
    i32.const 134
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 115968
   i32.store
   i32.const 115968
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 100
   call $assembly/entropy-viz/EntropyEvolutionTracker#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 116096
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/entropy-viz/EntropyEvolutionTracker#findCriticalPoints
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 0
   i32.le_s
   if
    i32.const 116128
    i32.const 110960
    i32.const 141
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 116240
   i32.store
   i32.const 116240
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 44
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   call $assembly/entropy-viz/EntropyEvolutionTracker#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<~lib/string/String,assembly/resolang/ResonantFragment>#constructor"
   local.tee $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 111888
   i32.store offset=12
   f64.const 0.1
   call $assembly/tests/entropy-viz.test/createMockResonantFragment
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $3
   i32.const 111888
   local.get $0
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<~lib/string/String,assembly/resolang/EntangledNode>#constructor"
   local.tee $4
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 77424
   i32.store offset=24
   i32.const 77424
   f64.const 0.5
   call $assembly/tests/entropy-viz.test/createMockEntangledNode
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $4
   i32.const 77424
   local.get $0
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#set"
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 220
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $2
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   i32.store offset=32
   call $"~lib/map/Map<u32,f64>#constructor"
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $2
   i32.const 0
   local.get $5
   call $assembly/quantum/prime-state/PrimeState.fromAmplitudes
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $0
   local.get $2
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=24
   local.get $1
   local.get $3
   local.get $4
   local.get $2
   call $assembly/entropy-viz/EntropyEvolutionTracker#recordState
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/entropy-viz/EntropyEvolutionTracker#exportHistory
   local.tee $0
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 116416
   i32.store offset=12
   local.get $0
   i32.const 116416
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 116464
    i32.const 110960
    i32.const 155
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 116560
   i32.store
   i32.const 116560
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   i32.const 50
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   global.set $assembly/entropy-viz/globalSampler
   i32.const 100
   call $assembly/entropy-viz/EntropyEvolutionTracker#constructor
   global.set $assembly/entropy-viz/globalTracker
   global.get $~lib/memory/__stack_pointer
   call $assembly/entropy-viz/getGlobalSampler
   i32.store
   global.get $~lib/memory/__stack_pointer
   call $assembly/entropy-viz/getGlobalTracker
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   call $assembly/entropy-viz/getGlobalSampler
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $assembly/entropy-viz/EntropyFieldSampler#exportData
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 116768
   i32.store offset=16
   local.get $1
   i32.const 116768
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 116816
    i32.const 110960
    i32.const 168
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   call $assembly/entropy-viz/getGlobalTracker
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $assembly/entropy-viz/EntropyEvolutionTracker#exportHistory
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 116928
   i32.store offset=16
   local.get $1
   i32.const 116928
   call $~lib/string/String#includes
   i32.eqz
   if
    i32.const 116960
    i32.const 110960
    i32.const 171
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 117088
   i32.store
   i32.const 117088
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 117168
   i32.store
   i32.const 117168
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/test-index/runAllTests
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 6336
   i32.store
   i32.const 6336
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 6432
   i32.store
   i32.const 6432
   call $~lib/console/console.log
   call $assembly/tests/core-math.test/runAllTests
   global.get $~lib/memory/__stack_pointer
   i32.const 14688
   i32.store
   i32.const 14688
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 14768
   i32.store
   i32.const 14768
   call $~lib/console/console.log
   call $assembly/tests/core-crypto.test/runAllTests
   global.get $~lib/memory/__stack_pointer
   i32.const 19680
   i32.store
   i32.const 19680
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 19760
   i32.store
   i32.const 19760
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $assembly/runtime/RISAEngine#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 121
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 3792
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 120
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=4
   i32.store offset=28
   local.get $3
   i32.const 0
   i32.const 2
   call $assembly/runtime/argument/Argument.fromInt
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $3
   i32.const 1
   f64.const 0.5
   call $assembly/runtime/argument/Argument.fromFloat
   call $~lib/array/Array<~lib/string/String>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=20
   local.get $2
   i32.const 0
   i32.const 3792
   local.get $3
   call $assembly/runtime/IRISAInstruction#constructor
   call $~lib/array/Array<~lib/string/String>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 3888
   i32.store offset=12
   i32.const 0
   i32.const 2
   i32.const 120
   i32.const 20080
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=20
   local.get $2
   i32.const 1
   i32.const 3888
   local.get $3
   call $assembly/runtime/IRISAInstruction#constructor
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $1
   local.get $2
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $0
   local.get $2
   call $assembly/runtime/RISAEngine#loadProgram
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/runtime/RISAEngine#execute
   local.tee $0
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   i32.load8_u
   i32.eqz
   if
    i32.const 0
    i32.const 29472
    i32.const 14
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   i32.load offset=16
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 29472
    i32.const 15
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 29552
   i32.store
   i32.const 29552
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 29632
   i32.store
   i32.const 29632
   call $~lib/console/console.log
   call $assembly/tests/utils.test/runAllUtilsTests
   global.get $~lib/memory/__stack_pointer
   i32.const 38096
   i32.store
   i32.const 38096
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 38176
   i32.store
   i32.const 38176
   call $~lib/console/console.log
   call $assembly/tests/core-arrays.test/runAllArrayTests
   global.get $~lib/memory/__stack_pointer
   i32.const 49056
   i32.store
   i32.const 49056
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 49136
   i32.store
   i32.const 49136
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 49216
   i32.store
   i32.const 49216
   call $~lib/console/console.log
   call $assembly/tests/core-builders.test/testPrimeStateBuilder
   global.get $~lib/memory/__stack_pointer
   i32.const 50192
   i32.store
   i32.const 50192
   call $~lib/console/console.log
   call $assembly/tests/core-builders.test/testNetworkNodeBuilder
   global.get $~lib/memory/__stack_pointer
   i32.const 51296
   i32.store
   i32.const 51296
   call $~lib/console/console.log
   call $assembly/tests/core-builders.test/testProtocolMessageBuilder
   global.get $~lib/memory/__stack_pointer
   i32.const 52384
   i32.store
   i32.const 52384
   call $~lib/console/console.log
   call $assembly/tests/core-builders.test/testNetworkTopologyBuilder
   global.get $~lib/memory/__stack_pointer
   i32.const 53136
   i32.store
   i32.const 53136
   call $~lib/console/console.log
   call $assembly/tests/core-builders.test/testQuantumCircuitBuilder
   global.get $~lib/memory/__stack_pointer
   i32.const 53792
   i32.store
   i32.const 53792
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 53888
   i32.store
   i32.const 53888
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 53968
   i32.store
   i32.const 53968
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 54048
   i32.store
   i32.const 54048
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 54128
   i32.store
   i32.const 54128
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 54208
   i32.store
   global.get $~lib/memory/__stack_pointer
   call $assembly/core/config-loader/JSONConfigParser.parse
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 55808
   i32.store offset=8
   local.get $1
   i32.const 55808
   call $"~lib/map/Map<~lib/string/String,i32>#has"
   i32.eqz
   if
    i32.const 55856
    i32.const 55984
    i32.const 38
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 1
   i32.ne
   if
    i32.const 56096
    i32.const 55984
    i32.const 39
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 55760
   i32.store offset=8
   local.get $0
   i32.const 55760
   call $"~lib/map/Map<~lib/string/String,i32>#has"
   i32.eqz
   if
    i32.const 56224
    i32.const 55984
    i32.const 40
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 56336
   i32.store
   i32.const 56336
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 56416
   i32.store
   i32.const 56416
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 56512
   i32.store
   i32.const 56512
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 56608
   i32.store
   i32.const 56608
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 56688
   i32.store
   i32.const 56688
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 56768
   i32.store
   global.get $~lib/memory/__stack_pointer
   call $assembly/core/constants/generateUniqueId
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 56768
   i32.store
   global.get $~lib/memory/__stack_pointer
   call $assembly/core/constants/generateUniqueId
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 56848
   i32.store offset=12
   local.get $0
   i32.const 56848
   call $~lib/string/String#startsWith
   i32.eqz
   if
    i32.const 56880
    i32.const 56960
    i32.const 69
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $~lib/string/String.__ne
   i32.eqz
   if
    i32.const 57056
    i32.const 56960
    i32.const 70
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 57120
   i32.store
   i32.const 57120
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 57392
   i32.store
   i32.const 57392
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 57664
   i32.store
   i32.const 57664
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 58064
   i32.store
   i32.const 58064
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 58384
   i32.store
   i32.const 58384
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 58800
   i32.store
   i32.const 58800
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 58880
   i32.store
   i32.const 58880
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 58960
   i32.store
   i32.const 58960
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 59040
   i32.store
   i32.const 59040
   call $~lib/console/console.log
   call $assembly/tests/functionalBlocks.test/runAllFunctionalBlocksTests
   global.get $~lib/memory/__stack_pointer
   i32.const 65712
   i32.store
   i32.const 65712
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 65808
   i32.store
   i32.const 65808
   call $~lib/console/console.log
   call $assembly/tests/operators.test/runAllOperatorTests
   global.get $~lib/memory/__stack_pointer
   i32.const 75184
   i32.store
   i32.const 75184
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 75264
   i32.store
   i32.const 75264
   call $~lib/console/console.log
   call $assembly/tests/resonlang.test/runAllResoLangTests
   global.get $~lib/memory/__stack_pointer
   i32.const 83664
   i32.store
   i32.const 83664
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 83744
   i32.store
   i32.const 83744
   call $~lib/console/console.log
   call $assembly/tests/types.test/runAllTypesTests
   global.get $~lib/memory/__stack_pointer
   i32.const 92352
   i32.store
   i32.const 92352
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 92432
   i32.store
   i32.const 92432
   call $~lib/console/console.log
   call $assembly/tests/runtime.test/runAllRuntimeTests
   global.get $~lib/memory/__stack_pointer
   i32.const 96944
   i32.store
   i32.const 96944
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 97024
   i32.store
   i32.const 97024
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 97152
   i32.store
   i32.const 97152
   call $~lib/console/console.log
   call $assembly/tests/quantum-ops-impl.test/testSuperposeOperation
   global.get $~lib/memory/__stack_pointer
   i32.const 97904
   i32.store
   i32.const 97904
   call $~lib/console/console.log
   call $assembly/tests/quantum-ops-impl.test/testMeasureOperation
   global.get $~lib/memory/__stack_pointer
   i32.const 98304
   i32.store
   i32.const 98304
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 2
   f64.const 0.6
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   f64.const 0.8
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 5
   f64.const 0.1
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/quantum/prime-state/PrimeState.fromAmplitudes
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/quantum/prime-state/PrimeState#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=4
   local.get $2
   call $"~lib/map/Map<u32,f64>#clear"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=4
   local.get $2
   i32.const 3
   f64.const 1
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   local.get $1
   call $"~lib/map/Map<u32,f64>#get:size"
   i32.const 1
   i32.ne
   if
    i32.const 98384
    i32.const 97504
    i32.const 71
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 3
   call $"~lib/map/Map<u32,f64>#has"
   i32.eqz
   if
    i32.const 98544
    i32.const 97504
    i32.const 72
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store offset=4
   local.get $0
   i32.const 3
   call $"~lib/map/Map<u32,f64>#get"
   f64.const 1
   f64.ne
   if
    i32.const 98672
    i32.const 97504
    i32.const 73
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 71200
   i32.store
   i32.const 71200
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 98784
   i32.store
   i32.const 98784
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 98912
   i32.store
   i32.const 98912
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 99040
   i32.store
   i32.const 99040
   call $~lib/console/console.log
   call $assembly/tests/quaternion-entanglement.test/runAllQuaternionEntanglementTests
   global.get $~lib/memory/__stack_pointer
   i32.const 100688
   i32.store
   i32.const 100688
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 100800
   i32.store
   i32.const 100800
   call $~lib/console/console.log
   call $assembly/tests/quaternion.test/runAllQuaternionTests
   global.get $~lib/memory/__stack_pointer
   i32.const 110624
   i32.store
   i32.const 110624
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 110704
   i32.store
   i32.const 110704
   call $~lib/console/console.log
   call $assembly/tests/entropy-viz.test/runAllEntropyVizTests
   global.get $~lib/memory/__stack_pointer
   i32.const 117280
   i32.store
   i32.const 117280
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 117392
   i32.store
   i32.const 117392
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 117456
   i32.store
   i32.const 117456
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<i32,i32>#get" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 6192
   i32.const 6256
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<i32,i32>#keys" (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $0
  call $~lib/array/Array<i32>#constructor
  local.tee $5
  i32.store offset=4
  loop $for-loop|0
   local.get $0
   local.get $2
   i32.gt_s
   if
    local.get $3
    local.get $2
    i32.const 12
    i32.mul
    i32.add
    local.tee $4
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     local.get $5
     local.get $1
     local.get $4
     i32.load
     call $~lib/array/Array<u32>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $1
  call $~lib/array/Array<~lib/string/String>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/runtime/state/primeState/PrimeStateEngine#createNumberState (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<i32,i32>#constructor"
   local.tee $6
   i32.store
   local.get $0
   local.set $1
   i32.const 2
   local.set $2
   loop $while-continue|0
    local.get $2
    local.get $2
    i32.mul
    local.get $1
    i32.le_s
    if
     local.get $1
     local.get $2
     i32.rem_s
     if
      local.get $2
      i32.const 1
      i32.add
      local.set $2
     else
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=8
      local.get $6
      local.get $2
      local.get $6
      local.get $2
      call $"~lib/map/Map<i32,i32>#get"
      local.tee $7
      if (result i32)
       local.get $7
      else
       i32.const 0
      end
      i32.const 1
      i32.add
      call $"~lib/map/Map<i32,i32>#set"
      local.get $1
      local.get $2
      i32.div_s
      local.set $1
     end
     br $while-continue|0
    end
   end
   local.get $1
   i32.const 1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=8
    local.get $6
    local.get $1
    local.get $6
    local.get $1
    call $"~lib/map/Map<i32,i32>#get"
    local.tee $1
    if (result i32)
     local.get $1
    else
     i32.const 0
    end
    i32.const 1
    i32.add
    call $"~lib/map/Map<i32,i32>#set"
   end
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<i32,assembly/types/Complex>#constructor"
   local.tee $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   call $"~lib/map/Map<i32,i32>#keys"
   local.tee $2
   i32.store offset=16
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     local.get $2
     local.get $3
     call $~lib/array/Array<i32>#__get
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=4
     local.get $6
     local.get $7
     call $"~lib/map/Map<i32,i32>#get"
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $8
     f64.convert_i32_s
     local.tee $5
     f64.sqrt
     f64.const 0
     call $assembly/types/Complex#constructor
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     local.get $1
     local.get $7
     local.get $8
     call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#set"
     local.get $4
     local.get $5
     f64.add
     local.set $4
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 235
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store offset=4
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   local.get $4
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/execution/stack/CallStackManager#popLoop (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=20
  local.tee $2
  i32.store
  local.get $2
  call $~lib/array/Array<u32>#get:length
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=20
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#pop
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $0
  i32.load offset=8
  i32.const 1
  i32.add
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/runtime/execution/controlFlow/ControlFlowManager#skipToMatching (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.load
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 2944
  i32.store offset=4
  block $folding-inner1
   block $folding-inner0
    local.get $3
    i32.const 2944
    call $~lib/string/String.__eq
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 2976
     i32.store offset=4
     local.get $3
     i32.const 2976
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $5
     call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#get"
     local.tee $0
     i32.store offset=8
     local.get $0
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 2944
      i32.store offset=4
      local.get $3
      i32.const 2944
      call $~lib/string/String.__eq
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       local.get $0
       i32.load
      else
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       local.get $0
       i32.load offset=4
      end
      local.set $0
      br $folding-inner0
     end
    else
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 3008
     i32.store offset=4
     local.get $3
     i32.const 3008
     call $~lib/string/String.__eq
     if (result i32)
      i32.const 1
     else
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 3056
      i32.store offset=4
      local.get $3
      i32.const 3056
      call $~lib/string/String.__eq
     end
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=4
      local.tee $6
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $6
      call $"~lib/map/Map<i32,i32>#keys"
      local.tee $6
      i32.store offset=12
      loop $for-loop|0
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store
       local.get $6
       call $~lib/array/Array<u32>#get:length
       local.get $4
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load offset=4
        local.tee $7
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store offset=4
        local.get $7
        local.get $6
        local.get $4
        call $~lib/array/Array<i32>#__get
        call $"~lib/map/Map<i32,i32>#get"
        local.get $5
        i32.eq
        if
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store
         local.get $6
         local.get $4
         call $~lib/array/Array<i32>#__get
         local.set $0
         br $folding-inner0
        end
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        br $for-loop|0
       end
      end
     end
    end
    i32.const 1
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    i32.load
    i32.const 1
    i32.add
    local.set $1
    loop $while-continue|1
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $0
     i32.const 0
     i32.gt_s
     local.get $2
     call $~lib/array/Array<u32>#get:length
     local.get $1
     i32.gt_s
     i32.and
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $2
      local.get $1
      call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
      local.tee $4
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.load
      local.tee $4
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $4
      call $~lib/string/String#toUpperCase
      local.tee $4
      i32.store offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 2944
      i32.store offset=4
      local.get $3
      i32.const 2944
      call $~lib/string/String.__eq
      if (result i32)
       i32.const 1
      else
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 2976
       i32.store offset=4
       local.get $3
       i32.const 2976
       call $~lib/string/String.__eq
      end
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 3136
       i32.store offset=4
       local.get $4
       i32.const 3136
       call $~lib/string/String.__eq
       if (result i32)
        i32.const 1
       else
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 3168
        i32.store offset=4
        local.get $4
        i32.const 3168
        call $~lib/string/String.__eq
       end
       if (result i32)
        i32.const 1
       else
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 27152
        i32.store offset=4
        local.get $4
        i32.const 27152
        call $~lib/string/String.__eq
       end
       if
        local.get $0
        i32.const 1
        i32.add
        local.set $0
       else
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 2976
        i32.store offset=4
        local.get $4
        i32.const 2976
        call $~lib/string/String.__eq
        if
         local.get $0
         i32.const 1
         i32.sub
         local.set $0
        else
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store
         global.get $~lib/memory/__stack_pointer
         i32.const 2944
         i32.store offset=4
         local.get $0
         i32.const 1
         i32.eq
         i32.const 0
         local.get $4
         i32.const 2944
         call $~lib/string/String.__eq
         select
         br_if $folding-inner1
        end
       end
      else
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 3008
       i32.store offset=4
       local.get $3
       i32.const 3008
       call $~lib/string/String.__eq
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 27200
        i32.store offset=4
        local.get $4
        i32.const 27200
        call $~lib/string/String.__eq
        if (result i32)
         local.get $0
         i32.const 1
         i32.add
        else
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store
         global.get $~lib/memory/__stack_pointer
         i32.const 3008
         i32.store offset=4
         local.get $0
         i32.const 1
         i32.sub
         local.get $0
         local.get $4
         i32.const 3008
         call $~lib/string/String.__eq
         select
        end
       else
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 3056
        i32.store offset=4
        local.get $3
        i32.const 3056
        call $~lib/string/String.__eq
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store
         global.get $~lib/memory/__stack_pointer
         i32.const 27232
         i32.store offset=4
         local.get $4
         i32.const 27232
         call $~lib/string/String.__eq
         if (result i32)
          i32.const 1
         else
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store
          global.get $~lib/memory/__stack_pointer
          i32.const 27264
          i32.store offset=4
          local.get $4
          i32.const 27264
          call $~lib/string/String.__eq
         end
         if (result i32)
          local.get $0
          i32.const 1
          i32.add
         else
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store
          global.get $~lib/memory/__stack_pointer
          i32.const 3056
          i32.store offset=4
          local.get $0
          i32.const 1
          i32.sub
          local.get $0
          local.get $4
          i32.const 3056
          call $~lib/string/String.__eq
          select
         end
        else
         local.get $0
        end
       end
       local.set $0
      end
      local.get $0
      i32.eqz
      br_if $folding-inner1
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|1
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const -1
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/runtime/execution/controlFlow/ControlFlowManager#getJumpTarget (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $1
  call $"~lib/map/Map<~lib/string/String,i32>#has"
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $"~lib/map/Map<~lib/string/String,i32>#get"
  else
   i32.const -1
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#slice (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 2
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $2
  local.get $2
  i32.const 2
  i32.gt_u
  select
  local.set $1
  i32.const 9
  local.get $2
  local.get $2
  i32.const 9
  i32.gt_u
  select
  local.get $1
  i32.sub
  local.tee $2
  i32.const 0
  i32.le_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 14928
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 1
  i32.shl
  local.tee $3
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=4
  local.get $2
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.get $3
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/runtime/execution/stack/CallStackManager#pushCall (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 44
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $6
   i32.store
   local.get $6
   call $~lib/array/Array<u32>#get:length
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $7
   i32.store
   local.get $6
   local.get $7
   i32.load
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 44
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   call $~lib/util/number/itoa64
   local.tee $8
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.set $9
   call $~lib/math/NativeMath.random
   call $~lib/number/F64#toString
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=20
   local.get $9
   local.get $6
   call $~lib/string/String#slice
   local.tee $6
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 117744
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=28
   i32.const 117748
   local.get $8
   i32.store
   i32.const 117744
   local.get $8
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 117744
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=28
   i32.const 117756
   local.get $6
   i32.store
   i32.const 117744
   local.get $6
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 117744
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=28
   i32.const 117744
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 117792
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=36
   i32.const 117792
   local.get $2
   call $~lib/string/String#concat
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 117840
   i32.store offset=28
   i32.const 2
   global.set $~argumentsLength
   local.get $8
   i32.const 117840
   call $assembly/runtime/execution/context/ExecutionScope#constructor@varargs
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   i32.const 5
   global.set $~argumentsLength
   local.get $7
   block $__inlined_func$assembly/runtime/execution/context/ExecutionFrame#constructor@varargs$160 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 24
     memory.fill
     call $~lib/bindings/dom/Date.now
     i64.trunc_sat_f64_s
     f64.convert_i64_s
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 32
     i32.const 128
     call $~lib/rt/itcms/__new
     local.tee $7
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=8
     local.get $7
     local.get $6
     i32.store
     local.get $7
     local.get $6
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $7
     local.get $2
     i32.store offset=4
     local.get $7
     local.get $2
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     local.get $7
     local.get $3
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     local.get $7
     local.get $8
     i32.store offset=12
     local.get $7
     local.get $8
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $7
     local.get $4
     i32.store offset=16
     local.get $7
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     local.get $7
     local.get $5
     f64.store offset=24
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     br $__inlined_func$assembly/runtime/execution/context/ExecutionFrame#constructor@varargs$160
    end
    br $folding-inner1
   end
   local.tee $2
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $3
   local.get $2
   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $3
   i32.store offset=4
   local.get $2
   local.get $3
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   i32.load offset=8
   i32.const 1
   i32.add
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $2
   i32.store
   local.get $2
   call $~lib/array/Array<u32>#get:length
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $2
   local.get $0
   i32.load offset=4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=16
    local.tee $1
    i32.store offset=4
    local.get $0
    local.get $1
    call $~lib/array/Array<u32>#get:length
    i32.store offset=4
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/RISAEngine#setContext (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/runtime/RISAEngine#skipToEndIf (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 2976
  i32.store offset=12
  local.get $2
  local.get $3
  local.get $1
  i32.const 2976
  call $assembly/runtime/execution/controlFlow/ControlFlowManager#skipToMatching
  local.tee $1
  i32.const -1
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store
   local.get $0
   local.get $1
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/runtime/execution/stack/CallStackManager#pushCondition (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 44
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=24
   local.tee $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store
   local.get $3
   local.get $4
   i32.load offset=8
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 44
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   call $~lib/util/number/itoa64
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $5
   call $~lib/math/NativeMath.random
   call $~lib/number/F64#toString
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=12
   local.get $5
   local.get $6
   call $~lib/string/String#slice
   local.tee $5
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 118304
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=20
   i32.const 118308
   local.get $4
   i32.store
   i32.const 118304
   local.get $4
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 118304
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=20
   i32.const 118316
   local.get $5
   i32.store
   i32.const 118304
   local.get $5
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 118304
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 14928
   i32.store offset=20
   i32.const 118304
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 118352
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=24
   local.tee $5
   i32.store offset=32
   local.get $5
   call $~lib/array/Array<u32>#get:length
   i32.const 10
   call $~lib/number/I32#toString
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=28
   i32.const 118352
   local.get $5
   call $~lib/string/String#concat
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 118416
   i32.store offset=20
   i32.const 2
   global.set $~argumentsLength
   local.get $5
   i32.const 118416
   call $assembly/runtime/execution/context/ExecutionScope#constructor@varargs
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 132
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $6
   local.get $4
   i32.store
   local.get $6
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   local.get $2
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store8 offset=5
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $6
   local.get $5
   i32.store offset=8
   local.get $6
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $6
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=24
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $1
   local.get $6
   call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   i32.load offset=8
   i32.const 1
   i32.add
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/RISAEngine#skipToElseOrEndIf (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 2944
  i32.store offset=12
  local.get $2
  local.get $3
  local.get $1
  i32.const 2944
  call $assembly/runtime/execution/controlFlow/ControlFlowManager#skipToMatching
  local.tee $1
  i32.const -1
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store
   local.get $0
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/runtime/RISAEngine#skipToEndIf
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/runtime/instructions/flow/if/IfInstruction#execute (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  block $folding-inner0
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 0
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $0
   local.get $4
   call $assembly/runtime/RISAEngine#parseValue
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 1
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/runtime/argument/Argument#toString
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $4
   local.get $5
   call $~lib/string/String#toUpperCase
   local.tee $4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 2
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parseValue
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 117888
   i32.store offset=4
   local.get $4
   i32.const 117888
   call $~lib/string/String.__eq
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 117920
    i32.store offset=4
    local.get $4
    i32.const 117920
    call $~lib/string/String.__eq
   end
   if (result i32)
    local.get $2
    local.get $3
    f64.eq
   else
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 117952
    i32.store offset=4
    local.get $4
    i32.const 117952
    call $~lib/string/String.__eq
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 117984
     i32.store offset=4
     local.get $4
     i32.const 117984
     call $~lib/string/String.__eq
    end
    if (result i32)
     local.get $2
     local.get $3
     f64.ne
    else
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 118016
     i32.store offset=4
     local.get $4
     i32.const 118016
     call $~lib/string/String.__eq
     if (result i32)
      i32.const 1
     else
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 118048
      i32.store offset=4
      local.get $4
      i32.const 118048
      call $~lib/string/String.__eq
     end
     if (result i32)
      local.get $2
      local.get $3
      f64.lt
     else
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 118080
      i32.store offset=4
      local.get $4
      i32.const 118080
      call $~lib/string/String.__eq
      if (result i32)
       i32.const 1
      else
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 118112
       i32.store offset=4
       local.get $4
       i32.const 118112
       call $~lib/string/String.__eq
      end
      if (result i32)
       local.get $2
       local.get $3
       f64.le
      else
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 118144
       i32.store offset=4
       local.get $4
       i32.const 118144
       call $~lib/string/String.__eq
       if (result i32)
        i32.const 1
       else
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 118176
        i32.store offset=4
        local.get $4
        i32.const 118176
        call $~lib/string/String.__eq
       end
       if (result i32)
        local.get $2
        local.get $3
        f64.gt
       else
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 118208
        i32.store offset=4
        local.get $4
        i32.const 118208
        call $~lib/string/String.__eq
        if (result i32)
         i32.const 1
        else
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store
         global.get $~lib/memory/__stack_pointer
         i32.const 118240
         i32.store offset=4
         local.get $4
         i32.const 118240
         call $~lib/string/String.__eq
        end
        i32.eqz
        br_if $folding-inner0
        local.get $2
        local.get $3
        f64.ge
       end
      end
     end
    end
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/core/builders/QuantumCircuitBuilder#getGates
   local.tee $5
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $1
   local.get $5
   local.get $4
   call $assembly/runtime/execution/stack/CallStackManager#pushCondition
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.load offset=24
   local.tee $1
   i32.store
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 0
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load offset=24
    local.tee $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load offset=24
    local.tee $6
    i32.store offset=8
    local.get $1
    local.get $6
    call $~lib/array/Array<u32>#get:length
    i32.const 1
    i32.sub
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    local.get $4
    i32.store8 offset=4
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $0
   local.get $5
   call $assembly/runtime/RISAEngine#setContext
   local.get $4
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $assembly/runtime/RISAEngine#skipToElseOrEndIf
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/runtime/instructions/flow/ifcoh/IfcohInstruction#execute (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  block $folding-inner0
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 0
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $0
   local.get $3
   call $assembly/runtime/RISAEngine#parsePrime
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 1
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $0
   local.get $4
   call $assembly/runtime/RISAEngine#parsePrime
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 2
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   call $assembly/runtime/argument/Argument#toString
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $5
   local.get $6
   call $~lib/string/String#toUpperCase
   local.tee $5
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   i32.const 3
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $assembly/runtime/RISAEngine#parseValue
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/runtime/RISAEngine#getGlobalState
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $1
   local.get $6
   local.get $3
   local.get $4
   call $assembly/runtime/state/globalState/GlobalState#calculatePairwiseCoherence
   local.tee $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 117888
   i32.store offset=4
   local.get $5
   i32.const 117888
   call $~lib/string/String.__eq
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 117920
    i32.store offset=4
    local.get $5
    i32.const 117920
    call $~lib/string/String.__eq
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $2
    local.get $1
    f64.load
    f64.eq
   else
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 117952
    i32.store offset=4
    local.get $5
    i32.const 117952
    call $~lib/string/String.__eq
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 117984
     i32.store offset=4
     local.get $5
     i32.const 117984
     call $~lib/string/String.__eq
    end
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $2
     local.get $1
     f64.load
     f64.ne
    else
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 118016
     i32.store offset=4
     local.get $5
     i32.const 118016
     call $~lib/string/String.__eq
     if (result i32)
      i32.const 1
     else
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 118048
      i32.store offset=4
      local.get $5
      i32.const 118048
      call $~lib/string/String.__eq
     end
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      local.get $2
      local.get $1
      f64.load
      f64.gt
     else
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 118080
      i32.store offset=4
      local.get $5
      i32.const 118080
      call $~lib/string/String.__eq
      if (result i32)
       i32.const 1
      else
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 118112
       i32.store offset=4
       local.get $5
       i32.const 118112
       call $~lib/string/String.__eq
      end
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store
       local.get $2
       local.get $1
       f64.load
       f64.ge
      else
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 118144
       i32.store offset=4
       local.get $5
       i32.const 118144
       call $~lib/string/String.__eq
       if (result i32)
        i32.const 1
       else
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 118176
        i32.store offset=4
        local.get $5
        i32.const 118176
        call $~lib/string/String.__eq
       end
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store
        local.get $2
        local.get $1
        f64.load
        f64.lt
       else
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store
        global.get $~lib/memory/__stack_pointer
        i32.const 118208
        i32.store offset=4
        local.get $5
        i32.const 118208
        call $~lib/string/String.__eq
        if (result i32)
         i32.const 1
        else
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store
         global.get $~lib/memory/__stack_pointer
         i32.const 118240
         i32.store offset=4
         local.get $5
         i32.const 118240
         call $~lib/string/String.__eq
        end
        i32.eqz
        br_if $folding-inner0
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store
        local.get $2
        local.get $1
        f64.load
        f64.le
       end
      end
     end
    end
   end
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   call $assembly/core/builders/ProtocolMessageBuilder<assembly/tests/core-builders.test/MockProtocolMessage>#getTargetId
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   call $assembly/core/builders/QuantumCircuitBuilder#getGates
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   local.get $4
   local.get $1
   call $assembly/runtime/execution/stack/CallStackManager#pushCondition
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $assembly/runtime/RISAEngine#skipToElseOrEndIf
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<i32,f64>#get" (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $"~lib/map/Map<i32,f64>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 6192
   i32.const 6256
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/runtime/state/primeState/PrimeStateEngine#getPhase (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $0
  local.get $1
  call $"~lib/map/Map<i32,f64>#get"
  local.tee $2
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.gt_u
  if
   f64.const 0
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/runtime/state/primeState/PrimeStateEngine#getActivePrimes (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $0
  call $"~lib/map/Map<i32,i32>#keys"
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/instructions/quantum/observe/ObserveInstruction#execute (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.le_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  i32.const 0
  call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $0
  local.get $4
  call $assembly/runtime/RISAEngine#parsePrime
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $assembly/runtime/RISAEngine#getPrimeEngine
  local.tee $4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $assembly/runtime/RISAEngine#getRegisterState
  local.tee $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $5
  call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $5
  call $assembly/runtime/state/primeState/PrimeStateEngine#getPhase
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<u32>#get:length
  i32.const 2
  i32.ge_s
  if
   global.get $~lib/memory/__stack_pointer
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 1
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $6
   local.get $1
   call $assembly/runtime/argument/Argument#toString
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 118528
   i32.store offset=24
   local.get $1
   i32.const 118528
   call $~lib/string/String#concat
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $0
   local.get $6
   local.get $2
   i32.const 2
   call $assembly/runtime/state/registerState/RegisterState#setRegister
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 118560
   i32.store offset=24
   local.get $1
   i32.const 118560
   call $~lib/string/String#concat
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $3
   i32.const 3
   call $assembly/runtime/state/registerState/RegisterState#setRegister
  end
  call $~lib/math/NativeMath.random
  local.get $2
  local.get $2
  f64.mul
  f64.lt
  if
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   call $assembly/runtime/state/primeState/PrimeStateEngine#getActivePrimes
   local.tee $0
   i32.store offset=28
   local.get $0
   if
    i32.const 0
    local.set $1
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     call $~lib/array/Array<u32>#get:length
     local.get $1
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store
      local.get $5
      local.get $0
      local.get $1
      call $~lib/array/Array<i32>#__get
      local.tee $6
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       local.get $4
       local.get $6
       f64.const 1
       call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
      else
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       local.get $4
       local.get $6
       f64.const 0
       call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $assembly/runtime/memory/holographic/HolographicMemory#getPatternsByName (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
   local.tee $1
   i32.store offset=12
   local.get $1
   i32.eqz
   if
    call $~lib/set/Set<~lib/string/String>#constructor
    local.set $1
   end
   local.get $5
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.load offset=8
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $1
   call $~lib/array/Array<~lib/string/String>#constructor
   local.tee $7
   i32.store offset=4
   loop $for-loop|0
    local.get $1
    local.get $4
    i32.gt_s
    if
     local.get $6
     local.get $4
     i32.const 3
     i32.shl
     i32.add
     local.tee $8
     i32.load offset=4
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.load
      local.tee $8
      i32.store offset=8
      local.get $7
      local.get $2
      local.get $8
      call $~lib/array/Array<~lib/string/String>#__set
      local.get $2
      i32.const 1
      i32.add
      local.set $2
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   local.get $2
   call $~lib/array/Array<~lib/string/String>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $7
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 236
   i32.const 118592
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=24
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $2
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     local.get $7
     local.get $3
     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $4
     local.get $2
     local.get $5
     call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
     local.tee $2
     i32.store offset=28
     local.get $2
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      local.get $1
      local.get $2
      call $~lib/array/Array<assembly/runtime/execution/controlFlow/StackFrame>#push
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/memory/holographic/HolographicMemory#reconstruct (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#get"
   local.tee $8
   i32.store offset=12
   local.get $8
   if
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    call $~lib/bindings/dom/Date.now
    i64.trunc_sat_f64_s
    f64.convert_i64_s
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    local.get $8
    i32.load offset=32
    i32.const 1
    i32.add
    i32.store offset=32
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $8
   i32.store offset=8
   local.get $8
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   block $__inlined_func$assembly/runtime/state/primeState/IPrimeStateEngine#reset@override$3919
    local.get $2
    i32.const 8
    i32.sub
    i32.load
    i32.const 138
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 119640
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load
     local.tee $0
     i32.store
     local.get $0
     call $"~lib/map/Map<~lib/string/String,assembly/runtime/instructions/types/IInstructionHandler>#clear"
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load offset=4
     local.tee $0
     i32.store
     local.get $0
     call $"~lib/map/Map<u32,f64>#clear"
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$assembly/runtime/state/primeState/IPrimeStateEngine#reset@override$3919
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.load offset=8
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.load offset=8
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $6
   call $~lib/array/Array<i32>#constructor
   local.tee $7
   i32.store offset=4
   i32.const 0
   local.set $1
   loop $for-loop|0
    local.get $3
    local.get $6
    i32.lt_s
    if
     local.get $0
     local.get $3
     i32.const 24
     i32.mul
     i32.add
     local.tee $4
     i32.load offset=16
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store
      local.get $7
      local.get $1
      local.get $4
      i32.load
      call $~lib/array/Array<u32>#__set
      local.get $1
      i32.const 1
      i32.add
      local.set $1
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   local.get $1
   call $~lib/array/Array<~lib/string/String>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   local.get $7
   i32.store offset=12
   i32.const 0
   local.set $1
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     local.get $1
     call $~lib/array/Array<i32>#__get
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.load offset=8
     local.tee $3
     i32.store
     local.get $3
     local.get $0
     call $"~lib/map/Map<i32,f64>#get"
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     block $__inlined_func$assembly/runtime/state/primeState/IPrimeStateEngine#setAmplitude@override$3172
      local.get $2
      i32.const 8
      i32.sub
      i32.load
      i32.const 138
      i32.eq
      if
       local.get $2
       local.get $0
       local.get $5
       call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
       br $__inlined_func$assembly/runtime/state/primeState/IPrimeStateEngine#setAmplitude@override$3172
      end
      unreachable
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   block $__inlined_func$assembly/runtime/state/primeState/IPrimeStateEngine#normalize@override$3173
    local.get $2
    i32.const 8
    i32.sub
    i32.load
    i32.const 138
    i32.eq
    if
     local.get $2
     call $assembly/runtime/state/primeState/PrimeStateEngine#normalize
     br $__inlined_func$assembly/runtime/state/primeState/IPrimeStateEngine#normalize@override$3173
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/instructions/quantum/reconstruct/ReconstructInstruction#execute (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 2
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 28
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $2
   local.get $3
   call $assembly/runtime/argument/Argument#toString
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 1
   call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $3
   local.get $1
   call $assembly/runtime/argument/Argument#toString
   local.tee $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $0
   call $assembly/runtime/RISAEngine#getMemory
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   local.get $2
   call $assembly/runtime/memory/holographic/HolographicMemory#getPatternsByName
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/array/Array<u32>#get:length
   i32.const 0
   i32.gt_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 0
    call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
   else
    i32.const 0
   end
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $2
   i32.store offset=20
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=24
    local.get $0
    call $assembly/runtime/RISAEngine#getMemory
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load
    local.tee $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=24
    local.get $0
    call $assembly/runtime/RISAEngine#getPrimeEngine
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $3
    local.get $2
    local.get $4
    call $assembly/runtime/memory/holographic/HolographicMemory#reconstruct
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    local.get $0
    call $assembly/runtime/RISAEngine#getRegisterState
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $0
    local.get $1
    f64.const 1
    f64.const 0
    local.get $2
    select
    i32.const 6
    call $assembly/runtime/state/registerState/RegisterState#setRegister
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    local.get $0
    call $assembly/runtime/RISAEngine#getRegisterState
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $0
    local.get $1
    f64.const 0
    i32.const 6
    call $assembly/runtime/state/registerState/RegisterState#setRegister
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/state/globalState/GlobalState#getEntropy (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/runtime/state/globalState/GlobalState#updateEntropy (param $0 i32) (param $1 f64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $4
  i32.store offset=4
  local.get $3
  local.get $4
  f64.load offset=24
  local.get $1
  f64.add
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $4
  i32.store offset=4
  local.get $4
  f64.load offset=8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $4
  i32.store offset=4
  local.get $4
  f64.load offset=16
  f64.neg
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $4
  i32.store offset=4
  local.get $3
  local.get $1
  local.get $5
  local.get $4
  f64.load offset=24
  f64.mul
  call $~lib/math/NativeMath.exp
  f64.mul
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $3
  i32.store
  local.get $3
  local.get $2
  f64.convert_i64_s
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 3584
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $0
  i32.store offset=8
  local.get $0
  f64.load
  local.set $1
  block $__inlined_func$assembly/runtime/state/registerState/IRegisterState#setRegister@override$3197
   local.get $3
   i32.const 8
   i32.sub
   i32.load
   i32.const 134
   i32.eq
   if
    local.get $3
    i32.const 3584
    local.get $1
    i32.const 5
    call $assembly/runtime/state/registerState/RegisterState#setRegister
    br $__inlined_func$assembly/runtime/state/registerState/IRegisterState#setRegister@override$3197
   end
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/runtime/instructions/resonance/factorize/FactorizeInstruction#execute (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<u32>#get:length
  i32.const 2
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  i32.const 0
  call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $2
  call $assembly/runtime/RISAEngine#parseValue
  f64.floor
  i32.trunc_sat_f64_s
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  call $assembly/runtime/argument/Argument#toString
  local.tee $6
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 81
  i32.const 118672
  call $~lib/rt/__newArray
  local.tee $4
  i32.store offset=16
  i32.const 2
  local.set $1
  loop $for-loop|0
   local.get $1
   local.get $1
   i32.mul
   local.get $3
   i32.le_s
   if
    loop $while-continue|1
     local.get $3
     local.get $1
     i32.rem_s
     i32.eqz
     if
      block $__inlined_func$assembly/runtime/RISAEngine#isPrime$3201 (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       i32.const 0
       local.get $1
       i32.const 2
       i32.lt_s
       br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$3201
       drop
       i32.const 1
       local.get $1
       i32.const 2
       i32.eq
       br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$3201
       drop
       i32.const 0
       local.get $1
       i32.const 1
       i32.and
       i32.eqz
       br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$3201
       drop
       i32.const 3
       local.set $2
       loop $for-loop|00
        local.get $2
        local.get $2
        i32.mul
        local.get $1
        i32.le_s
        if
         i32.const 0
         local.get $1
         local.get $2
         i32.rem_s
         i32.eqz
         br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$3201
         drop
         local.get $2
         i32.const 2
         i32.add
         local.set $2
         br $for-loop|00
        end
       end
       i32.const 1
      end
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       local.get $4
       local.get $1
       call $~lib/array/Array<u32>#push
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       local.get $0
       call $assembly/runtime/RISAEngine#getPrimeEngine
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store
       local.get $2
       local.get $1
       call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       local.get $0
       call $assembly/runtime/RISAEngine#getPrimeEngine
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store
       local.get $2
       local.get $1
       local.get $5
       f64.const 0.1
       f64.add
       f64.const 1
       f64.min
       call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
      end
      local.get $3
      local.get $1
      i32.div_s
      local.set $3
      br $while-continue|1
     end
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  local.get $3
  i32.const 1
  i32.gt_s
  if (result i32)
   block $__inlined_func$assembly/runtime/RISAEngine#isPrime$3202 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    i32.const 0
    local.get $3
    i32.const 2
    i32.lt_s
    br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$3202
    drop
    i32.const 1
    local.get $3
    i32.const 2
    i32.eq
    br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$3202
    drop
    i32.const 0
    local.get $3
    i32.const 1
    i32.and
    i32.eqz
    br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$3202
    drop
    i32.const 3
    local.set $2
    loop $for-loop|01
     local.get $2
     local.get $2
     i32.mul
     local.get $3
     i32.le_s
     if
      i32.const 0
      local.get $3
      local.get $2
      i32.rem_s
      i32.eqz
      br_if $__inlined_func$assembly/runtime/RISAEngine#isPrime$3202
      drop
      local.get $2
      i32.const 2
      i32.add
      local.set $2
      br $for-loop|01
     end
    end
    i32.const 1
   end
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $3
   call $~lib/array/Array<u32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/runtime/RISAEngine#getPrimeEngine
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   local.get $3
   call $assembly/runtime/state/primeState/PrimeStateEngine#getAmplitude
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   call $assembly/runtime/RISAEngine#getPrimeEngine
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   local.get $3
   local.get $5
   f64.const 0.1
   f64.add
   f64.const 1
   f64.min
   call $assembly/runtime/state/primeState/PrimeStateEngine#setAmplitude
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $0
  call $assembly/runtime/RISAEngine#getRegisterState
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $0
  local.get $6
  local.get $4
  call $~lib/array/Array<u32>#get:length
  f64.convert_i32_s
  i32.const 8
  call $assembly/runtime/state/registerState/RegisterState#setRegister
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $assembly/runtime/state/primeState/PrimeStateEngine#normalize (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.load offset=8
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.load offset=16
   local.set $7
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 119640
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 187
   call $~lib/rt/itcms/__new
   local.tee $8
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i32.const 0
   i32.store
   local.get $8
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   i32.const 0
   i32.store offset=12
   local.get $7
   i32.const 268435455
   i32.gt_u
   if
    i32.const 1792
    i32.const 6144
    i32.const 70
    i32.const 60
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   local.get $7
   local.get $7
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $9
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $8
   local.get $4
   i32.store
   local.get $8
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   local.get $9
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   local.get $7
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   loop $for-loop|0
    local.get $2
    local.get $7
    i32.lt_s
    if
     local.get $6
     local.get $2
     i32.const 12
     i32.mul
     i32.add
     local.tee $4
     i32.load offset=8
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.load offset=4
      local.tee $4
      i32.store offset=8
      local.get $8
      local.get $1
      local.get $4
      call $~lib/array/Array<~lib/string/String>#__set
      local.get $1
      i32.const 1
      i32.add
      local.set $1
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   local.get $1
   call $~lib/array/Array<~lib/string/String>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $8
   i32.store offset=8
   i32.const 0
   local.set $1
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     local.get $1
     call $~lib/array/Array<assembly/runtime/IRISAInstruction>#__get
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $3
     local.get $2
     call $assembly/types/Complex#abs
     f64.const 2
     call $~lib/math/NativeMath.pow
     f64.add
     local.set $3
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|00
    end
   end
   local.get $3
   f64.sqrt
   local.tee $3
   f64.const 0
   f64.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 28
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $"~lib/map/Map<i32,i32>#keys"
   local.tee $1
   i32.store offset=12
   i32.const 0
   local.set $2
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $4
     call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#get"
     local.tee $5
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $6
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=20
     local.get $3
     f64.const 0
     call $assembly/types/Complex#constructor
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=24
     local.get $5
     local.get $7
     call $assembly/types/Complex#div
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $6
     local.get $4
     local.get $5
     call $"~lib/map/Map<i32,assembly/runtime/execution/controlFlow/ConditionBlock>#set"
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 152432
  i32.const 152480
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/object/Object#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1792
   i32.const 1840
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.set $4
  local.get $0
  local.get $1
  i32.shl
  local.tee $5
  i32.const 1
  call $~lib/rt/itcms/__new
  local.set $1
  local.get $3
  if
   local.get $1
   local.get $3
   local.get $5
   memory.copy
  end
  local.get $4
  local.get $1
  i32.store
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.tee $2
  local.get $1
  i32.store
  local.get $2
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $5
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/util/number/utoa32 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 2
  i32.lt_s
  local.get $1
  i32.const 36
  i32.gt_s
  i32.or
  if
   i32.const 15024
   i32.const 15152
   i32.const 350
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 15216
   return
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $0
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $0
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $0
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $0
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $0
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $0
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $0
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.tee $1
   i32.const 1
   i32.shl
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $2
   local.get $0
   local.get $1
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 31
    local.get $0
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.tee $1
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store
    local.get $0
    i64.extend_i32_u
    local.set $3
    loop $while-continue|0
     local.get $1
     i32.const 2
     i32.ge_u
     if
      local.get $2
      local.get $1
      i32.const 2
      i32.sub
      local.tee $1
      i32.const 1
      i32.shl
      i32.add
      local.get $3
      i32.wrap_i64
      i32.const 255
      i32.and
      i32.const 2
      i32.shl
      i32.const 15648
      i32.add
      i32.load
      i32.store
      local.get $3
      i64.const 8
      i64.shr_u
      local.set $3
      br $while-continue|0
     end
    end
    local.get $1
    i32.const 1
    i32.and
    if
     local.get $2
     local.get $3
     i32.wrap_i64
     i32.const 6
     i32.shl
     i32.const 15648
     i32.add
     i32.load16_u
     i32.store16
    end
   else
    global.get $~lib/memory/__stack_pointer
    block $__inlined_func$~lib/util/number/ulog_base$3233 (result i32)
     local.get $0
     i64.extend_i32_u
     local.set $4
     local.get $1
     i32.popcnt
     i32.const 1
     i32.eq
     if
      i32.const 63
      local.get $4
      i64.clz
      i32.wrap_i64
      i32.sub
      i32.const 31
      local.get $1
      i32.clz
      i32.sub
      i32.div_u
      i32.const 1
      i32.add
      br $__inlined_func$~lib/util/number/ulog_base$3233
     end
     local.get $1
     i64.extend_i32_s
     local.tee $5
     local.set $3
     i32.const 1
     local.set $2
     loop $while-continue|01
      local.get $3
      local.get $4
      i64.le_u
      if
       local.get $4
       local.get $3
       i64.div_u
       local.set $4
       local.get $3
       local.get $3
       i64.mul
       local.set $3
       local.get $2
       i32.const 1
       i32.shl
       local.set $2
       br $while-continue|01
      end
     end
     loop $while-continue|1
      local.get $4
      i64.const 0
      i64.ne
      if
       local.get $4
       local.get $5
       i64.div_u
       local.set $4
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $while-continue|1
      end
     end
     local.get $2
     i32.const 1
     i32.sub
    end
    local.tee $6
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store
    local.get $2
    local.get $0
    i64.extend_i32_u
    local.get $6
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/util/number/itoa64 (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i64.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 15216
   return
  end
  i64.const 0
  local.get $0
  i64.sub
  local.get $0
  local.get $0
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  i32.const 1
  i32.shl
  local.tee $2
  select
  local.tee $0
  i64.const 4294967295
  i64.le_u
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.wrap_i64
   local.tee $1
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $1
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $1
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $1
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $1
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $1
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $1
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $1
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.tee $4
   i32.const 1
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   local.get $2
   local.get $3
   i32.add
   local.get $1
   local.get $4
   call $~lib/util/number/utoa32_dec_lut
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i64.const 1000000000000000
   i64.lt_u
   if (result i32)
    local.get $0
    i64.const 1000000000000
    i64.lt_u
    if (result i32)
     local.get $0
     i64.const 100000000000
     i64.ge_u
     i32.const 10
     i32.add
     local.get $0
     i64.const 10000000000
     i64.ge_u
     i32.add
    else
     local.get $0
     i64.const 100000000000000
     i64.ge_u
     i32.const 13
     i32.add
     local.get $0
     i64.const 10000000000000
     i64.ge_u
     i32.add
    end
   else
    local.get $0
    i64.const 100000000000000000
    i64.lt_u
    if (result i32)
     local.get $0
     i64.const 10000000000000000
     i64.ge_u
     i32.const 16
     i32.add
    else
     local.get $0
     i64.const -8446744073709551616
     i64.ge_u
     i32.const 18
     i32.add
     local.get $0
     i64.const 1000000000000000000
     i64.ge_u
     i32.add
    end
   end
   local.tee $1
   i32.const 1
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   local.get $2
   local.get $3
   i32.add
   local.set $5
   loop $while-continue|0
    local.get $0
    i64.const 100000000
    i64.ge_u
    if
     local.get $5
     local.get $1
     i32.const 4
     i32.sub
     local.tee $1
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $0
     i64.const 100000000
     i64.div_u
     local.tee $0
     i64.const 100000000
     i64.mul
     i64.sub
     i32.wrap_i64
     local.tee $4
     i32.const 10000
     i32.rem_u
     local.tee $6
     i32.const 100
     i32.div_u
     i32.const 2
     i32.shl
     i32.const 15228
     i32.add
     i64.load32_u
     local.get $6
     i32.const 100
     i32.rem_u
     i32.const 2
     i32.shl
     i32.const 15228
     i32.add
     i64.load32_u
     i64.const 32
     i64.shl
     i64.or
     i64.store
     local.get $5
     local.get $1
     i32.const 4
     i32.sub
     local.tee $1
     i32.const 1
     i32.shl
     i32.add
     local.get $4
     i32.const 10000
     i32.div_u
     local.tee $4
     i32.const 100
     i32.div_u
     i32.const 2
     i32.shl
     i32.const 15228
     i32.add
     i64.load32_u
     local.get $4
     i32.const 100
     i32.rem_u
     i32.const 2
     i32.shl
     i32.const 15228
     i32.add
     i64.load32_u
     i64.const 32
     i64.shl
     i64.or
     i64.store
     br $while-continue|0
    end
   end
   local.get $5
   local.get $0
   i32.wrap_i64
   local.get $1
   call $~lib/util/number/utoa32_dec_lut
  end
  local.get $2
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/entropy-viz/EntropyEvolutionTracker#getEntropyGradient (param $0 f64) (param $1 f64) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 2
  global.set $~argumentsLength
  local.get $0
  f64.const 0.001
  f64.add
  local.get $1
  local.get $2
  i32.load
  call_indirect (type $8)
  local.set $3
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  local.get $0
  f64.const -0.001
  f64.add
  local.get $1
  local.get $2
  i32.load
  call_indirect (type $8)
  f64.sub
  f64.const 0.002
  f64.div
  local.set $3
  i32.const 2
  global.set $~argumentsLength
  local.get $0
  local.get $1
  f64.const 0.001
  f64.add
  local.get $2
  i32.load
  call_indirect (type $8)
  local.set $4
  i32.const 2
  global.set $~argumentsLength
  local.get $4
  local.get $0
  local.get $1
  f64.const -0.001
  f64.add
  local.get $2
  i32.load
  call_indirect (type $8)
  f64.sub
  f64.const 0.002
  f64.div
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 3
  i32.const 7
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load offset=4
  i32.store offset=4
  local.get $2
  i32.const 0
  local.get $3
  call $~lib/array/Array<f64>#__set
  local.get $2
  i32.const 1
  local.get $0
  call $~lib/array/Array<f64>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/entropy-viz/getGlobalSampler (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $assembly/entropy-viz/globalSampler
  i32.eqz
  if
   i32.const 50
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   global.set $assembly/entropy-viz/globalSampler
   i32.const 100
   call $assembly/entropy-viz/EntropyEvolutionTracker#constructor
   global.set $assembly/entropy-viz/globalTracker
  end
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/entropy-viz/globalSampler
  local.tee $0
  i32.store
  local.get $0
  i32.eqz
  if
   i32.const 25808
   i32.const 116688
   i32.const 265
   i32.const 10
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/entropy-viz/getGlobalTracker (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 119640
  i32.lt_s
  if
   i32.const 152432
   i32.const 152480
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $assembly/entropy-viz/globalTracker
  i32.eqz
  if
   i32.const 50
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   global.set $assembly/entropy-viz/globalSampler
   i32.const 100
   call $assembly/entropy-viz/EntropyEvolutionTracker#constructor
   global.set $assembly/entropy-viz/globalTracker
  end
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/entropy-viz/globalTracker
  local.tee $0
  i32.store
  local.get $0
  i32.eqz
  if
   i32.const 25808
   i32.const 116688
   i32.const 272
   i32.const 10
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
)
